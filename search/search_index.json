{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u9996\u9875 \u00b6 \u672c\u4e13\u680f\u4e3aPython\u7cfb\u5217\u7684\u57fa\u7840\u6559\u7a0b\uff0c\u6559\u7a0b\u6db5\u76d6\u4ee5\u4e0b\u5185\u5bb9\uff1a Python\u57fa\u7840\u8bfe\u7a0b\uff08\u6b63\u5728\u66f4\u65b0\uff09 Python\u8fdb\u9636\u8bfe\u7a0b\uff08\u6b63\u5728\u66f4\u65b0\uff09 Python\u722c\u866b\u8bfe\u7a0b\uff08\u5f85\u66f4\u65b0\uff09 Python\u6570\u636e\u5206\u6790\uff08\u5f85\u66f4\u65b0\uff09 \u76ee\u524d\u6559\u7a0b\u6b63\u5728\u6301\u7eed\u66f4\u65b0\u4e2d\uff0c\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8\u3002 \u8bfe\u7a0b\u4ecb\u7ecd \u00b6 \u4ecb\u7ecd\u6bcf\u7c7b\u7684\u5927\u81f4\u5185\u5bb9\uff0c\u4ee5\u53ca\u9002\u5408\u4eba\u7fa4\u3002\u7531\u4e8e\u6bcf\u7c7b\u8bfe\u7a0b\u9700\u8981\u4e00\u5b9a\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u5b66\u4e60\uff0c\u6700\u597d\u662f\u63d0\u524d\u5b66\u597d\u57fa\u7840\u77e5\u8bc6\u3002 Python\u57fa\u7840\u8bfe\u7a0b\u4ecb\u7ecd \u00b6 \u57fa\u7840\u8bfe\u7a0b\u4e3b\u8981\u9488\u5bf90\u57fa\u7840\u7684\u5b66\u4e60\u8005\uff0c\u8bfe\u7a0b\u6db5\u76d6Python\u7684\u57fa\u672c\u8bed\u6cd5\uff0c\u4ee5\u53ca\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002\u8bed\u6cd5\u5305\u542b\u8d4b\u503c\u3001\u8ba1\u7b97\u3001\u5224\u65ad\u3001\u5faa\u73af\u7b49\u64cd\u4f5c\uff1b \u6570\u636e\u7c7b\u578b\u5305\u62ec\u6574\u578b\u3001\u6d6e\u70b9\u578b\u3001\u5b57\u7b26\u578b\u3001\u5e03\u5c14\u503c\u3001\u5217\u8868\u3001\u5143\u7956\u548c\u5b57\u5178\uff0c\u521d\u6b65\u5b66\u4e60\u5230\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u3002 Python\u8fdb\u9636\u8bfe\u7a0b \u00b6 \u8fdb\u9636\u8bfe\u7a0b\u9002\u5408\u6709\u4e00\u5b9aPython\u57fa\u7840\uff0c\u5e0c\u671b\u80fd\u89e3\u51b3\u5de5\u4f5c\u4e2d\u5404\u7c7b\u7684\u95ee\u9898\u804c\u573a\u4eba\u58eb\uff0c\u5e0c\u671b\u5b9e\u73b0\u4e00\u5b9a\u7a0b\u5ea6\u7684\u81ea\u52a8\u5316\u529e\u516c\u7684\u5b66\u4e60\u8005\u3002\u5185\u5bb9\u6db5\u76d6Python\u6279\u91cf\u64cd\u4f5c\u6587\u4ef6\u53ca\u6587\u4ef6\u5939\u3001\u8bfb\u5199Excel\u6587\u4ef6\u3001\u8bfb\u5199word\u6587\u6863\uff0c\u4ee5\u53ca\u8bfb\u5199\u5408\u5e76PDF\u6587\u4ef6\uff0c\u81ea\u52a8\u4e0b\u8f7d\u56fe\u7247\u7b49\u5c0f\u6587\u4ef6\uff0c\u64cd\u4f5c\u5c0f\u578b\u6570\u636e\u5e93\uff1b \u8bf4\u660e \u76ee\u524d\u662f\u51ed\u501f\u6211\u4e2a\u4eba\u7684\u80fd\u529b\u5728\u66f4\u65b0\uff0c\u5185\u5bb9\u7684\u8d28\u91cf\u4ee5\u53ca\u66f4\u65b0\u7684\u9891\u6b21\uff0c\u6211\u53ea\u80fd\u5c3d\u529b\u4fdd\u8bc1\u4e86\uff0c\u5982\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8fd8\u8bf7\u8054\u7cfb\u6211\u3002 \u6b22\u8fce\u5173\u6ce8 \u00b6 \u52a0\u5165Python QQ\u5b66\u4e60\u7fa4\uff08\u76ee\u524d\u8fd8\u672a\u521b\u5efa\u5fae\u4fe1\u7fa4\uff09, \u4e2a\u4eba\u535a\u5ba2 \u548c\u5173\u6ce8\u6211\u7684\u4e2a\u4eba\u516c\u4f17\u53f7\u3002PC\u7aef\u4f1a\u5728\u672c\u4e13\u680f\u66f4\u65b0\uff0c\u624b\u673a\u79fb\u52a8\u7aef\u5728\u5fae\u4fe1\u516c\u4f17\u53f7\u66f4\u65b0\uff0c\u5c3d\u60c5\u8bfb\u8005\u5173\u6ce8\u3002 QQ\u4ea4\u6d41\u7fa4\uff1a 533028957 \u4e2a\u4ebaQQ\uff1a971516583 \u5fae\u4fe1\u516c\u4f17\u53f7\uff1a","title":"\u9996\u9875"},{"location":"#_1","text":"\u672c\u4e13\u680f\u4e3aPython\u7cfb\u5217\u7684\u57fa\u7840\u6559\u7a0b\uff0c\u6559\u7a0b\u6db5\u76d6\u4ee5\u4e0b\u5185\u5bb9\uff1a Python\u57fa\u7840\u8bfe\u7a0b\uff08\u6b63\u5728\u66f4\u65b0\uff09 Python\u8fdb\u9636\u8bfe\u7a0b\uff08\u6b63\u5728\u66f4\u65b0\uff09 Python\u722c\u866b\u8bfe\u7a0b\uff08\u5f85\u66f4\u65b0\uff09 Python\u6570\u636e\u5206\u6790\uff08\u5f85\u66f4\u65b0\uff09 \u76ee\u524d\u6559\u7a0b\u6b63\u5728\u6301\u7eed\u66f4\u65b0\u4e2d\uff0c\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8\u3002","title":"\u9996\u9875"},{"location":"#_2","text":"\u4ecb\u7ecd\u6bcf\u7c7b\u7684\u5927\u81f4\u5185\u5bb9\uff0c\u4ee5\u53ca\u9002\u5408\u4eba\u7fa4\u3002\u7531\u4e8e\u6bcf\u7c7b\u8bfe\u7a0b\u9700\u8981\u4e00\u5b9a\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u5b66\u4e60\uff0c\u6700\u597d\u662f\u63d0\u524d\u5b66\u597d\u57fa\u7840\u77e5\u8bc6\u3002","title":"\u8bfe\u7a0b\u4ecb\u7ecd"},{"location":"#python","text":"\u57fa\u7840\u8bfe\u7a0b\u4e3b\u8981\u9488\u5bf90\u57fa\u7840\u7684\u5b66\u4e60\u8005\uff0c\u8bfe\u7a0b\u6db5\u76d6Python\u7684\u57fa\u672c\u8bed\u6cd5\uff0c\u4ee5\u53ca\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002\u8bed\u6cd5\u5305\u542b\u8d4b\u503c\u3001\u8ba1\u7b97\u3001\u5224\u65ad\u3001\u5faa\u73af\u7b49\u64cd\u4f5c\uff1b \u6570\u636e\u7c7b\u578b\u5305\u62ec\u6574\u578b\u3001\u6d6e\u70b9\u578b\u3001\u5b57\u7b26\u578b\u3001\u5e03\u5c14\u503c\u3001\u5217\u8868\u3001\u5143\u7956\u548c\u5b57\u5178\uff0c\u521d\u6b65\u5b66\u4e60\u5230\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u3002","title":"Python\u57fa\u7840\u8bfe\u7a0b\u4ecb\u7ecd"},{"location":"#python_1","text":"\u8fdb\u9636\u8bfe\u7a0b\u9002\u5408\u6709\u4e00\u5b9aPython\u57fa\u7840\uff0c\u5e0c\u671b\u80fd\u89e3\u51b3\u5de5\u4f5c\u4e2d\u5404\u7c7b\u7684\u95ee\u9898\u804c\u573a\u4eba\u58eb\uff0c\u5e0c\u671b\u5b9e\u73b0\u4e00\u5b9a\u7a0b\u5ea6\u7684\u81ea\u52a8\u5316\u529e\u516c\u7684\u5b66\u4e60\u8005\u3002\u5185\u5bb9\u6db5\u76d6Python\u6279\u91cf\u64cd\u4f5c\u6587\u4ef6\u53ca\u6587\u4ef6\u5939\u3001\u8bfb\u5199Excel\u6587\u4ef6\u3001\u8bfb\u5199word\u6587\u6863\uff0c\u4ee5\u53ca\u8bfb\u5199\u5408\u5e76PDF\u6587\u4ef6\uff0c\u81ea\u52a8\u4e0b\u8f7d\u56fe\u7247\u7b49\u5c0f\u6587\u4ef6\uff0c\u64cd\u4f5c\u5c0f\u578b\u6570\u636e\u5e93\uff1b \u8bf4\u660e \u76ee\u524d\u662f\u51ed\u501f\u6211\u4e2a\u4eba\u7684\u80fd\u529b\u5728\u66f4\u65b0\uff0c\u5185\u5bb9\u7684\u8d28\u91cf\u4ee5\u53ca\u66f4\u65b0\u7684\u9891\u6b21\uff0c\u6211\u53ea\u80fd\u5c3d\u529b\u4fdd\u8bc1\u4e86\uff0c\u5982\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8fd8\u8bf7\u8054\u7cfb\u6211\u3002","title":"Python\u8fdb\u9636\u8bfe\u7a0b"},{"location":"#_3","text":"\u52a0\u5165Python QQ\u5b66\u4e60\u7fa4\uff08\u76ee\u524d\u8fd8\u672a\u521b\u5efa\u5fae\u4fe1\u7fa4\uff09, \u4e2a\u4eba\u535a\u5ba2 \u548c\u5173\u6ce8\u6211\u7684\u4e2a\u4eba\u516c\u4f17\u53f7\u3002PC\u7aef\u4f1a\u5728\u672c\u4e13\u680f\u66f4\u65b0\uff0c\u624b\u673a\u79fb\u52a8\u7aef\u5728\u5fae\u4fe1\u516c\u4f17\u53f7\u66f4\u65b0\uff0c\u5c3d\u60c5\u8bfb\u8005\u5173\u6ce8\u3002 QQ\u4ea4\u6d41\u7fa4\uff1a 533028957 \u4e2a\u4ebaQQ\uff1a971516583 \u5fae\u4fe1\u516c\u4f17\u53f7\uff1a","title":"\u6b22\u8fce\u5173\u6ce8"},{"location":"about/","text":"\u5173\u4e8e \u00b6 \u4e92\u8054\u7f51\u7684\u5f00\u653e\u6027\uff0c\u6bcf\u4e2a\u4eba\u90fd\u83b7\u5f97\u4e86\u5f88\u5927\u7684\u4fbf\u5229\uff0c\u5c24\u5176\u662f\u5bf9\u6211\u4eec\u4f5c\u4e3a\u4e92\u8054\u7f51\u4ece\u4e1a\u8005\u3002\u6211\u4eec\u5728\u4eab\u53d7\u4e86\u522b\u4eba\u63d0\u4f9b\u4fbf\u5229\u7684\u540c\u65f6\uff0c\u4e5f\u80fd\u7ed9\u522b\u4eba\u63d0\u4f9b\u4fbf\u5229\uff0c\u4e92\u52a9\u4e92\u60e0\u5427\u3002 2016\u5e74\u6211\u53d1\u5e03\u4e86\u4e24\u4e2a\u8bfe\u7a0b\uff0cOpenFOAM\u57fa\u7840\u8bfe\u7a0b\u548cLatex\u8bfe\u7a0b\uff0c\u53d6\u5f97\u4e86\u5c0f\u5c0f\u7684\u6210\u529f\uff0c\u5206\u522b\u5728\u4f18\u9177\uff082016\u5e74\u4e0a\u4f20\uff09\u548cB\u7ad9\uff082019\u5e74\u4e0a\u4f20\uff09\u7d2f\u8ba1\u89c2\u770b\u8d85\u8fc74\u4e07\uff0c\u8d44\u6599\u4e0b\u8f7d\u5206\u4eab\u8fc7\u4e07\u3002\u8986\u76d6\u5bf9\u8c61\u4e3b\u8981\u662f\u56fd\u5185\u6d41\u4f53\u529b\u5b66\u4e13\u4e1a\u7855\u58eb\uff0c\u5c11\u6570\u535a\u58eb\u4ee5\u53ca\u6d77\u5916\u5b66\u4e60\u8005\u3002 \u4efb\u4f55\u884c\u4e1a\u60f3\u8981\u53d1\u5c55\u597d\uff0c\u9700\u8981\u66f4\u591a\u7684\u4eba\u52a0\u5165\u8fdb\u6765\uff0c\u5171\u540c\u52aa\u529b\u53d1\u5c55\u58ee\u5927\u3002\u884c\u4e1a\u5185\u867d\u7136\u5df2\u6709\u5f88\u591a\u9ad8\u8d28\u91cf\u7684\u8d44\u6599\uff0c\u5165\u95e8\u7684\u8d44\u6599\u4e5f\u4e0d\u5c11\uff0c\u5982 \u5ed6\u96ea\u5cf0\u7684\u5b98\u7f51 \uff0c\u5b66\u4e60\u5185\u5bb9\u5f88\u7cfb\u7edf\uff0c\u4f46\u60f3\u8981\u505a\u5230\u5168\u9762\u662f\u4e00\u4ef6\u5f88\u56f0\u96be\u7684\u4e8b\u60c5\uff0c\u6bd5\u7adf\u4e00\u4e2a\u4eba\u7684\u65f6\u95f4\u7cbe\u529b\u662f\u6709\u9650\u7684\u3002\u56e0\u6b64\u6211\u4e5f\u5e0c\u671b\u80fd\u591f\u4e3a\u6b64\u505a\u70b9\u4e8b\u60c5\u3002 \u4e2a\u4eba\u8054\u7cfb\u65b9\u5f0f \u00b6 \u90ae\u7bb1\uff1a cj194832@163.com \uff08\u6b22\u8fce\u90ae\u4ef6\uff09 twtter\uff1a VinctChanx QQ\uff1a 971516583 \u5fae\u4fe1\u516c\u4f17\u53f7\uff1a math188 \u6216\u8005 \u6570\u5b66\u7f16\u7a0b \u4f5c\u8005\u4ecb\u7ecd \u00b6 \u672c\u4eba\u6bd5\u4e1a\u4e8e\u9655\u897f\u5e08\u8303\u5927\u5b66\u7269\u7406\u5b66\u4e13\u4e1a\uff0c\u6bd5\u4e1a\u4ee5\u540e\u76f8\u7ee7\u4ece\u4e8bPython\u5f00\u53d1\u5de5\u4f5c\uff0c\u6570\u636e\u5206\u6790\u4e0e\u6316\u6398\uff0c\u4ee5\u53ca\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u5de5\u4f5c\u3002\u5de5\u4f5c\u7ecf\u5386\u4e0a\u7b97\u4e0d\u4e0a\u8d44\u6df1\uff0c\u4f46\u51ed\u501f\u81ea\u5df1\u7684\u52aa\u529b\u4e0e\u575a\u6301\u4e5f\u53d6\u5f97\u4e0d\u9519\u7684\u5b66\u4e60\u6548\u679c\u3002","title":"\u5173\u4e8e"},{"location":"about/#_1","text":"\u4e92\u8054\u7f51\u7684\u5f00\u653e\u6027\uff0c\u6bcf\u4e2a\u4eba\u90fd\u83b7\u5f97\u4e86\u5f88\u5927\u7684\u4fbf\u5229\uff0c\u5c24\u5176\u662f\u5bf9\u6211\u4eec\u4f5c\u4e3a\u4e92\u8054\u7f51\u4ece\u4e1a\u8005\u3002\u6211\u4eec\u5728\u4eab\u53d7\u4e86\u522b\u4eba\u63d0\u4f9b\u4fbf\u5229\u7684\u540c\u65f6\uff0c\u4e5f\u80fd\u7ed9\u522b\u4eba\u63d0\u4f9b\u4fbf\u5229\uff0c\u4e92\u52a9\u4e92\u60e0\u5427\u3002 2016\u5e74\u6211\u53d1\u5e03\u4e86\u4e24\u4e2a\u8bfe\u7a0b\uff0cOpenFOAM\u57fa\u7840\u8bfe\u7a0b\u548cLatex\u8bfe\u7a0b\uff0c\u53d6\u5f97\u4e86\u5c0f\u5c0f\u7684\u6210\u529f\uff0c\u5206\u522b\u5728\u4f18\u9177\uff082016\u5e74\u4e0a\u4f20\uff09\u548cB\u7ad9\uff082019\u5e74\u4e0a\u4f20\uff09\u7d2f\u8ba1\u89c2\u770b\u8d85\u8fc74\u4e07\uff0c\u8d44\u6599\u4e0b\u8f7d\u5206\u4eab\u8fc7\u4e07\u3002\u8986\u76d6\u5bf9\u8c61\u4e3b\u8981\u662f\u56fd\u5185\u6d41\u4f53\u529b\u5b66\u4e13\u4e1a\u7855\u58eb\uff0c\u5c11\u6570\u535a\u58eb\u4ee5\u53ca\u6d77\u5916\u5b66\u4e60\u8005\u3002 \u4efb\u4f55\u884c\u4e1a\u60f3\u8981\u53d1\u5c55\u597d\uff0c\u9700\u8981\u66f4\u591a\u7684\u4eba\u52a0\u5165\u8fdb\u6765\uff0c\u5171\u540c\u52aa\u529b\u53d1\u5c55\u58ee\u5927\u3002\u884c\u4e1a\u5185\u867d\u7136\u5df2\u6709\u5f88\u591a\u9ad8\u8d28\u91cf\u7684\u8d44\u6599\uff0c\u5165\u95e8\u7684\u8d44\u6599\u4e5f\u4e0d\u5c11\uff0c\u5982 \u5ed6\u96ea\u5cf0\u7684\u5b98\u7f51 \uff0c\u5b66\u4e60\u5185\u5bb9\u5f88\u7cfb\u7edf\uff0c\u4f46\u60f3\u8981\u505a\u5230\u5168\u9762\u662f\u4e00\u4ef6\u5f88\u56f0\u96be\u7684\u4e8b\u60c5\uff0c\u6bd5\u7adf\u4e00\u4e2a\u4eba\u7684\u65f6\u95f4\u7cbe\u529b\u662f\u6709\u9650\u7684\u3002\u56e0\u6b64\u6211\u4e5f\u5e0c\u671b\u80fd\u591f\u4e3a\u6b64\u505a\u70b9\u4e8b\u60c5\u3002","title":"\u5173\u4e8e"},{"location":"about/#_2","text":"\u90ae\u7bb1\uff1a cj194832@163.com \uff08\u6b22\u8fce\u90ae\u4ef6\uff09 twtter\uff1a VinctChanx QQ\uff1a 971516583 \u5fae\u4fe1\u516c\u4f17\u53f7\uff1a math188 \u6216\u8005 \u6570\u5b66\u7f16\u7a0b","title":"\u4e2a\u4eba\u8054\u7cfb\u65b9\u5f0f"},{"location":"about/#_3","text":"\u672c\u4eba\u6bd5\u4e1a\u4e8e\u9655\u897f\u5e08\u8303\u5927\u5b66\u7269\u7406\u5b66\u4e13\u4e1a\uff0c\u6bd5\u4e1a\u4ee5\u540e\u76f8\u7ee7\u4ece\u4e8bPython\u5f00\u53d1\u5de5\u4f5c\uff0c\u6570\u636e\u5206\u6790\u4e0e\u6316\u6398\uff0c\u4ee5\u53ca\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u5de5\u4f5c\u3002\u5de5\u4f5c\u7ecf\u5386\u4e0a\u7b97\u4e0d\u4e0a\u8d44\u6df1\uff0c\u4f46\u51ed\u501f\u81ea\u5df1\u7684\u52aa\u529b\u4e0e\u575a\u6301\u4e5f\u53d6\u5f97\u4e0d\u9519\u7684\u5b66\u4e60\u6548\u679c\u3002","title":"\u4f5c\u8005\u4ecb\u7ecd"},{"location":"intro/","text":"\u5b66\u4e60Python\u53ef\u4ee5\u505a\u4ec0\u4e48\u5462\uff1f\u8fd9\u57fa\u672c\u4e0a\u6bcf\u4e2a\u521d\u5b66\u8005\u5fc5\u95ee\u7684\u95ee\u9898\u3002\u8fd9\u91cc\u603b\u7ed3\u4e00\u4e0bPython\u53ef\u4ee5\u7528\u6765\u505a\u7684\u51e0\u7c7b\u4e8b\u60c5\u3002 \u505a\u79d1\u5b66\u8ba1\u7b97 \u00b6 \u5728\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u51e0\u4e4e\u662fMatlab\u7684\u5929\u4e0b\uff0cMatlab\u5185\u7f6e\u4e86\u975e\u5e38\u591a\u7684\u51fd\u6570\uff0c\u5c24\u5176\u662f\u5f3a\u5927\u7684\u77e9\u9635\u8ba1\u7b97\uff0c\u51e0\u4e4e\u662f\u4efb\u52a1\u7f16\u7a0b\u8bed\u8a00\u96be\u4ee5\u6bd4\u62df\u7684\uff0c\u52a0\u4e0a\u9488\u5bf9\u7279\u5b9a\u884c\u4e1a\u7684\u5de5\u5177\u5305\uff0c\u51e0\u4e4e\u662f\u4e0d\u53ef\u66ff\u4ee3\u3002 \u6b63\u7248\u7684Matlab\u662f\u975e\u5e38\u6602\u8d35\u7684\uff0c\u5982\u679c\u9700\u8981\u516c\u5f00\u53d1\u8868\u8bba\u6587\u7684\u8bdd\uff0c\u4f7f\u7528\u76d7\u7248\u8f6f\u4ef6\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u800c\u5f00\u6e90\u7684Python\u5728\u79d1\u5b66\u8ba1\u7b97\u65b9\u9762\u4e00\u70b9\u90fd\u4e0d\u900a\u8272\u3002 \u81ea\u52a8\u5316\u529e\u516c \u00b6 Python\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u5b8c\u6210\u4f17\u591a\u5c0f\u4efb\u52a1\u3002\u6bd4\u5982\u81ea\u52a8\u53d1\u9001\u90ae\u4ef6\uff0c\u53d1\u9001\u77ed\u4fe1\uff0c\u6279\u91cf\u64cd\u4f5cword\uff0cExcel\uff0cPDF\u7b49\u7b49\u3002\u5f53\u4f60\u9700\u8981\u6574\u7406\u5927\u91cf\u529e\u516c\u6587\u6863\uff0c\u5e76\u4e14\u9700\u8981\u628a\u4ed6\u4eec\u5206\u522b\u53d1\u9001\u7ed9\u4e0d\u540c\u7684\u4eba\uff0c\u90a3\u4e48\u4f60\u5c31\u9700\u8981\u4f7f\u7528Python\u7f16\u7a0b\uff0c\u8f7b\u677e\u7684\u5b8c\u6210\u6279\u91cf\u91cd\u590d\u7684\u4efb\u52a1\u3002 \u722c\u866b\u4efb\u52a1 \u00b6 \u5982\u679c\u4f60\u9700\u8981\u7ecf\u5e38\u53bb\u7f51\u7ad9\u4e0b\u8f7d\u7d20\u6750\uff0c\u6216\u8005\u8d2d\u7269\u6570\u636e\uff0c\u603b\u4e4b\u5c31\u662f\u4f60\u9700\u8981\u5b8c\u6210\u6536\u96c6\u7f51\u4e0a\u7684\u6570\u636e\u3002\u90a3\u4e48\u4f60\u9700\u8981\u5b66\u4e60Python\u722c\u866b\u3002\u722c\u866b\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6839\u636e\u4f60\u7684\u89c4\u5219\uff0c\u53bb\u7f51\u4e0a\u6293\u53d6\u6216\u8005\u4e0b\u8f7d\u4f60\u60f3\u8981\u7684\u6570\u636e\u3002\u867d\u7136\u56fd\u5bb6\u51fa\u53f0\u4e86\u4e92\u8054\u7f51\u5b89\u5168\u6cd5\uff0c\u7981\u6b62\u722c\u53d6\u9690\u79c1\u6570\u636e\uff0c\u9664\u6b64\u4e4b\u5916\u4f60\u7684\u722c\u866b\u90fd\u662f\u5b89\u5168\u7684\u3002 \u6570\u636e\u5206\u6790\u4e0e\u6316\u6398 \u00b6 \u91d1\u878d\u4ece\u4e1a\u8005\uff0c\u5e02\u573a\u8fd0\u8425\uff0c\u4ea7\u54c1\u5206\u6790\uff0c\u7f51\u7ad9\u8fd0\u8425\uff0c\u7535\u5546\u8d2d\u7269\u5e73\u53f0\u7b49\u7b49\u6d89\u53ca\u6570\u636e\u7684\uff0c\u90fd\u9700\u8981\u5b66\u4e60\u6570\u636e\u5206\u6790\u4ee5\u53ca\u6316\u6398\u3002\u6570\u636e\u5206\u6790\u5e2e\u4f60\u8bfb\u61c2\u7528\u6237\u7684\u884c\u4e3a\uff0c\u5e02\u573a\u7684\u53cd\u9988\uff0c\u7528\u6237\u7684\u9700\u6c42\u7b49\u7b49\u95ee\u9898\u3002\u5f53\u524d\u5404\u884c\u5404\u4e1a\u90fd\u975e\u5e38\u5f3a\u8c03\u7528\u6570\u636e\u8bf4\u8bdd\u3002\u4ee5\u524d\u51ed\u4e2a\u4eba\u76f4\u89c9\u548c\u5bf9\u7528\u6237\u7684\u611f\u77e5\u505a\u51b3\u7b56\uff0c\u73b0\u5728\u76f4\u63a5\u6839\u636e\u6570\u636e\u505a\u51b3\u7b56\u3002 \u4eba\u5de5\u667a\u80fd \u00b6 2016\u5e74\u4ee5\u6765\uff0c\u653f\u5e9c\u5927\u529b\u6276\u6301\u4eba\u5de5\u667a\u80fd\uff0c\u672a\u6765\u7684\u9ad8\u79d1\u6280\u884c\u4e1a\u3002Python\u672c\u6765\u662f\u975e\u5e38\u6d41\u884c\u7684\u8bed\u8a00\uff0c\u5bf9\u4e8e\u975e\u4e92\u8054\u7f51\u4ece\u4e1a\u8005\u6765\u8bf4\u8fd8\u662f\u5f88\u964c\u751f\u3002Google\uff0cFacebook\uff0cOpenAI\u7b49\u516c\u53f8\u76f8\u7ee7\u53d1\u5e03\u4e86\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u5e76\u4e14\u6846\u67b6\u90fd\u662f\u652f\u6301Python\u7684\uff0c\u6b63\u5f0f\u7531\u4e8e\u8bed\u8a00\u7684\u7b80\u6d01\u6613\u7528\u6027\uff0c\u4f7f\u5f97Python\u66f4\u52a0\u6d41\u884c\u3002 Java\u51e0\u4e4e\u5784\u65ad\u4e86\u5927\u6570\u636e\u5f00\u53d1\uff0cHadoop\u751f\u6001\u7ec4\u5efa\u51e0\u4e4e\u90fd\u662fJava\u5f00\u53d1\uff0c\u4f46Java\u5728\u6df1\u5ea6\u5b66\u4e60\u65b9\u9762\u76f8\u5bf9\u5f31\u5f88\u591a\uff0c\u6700\u4e3b\u8981\u539f\u56e0\u662f\u77e9\u9635\u8fd0\u7b97\u6ca1\u6709C++\u6548\u7387\u9ad8\u3002Python\u53ef\u662fC++\u7684\u4eb2\u513f\u5b50\uff0c\u5728\u8fd9\u65b9\u9762\u80fd\u4e0d\u5389\u5bb3\u5417\u3002\u6df1\u5ea6\u5b66\u4e60\u7684\u53d1\u5c55\u8fdb\u4e00\u6b65\u6210\u5c31\u4e86Python\u8bed\u8a00\u3002 Web\u540e\u53f0 \u00b6 Python\u8bed\u8a00\u7684\u7b80\u6d01\u6027\uff0c\u4f7f\u5f97Python\u5728web\u540e\u53f0\u5f00\u53d1\u4e5f\u80fd\u5360\u636e\u4e00\u5e2d\u4e4b\u5730\u3002\u4e1a\u5185\u6709\u540d\u7684\u6846\u67b6\u6709Django\u3001Flask\u3001Tornado\u7b49\u3002\u4f7f\u5f97\u7f51\u7ad9\u5feb\u901f\u6210\u578b\uff0c\u8282\u7701\u5927\u91cf\u7684\u5f00\u59cb\u65f6\u95f4\u3002 \u8fd0\u884c\u6548\u7387\u4f4e\u56fa\u7136\u662fPython\u88ab\u8bdf\u75c5\u7684\u539f\u56e0\uff0c\u4f46\u662f\u8282\u7701\u4e86\u5f00\u53d1\u65f6\u95f4\u3002\u4ea7\u54c1\u7684\u7814\u53d1\u65f6\u95f4\u7f29\u77ed\uff0c\u66f4\u5feb\u7684\u6295\u5165\u5e02\u573a\u3002\u51e1\u4e8b\u6709\u5f97\u5fc5\u6709\u5931\uff0c\u5982\u679cPython\u5360\u5c3d\u4e86\u4f18\u52bf\uff0c\u90a3\u4e0d\u662f\u6ca1\u6709\u522b\u7684\u8bed\u8a00\u7684\u4e8b\u4e86\u3002\u518d\u8bf4\u4e86\u8bed\u8a00\u7684\u6267\u884c\u6548\u7387\uff0c\u8ddf\u5f00\u53d1\u8005\u4e5f\u662f\u6709\u5f88\u5927\u5173\u7cfb\u7684\u3002 \u603b\u7ed3 \u00b6 \u4e0a\u9762\u7b80\u5355\u603b\u7ed3\u4e866\u70b9Python\u7684\u5e94\u7528\uff0c\u4e5f\u7b97\u662f\u5b66\u4e60Python\u7684\u539f\u56e0\u5427\u3002\u5176\u5b9e\u7f16\u7a0b\u7684\u6700\u7ec8\u76ee\u7684\u5c31\u662f \u8ba9\u8ba1\u7b97\u673a\u5e2e\u4f60\u505a\u4f60\u60f3\u505a\u7684\u4e8b\u60c5 \u3002\u57fa\u672c\u4e0a\u4f60\u80fd\u5b9a\u4e49\u51fa\u6765\u7684\u95ee\u9898\uff0c\u5927\u591a\u6570\u90fd\u662f\u53ef\u4ee5\u89e3\u51b3\u7684\uff0c\u8010\u5fc3\u5b66\u4e60\uff0c\u4e0e\u8bf8\u541b\u5171\u52c9\u3002","title":"\u80fd\u505a\u4ec0\u4e48"},{"location":"intro/#_1","text":"\u5728\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u51e0\u4e4e\u662fMatlab\u7684\u5929\u4e0b\uff0cMatlab\u5185\u7f6e\u4e86\u975e\u5e38\u591a\u7684\u51fd\u6570\uff0c\u5c24\u5176\u662f\u5f3a\u5927\u7684\u77e9\u9635\u8ba1\u7b97\uff0c\u51e0\u4e4e\u662f\u4efb\u52a1\u7f16\u7a0b\u8bed\u8a00\u96be\u4ee5\u6bd4\u62df\u7684\uff0c\u52a0\u4e0a\u9488\u5bf9\u7279\u5b9a\u884c\u4e1a\u7684\u5de5\u5177\u5305\uff0c\u51e0\u4e4e\u662f\u4e0d\u53ef\u66ff\u4ee3\u3002 \u6b63\u7248\u7684Matlab\u662f\u975e\u5e38\u6602\u8d35\u7684\uff0c\u5982\u679c\u9700\u8981\u516c\u5f00\u53d1\u8868\u8bba\u6587\u7684\u8bdd\uff0c\u4f7f\u7528\u76d7\u7248\u8f6f\u4ef6\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u800c\u5f00\u6e90\u7684Python\u5728\u79d1\u5b66\u8ba1\u7b97\u65b9\u9762\u4e00\u70b9\u90fd\u4e0d\u900a\u8272\u3002","title":"\u505a\u79d1\u5b66\u8ba1\u7b97"},{"location":"intro/#_2","text":"Python\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u5b8c\u6210\u4f17\u591a\u5c0f\u4efb\u52a1\u3002\u6bd4\u5982\u81ea\u52a8\u53d1\u9001\u90ae\u4ef6\uff0c\u53d1\u9001\u77ed\u4fe1\uff0c\u6279\u91cf\u64cd\u4f5cword\uff0cExcel\uff0cPDF\u7b49\u7b49\u3002\u5f53\u4f60\u9700\u8981\u6574\u7406\u5927\u91cf\u529e\u516c\u6587\u6863\uff0c\u5e76\u4e14\u9700\u8981\u628a\u4ed6\u4eec\u5206\u522b\u53d1\u9001\u7ed9\u4e0d\u540c\u7684\u4eba\uff0c\u90a3\u4e48\u4f60\u5c31\u9700\u8981\u4f7f\u7528Python\u7f16\u7a0b\uff0c\u8f7b\u677e\u7684\u5b8c\u6210\u6279\u91cf\u91cd\u590d\u7684\u4efb\u52a1\u3002","title":"\u81ea\u52a8\u5316\u529e\u516c"},{"location":"intro/#_3","text":"\u5982\u679c\u4f60\u9700\u8981\u7ecf\u5e38\u53bb\u7f51\u7ad9\u4e0b\u8f7d\u7d20\u6750\uff0c\u6216\u8005\u8d2d\u7269\u6570\u636e\uff0c\u603b\u4e4b\u5c31\u662f\u4f60\u9700\u8981\u5b8c\u6210\u6536\u96c6\u7f51\u4e0a\u7684\u6570\u636e\u3002\u90a3\u4e48\u4f60\u9700\u8981\u5b66\u4e60Python\u722c\u866b\u3002\u722c\u866b\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6839\u636e\u4f60\u7684\u89c4\u5219\uff0c\u53bb\u7f51\u4e0a\u6293\u53d6\u6216\u8005\u4e0b\u8f7d\u4f60\u60f3\u8981\u7684\u6570\u636e\u3002\u867d\u7136\u56fd\u5bb6\u51fa\u53f0\u4e86\u4e92\u8054\u7f51\u5b89\u5168\u6cd5\uff0c\u7981\u6b62\u722c\u53d6\u9690\u79c1\u6570\u636e\uff0c\u9664\u6b64\u4e4b\u5916\u4f60\u7684\u722c\u866b\u90fd\u662f\u5b89\u5168\u7684\u3002","title":"\u722c\u866b\u4efb\u52a1"},{"location":"intro/#_4","text":"\u91d1\u878d\u4ece\u4e1a\u8005\uff0c\u5e02\u573a\u8fd0\u8425\uff0c\u4ea7\u54c1\u5206\u6790\uff0c\u7f51\u7ad9\u8fd0\u8425\uff0c\u7535\u5546\u8d2d\u7269\u5e73\u53f0\u7b49\u7b49\u6d89\u53ca\u6570\u636e\u7684\uff0c\u90fd\u9700\u8981\u5b66\u4e60\u6570\u636e\u5206\u6790\u4ee5\u53ca\u6316\u6398\u3002\u6570\u636e\u5206\u6790\u5e2e\u4f60\u8bfb\u61c2\u7528\u6237\u7684\u884c\u4e3a\uff0c\u5e02\u573a\u7684\u53cd\u9988\uff0c\u7528\u6237\u7684\u9700\u6c42\u7b49\u7b49\u95ee\u9898\u3002\u5f53\u524d\u5404\u884c\u5404\u4e1a\u90fd\u975e\u5e38\u5f3a\u8c03\u7528\u6570\u636e\u8bf4\u8bdd\u3002\u4ee5\u524d\u51ed\u4e2a\u4eba\u76f4\u89c9\u548c\u5bf9\u7528\u6237\u7684\u611f\u77e5\u505a\u51b3\u7b56\uff0c\u73b0\u5728\u76f4\u63a5\u6839\u636e\u6570\u636e\u505a\u51b3\u7b56\u3002","title":"\u6570\u636e\u5206\u6790\u4e0e\u6316\u6398"},{"location":"intro/#_5","text":"2016\u5e74\u4ee5\u6765\uff0c\u653f\u5e9c\u5927\u529b\u6276\u6301\u4eba\u5de5\u667a\u80fd\uff0c\u672a\u6765\u7684\u9ad8\u79d1\u6280\u884c\u4e1a\u3002Python\u672c\u6765\u662f\u975e\u5e38\u6d41\u884c\u7684\u8bed\u8a00\uff0c\u5bf9\u4e8e\u975e\u4e92\u8054\u7f51\u4ece\u4e1a\u8005\u6765\u8bf4\u8fd8\u662f\u5f88\u964c\u751f\u3002Google\uff0cFacebook\uff0cOpenAI\u7b49\u516c\u53f8\u76f8\u7ee7\u53d1\u5e03\u4e86\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u5e76\u4e14\u6846\u67b6\u90fd\u662f\u652f\u6301Python\u7684\uff0c\u6b63\u5f0f\u7531\u4e8e\u8bed\u8a00\u7684\u7b80\u6d01\u6613\u7528\u6027\uff0c\u4f7f\u5f97Python\u66f4\u52a0\u6d41\u884c\u3002 Java\u51e0\u4e4e\u5784\u65ad\u4e86\u5927\u6570\u636e\u5f00\u53d1\uff0cHadoop\u751f\u6001\u7ec4\u5efa\u51e0\u4e4e\u90fd\u662fJava\u5f00\u53d1\uff0c\u4f46Java\u5728\u6df1\u5ea6\u5b66\u4e60\u65b9\u9762\u76f8\u5bf9\u5f31\u5f88\u591a\uff0c\u6700\u4e3b\u8981\u539f\u56e0\u662f\u77e9\u9635\u8fd0\u7b97\u6ca1\u6709C++\u6548\u7387\u9ad8\u3002Python\u53ef\u662fC++\u7684\u4eb2\u513f\u5b50\uff0c\u5728\u8fd9\u65b9\u9762\u80fd\u4e0d\u5389\u5bb3\u5417\u3002\u6df1\u5ea6\u5b66\u4e60\u7684\u53d1\u5c55\u8fdb\u4e00\u6b65\u6210\u5c31\u4e86Python\u8bed\u8a00\u3002","title":"\u4eba\u5de5\u667a\u80fd"},{"location":"intro/#web","text":"Python\u8bed\u8a00\u7684\u7b80\u6d01\u6027\uff0c\u4f7f\u5f97Python\u5728web\u540e\u53f0\u5f00\u53d1\u4e5f\u80fd\u5360\u636e\u4e00\u5e2d\u4e4b\u5730\u3002\u4e1a\u5185\u6709\u540d\u7684\u6846\u67b6\u6709Django\u3001Flask\u3001Tornado\u7b49\u3002\u4f7f\u5f97\u7f51\u7ad9\u5feb\u901f\u6210\u578b\uff0c\u8282\u7701\u5927\u91cf\u7684\u5f00\u59cb\u65f6\u95f4\u3002 \u8fd0\u884c\u6548\u7387\u4f4e\u56fa\u7136\u662fPython\u88ab\u8bdf\u75c5\u7684\u539f\u56e0\uff0c\u4f46\u662f\u8282\u7701\u4e86\u5f00\u53d1\u65f6\u95f4\u3002\u4ea7\u54c1\u7684\u7814\u53d1\u65f6\u95f4\u7f29\u77ed\uff0c\u66f4\u5feb\u7684\u6295\u5165\u5e02\u573a\u3002\u51e1\u4e8b\u6709\u5f97\u5fc5\u6709\u5931\uff0c\u5982\u679cPython\u5360\u5c3d\u4e86\u4f18\u52bf\uff0c\u90a3\u4e0d\u662f\u6ca1\u6709\u522b\u7684\u8bed\u8a00\u7684\u4e8b\u4e86\u3002\u518d\u8bf4\u4e86\u8bed\u8a00\u7684\u6267\u884c\u6548\u7387\uff0c\u8ddf\u5f00\u53d1\u8005\u4e5f\u662f\u6709\u5f88\u5927\u5173\u7cfb\u7684\u3002","title":"Web\u540e\u53f0"},{"location":"intro/#_6","text":"\u4e0a\u9762\u7b80\u5355\u603b\u7ed3\u4e866\u70b9Python\u7684\u5e94\u7528\uff0c\u4e5f\u7b97\u662f\u5b66\u4e60Python\u7684\u539f\u56e0\u5427\u3002\u5176\u5b9e\u7f16\u7a0b\u7684\u6700\u7ec8\u76ee\u7684\u5c31\u662f \u8ba9\u8ba1\u7b97\u673a\u5e2e\u4f60\u505a\u4f60\u60f3\u505a\u7684\u4e8b\u60c5 \u3002\u57fa\u672c\u4e0a\u4f60\u80fd\u5b9a\u4e49\u51fa\u6765\u7684\u95ee\u9898\uff0c\u5927\u591a\u6570\u90fd\u662f\u53ef\u4ee5\u89e3\u51b3\u7684\uff0c\u8010\u5fc3\u5b66\u4e60\uff0c\u4e0e\u8bf8\u541b\u5171\u52c9\u3002","title":"\u603b\u7ed3"},{"location":"advance/collections/","text":"Python\u7684\u96c6\u5408\u6846\u67b6 \u00b6 collections \u5b98\u7f51\u7ffb\u8bd1\u4e3a \u5bb9\u5668\u6570\u636e\u7c7b\u578b \uff0c\u5728Java\u4e2d\u79f0\u4e3a\u96c6\u5408\u6846\u67b6\uff0c\u540d\u5b57\u4e0d\u540c\u800c\u5df2\u3002Python\u5185\u7f6e\u4e86\u4e00\u4e9b\u6570\u636e\u7c7b\u578b\uff0c dict , list , set , \u548c tuple \u3002\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd9\u4e9b\u6570\u636e\u5bb9\u5668\u4e0d\u591f\u7528\uff0c\u6211\u4eec\u5f97\u7ee7\u627f\u57fa\u672c\u6570\u636e\u5bb9\u5668\uff0c\u7136\u540e\u5b9e\u73b0\u5b9a\u5236\u5316\u7684\u529f\u80fd\u3002\u6bd4\u5982\u539f\u59cb\u7684\u5b57\u5178\u662f\u65e0\u5e8f\u7684\uff0c\u5047\u5982\u9700\u8981\u6709\u5e8f\u7684\u5b57\u5178\u600e\u4e48\u529e\uff1f\u96c6\u5408\u6846\u67b6 collections \u5c31\u63d0\u4f9b\u4e86 OrderedDict \u8fd9\u6837\u7684\u6570\u636e\u5bb9\u5668\u3002\u9664\u6b64\u4e4b\u5916\u96c6\u5408\u6846\u67b6\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u7c7b\u578b\uff1a \u540d\u79f0 \u542b\u4e49 namedtuple() \u521b\u5efa\u547d\u540d\u5143\u7ec4\u5b50\u7c7b\u7684\u5de5\u5382\u51fd\u6570 deque \u7c7b\u4f3c\u5217\u8868(list)\u7684\u5bb9\u5668\uff0c\u5b9e\u73b0\u4e86\u5728\u4e24\u7aef\u5feb\u901f\u6dfb\u52a0(append)\u548c\u5f39\u51fa(pop) ChainMap \u7c7b\u4f3c\u5b57\u5178(dict)\u7684\u5bb9\u5668\u7c7b\uff0c\u5c06\u591a\u4e2a\u6620\u5c04\u96c6\u5408\u5230\u4e00\u4e2a\u89c6\u56fe\u91cc\u9762 Counter \u5b57\u5178\u7684\u5b50\u7c7b\uff0c\u63d0\u4f9b\u4e86\u53ef\u54c8\u5e0c\u5bf9\u8c61\u7684\u8ba1\u6570\u529f\u80fd OrderedDict \u5b57\u5178\u7684\u5b50\u7c7b\uff0c\u4fdd\u5b58\u4e86\u4ed6\u4eec\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f defaultdict \u5b57\u5178\u7684\u5b50\u7c7b\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de5\u5382\u51fd\u6570\uff0c\u4e3a\u5b57\u5178\u67e5\u8be2\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u503c \uff5c UserDict \u5c01\u88c5\u4e86\u5b57\u5178\u5bf9\u8c61\uff0c\u7b80\u5316\u4e86\u5b57\u5178\u5b50\u7c7b\u5316 UserList \u5c01\u88c5\u4e86\u5217\u8868\u5bf9\u8c61\uff0c\u7b80\u5316\u4e86\u5217\u8868\u5b50\u7c7b\u5316 UserString \u5c01\u88c5\u4e86\u5217\u8868\u5bf9\u8c61\uff0c\u7b80\u5316\u4e86\u5b57\u7b26\u4e32\u5b50\u7c7b\u5316 namedtuple \u547d\u540d\u5143\u7ec4 \u00b6 tuple\u521b\u5efa\u4ee5\u540e\u662f\u4e0d\u53ef\u66f4\u6539\u7684\uff0c\u8bbf\u95eetuple\u53ea\u80fd\u4f7f\u7528\u4e0b\u6807\u7d22\u5f15\u7684\u65b9\u5f0f\u3002\u51e1\u662f\u7528Python\u8fde\u63a5\u8fc7\u6570\u636e\u5e93\u7684\u90fd\u77e5\u9053\uff0c\u67e5\u8be2\u6570\u636e\u5e93\u8fd4\u56de\u7684\u7ed3\u679c\u662ftuple\u7c7b\u578b\u3002\u5982\u679c\u5b57\u6bb5\u8f83\u591a\uff0c\u8d85\u8fc75\u4e2a\u5b57\u6bb5\uff0c\u64cd\u4f5c\u5c31\u6709\u70b9\u9ebb\u70e6\u3002 \u5982\u679c\u4f7f\u7528ORM\u6846\u67b6\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e00\u75db\u70b9\u3002 \u7c7b\u76f4\u63a5\u6620\u5c04\u8868\uff0c\u7c7b\u7684\u5c5e\u6027\u5c31\u662f\u8868\u7684\u5b57\u6bb5 \uff0c\u7528\u201c\u70b9\u201d\u5c31\u80fd\u8865\u5168\u51fa\u8981\u4f7f\u7528\u7684\u5b57\u6bb5\u540d\u79f0\u3002\u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528 namedtuple \u3002\u5c24\u5176\u662f\u521b\u5efaCSV\u6587\u4ef6\u548c\u8bfb\u53d6\u6570\u636e\u5e93\u65f6\u975e\u5e38\u6709\u6548\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b namedtuple \u51fd\u6570\u7684\u57fa\u672c\u4f7f\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 >>> Point = namedtuple ( 'Point' , [ 'x' , 'y' ]) >>> p = Point ( 11 , y = 22 ) # instantiate with positional or keyword arguments >>> p [ 0 ] + p [ 1 ] # indexable like the plain tuple (11, 22) 33 >>> x , y = p # unpack like a regular tuple >>> x , y ( 11 , 22 ) >>> p . x + p . y # fields also accessible by name 33 >>> p # readable __repr__ with a name=value style Point ( x = 11 , y = 22 ) >>> p . _asdict () # \u8f6c\u6362\u4e3a\u5b57\u5178 { 'x' : 11 , 'y' : 22 } \u63a5\u4e0b\u6765\u6a21\u62df\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u904d\u5386\u8fd4\u56de\u7ed3\u679c\uff0c\u4f1a\u53d1\u73b0\u64cd\u4f5c\u6bcf\u6761\u6570\u636e\u5c31\u50cf\u64cd\u4f5c\u5bf9\u8c61\u4e00\u6837\u65b9\u4fbf\u3002\u8fd9\u91cc\u4f1a\u7528\u5230\u65b9\u6cd5 _make() \u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 from collections import namedtuple # \u6570\u636e\u5e93\u8fd4\u56de\u7ed3\u679c data = ( ( 'Tom' , 12 , 'tom@qq.com' ), ( 'Jim' , 15 , 'jim@163.com' ), ( 'Ana' , 13 , 'Ana@126.com' ) ) User = namedtuple ( 'User' , [ 'name' , 'age' , 'email' ]) # \u7c7b\u578b\u58f0\u660e user : User for user in map ( User . _make , data ): print ( f \" { user . name } , { user . age } , { user . email } \" ) # \u8f93\u51fa # Tom, 12, tom@qq.com # Jim, 15, jim@163.com # Ana, 13, Ana@126.com \u8bfb\u53d6CSV\u6587\u4ef6\u548c\u6570\u636e\u5e93\u7684\u4f7f\u7528\uff0c\u8ddf\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u5dee\u4e0d\u591a\uff0c\u4e0b\u9762\u7ed9\u51fa\u6e90\u7801 EmployeeRecord = namedtuple ( 'EmployeeRecord' , 'name, age, title, department, paygrade' ) # \u6700\u597d\u505a\u7c7b\u578b\u58f0\u660e\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u70b9\u51fa\u5c5e\u6027 emp : EmployeeRecord import csv for emp in map ( EmployeeRecord . _make , csv . reader ( open ( \"employees.csv\" , \"rb\" ))): print ( emp . name , emp . title ) import sqlite3 conn = sqlite3 . connect ( '/companydata' ) cursor = conn . cursor () cursor . execute ( 'SELECT name, age, title, department, paygrade FROM employees' ) for emp in map ( EmployeeRecord . _make , cursor . fetchall ()): print ( emp . name , emp . title ) \u8ba1\u6570\u5668Counter \u00b6 \u4f5c\u4e3a\u8ba1\u6570\u5668\u5bf9\u8c61\uff0cCounter\u975e\u5e38\u65b9\u4fbf\uff0c\u63d0\u4f9b\u4e86\u51e0\u4e2a\u7edf\u8ba1\u65b9\u6cd5\u975e\u5e38\u597d\u7528\u3002\u6211\u4eec\u5148\u6765\u770b\u770b\u666e\u901a\u8ba1\u6570\u5668\u7684\u4f7f\u7528\uff1a 1 2 3 4 5 6 >>> from collections import Counter >>> cnt = Counter () >>> for word in [ 'red' , 'blue' , 'red' , 'green' , 'blue' , 'blue' ]: ... cnt [ word ] += 1 # \u4e0d\u9700\u8981\u8003\u8651key\u662f\u5426\u8986\u76d6 >>> cnt Counter ({ 'blue' : 3 , 'red' : 2 , 'green' : 1 }) \u9664\u4e86\u521b\u5efa\u7a7a\u7684\u8ba1\u6570\u5668\uff0c\u8fd8\u53ef\u4ee5\u521b\u5efa\u521d\u59cb\u5316\u53c2\u6570\uff0c\u53c2\u6570\u5c31\u662f\u8981\u7edf\u8ba1\u7684\u5bf9\u8c61\uff0c\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u6216\u8005\u5b57\u5178\u7b49\u53ef\u8fed\u4ee3\u7c7b\u578b\u3002 1 2 3 4 5 6 7 8 >>> c = Counter ( 'abcdeabcdabcaba' ) # count elements from a string >>> c . most_common ( 3 ) # three most common elements [( 'a' , 5 ), ( 'b' , 4 ), ( 'c' , 3 )] >>> sorted ( c ) # list all unique elements [ 'a' , 'b' , 'c' , 'd' , 'e' ] >>> '' . join ( sorted ( c . elements ())) # list elements with repetitions 'aaaaabbbbcccdde' \u9ed8\u8ba4\u5b57\u5178defaultdict \u00b6 \u8bbf\u95ee\u5b57\u5178 key \u7684\u65f6\u5019\u4f1a\u78b0\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679ckey\u5b58\u5728\u5c31\u6b63\u5e38\u8fd4\u56de\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\u5219\u629b\u51fa KeyError \u7684\u5f02\u5e38\u3002\u901a\u5e38\u4f7f\u7528\u5b57\u5178\u7684 get \u65b9\u6cd5\uff0c\u5982\u679cget key \u4e0d\u5b58\u5728\uff0c\u9ed8\u8ba4\u503c\u53ef\u4ee5\u81ea\u5b9a\u4e49,\u4f46\u8fd9\u53ea\u80fd\u89e3\u51b3\u4e0d\u629b\u51fa KeyError \u7684\u5f02\u5e38\u3002\u5176\u4f59\u95ee\u9898\u8fd8\u662f\u4e0d\u597d\u5904\u7406\u3002 \u6bd4\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u6e05\u5355\u662f\u8fd9\u6837\u7684\uff0c\u989c\u8272\u4f7f\u7528\u6b21\u6570\u3002\uff08\u4f60\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u7528\u6237\u7684\u8d2d\u7269\u660e\u7ec6\u6570\u636e\uff09 1 2 3 4 5 6 7 s = [ ( 'yellow' , 1 ), ( 'blue' , 2 ), ( 'yellow' , 3 ), ( 'blue' , 4 ), ( 'red' , 1 ) ] \u5982\u679c\u8981\u7edf\u8ba1\u51fa\u6bcf\u79cd\u989c\u8272\u4f7f\u7528\u4e86\u591a\u5c11\u6b21\uff0c\u5927\u81f4\u7684\u601d\u8def\u662f\u521b\u5efa\u7ed3\u679c\u5b57\u5178\uff0c\u904d\u5386s\uff0c\u78b0\u5230\u65b0\u7684key\u5c31\u76f4\u63a5\u8d4b\u503c\uff0c\u78b0\u5230\u5df2\u7ecf\u5b58\u5728\u7684key\uff0cvalue\u503c\u76f8\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4e0a\u9762\u7684Counter\u7c7b\uff0c\u5224\u65ad\u7684\u6b65\u9aa4\u90fd\u7701\u4e86\u3002 \u73b0\u5728\u9700\u6c42\u53d8\u4e86\uff0c\u9700\u8981\u628a\u6bcf\u79cd\u989c\u8272\u4f7f\u7528\u7684\u6b21\u6570\u653e\u5728\u5217\u8868\u91cc\u3002\u5c31\u662f\u628a\u76f8\u540c\u7684key\u7684value\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u4e0d\u662f\u52a0\u5728\u4e00\u8d77\u4e86\u3002\u5f53\u7136\u4f60\u80af\u5b9a\u4e5f\u6709\u529e\u6cd5\u505a\u5230\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 defaultdict \u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0 pythonic \u3002 1 2 3 4 5 6 7 s = [( 'yellow' , 1 ), ( 'blue' , 2 ), ( 'yellow' , 3 ), ( 'blue' , 4 ), ( 'red' , 1 )] d = defaultdict ( list ) # \u9ed8\u8ba4\u503c\u4e3alist for k , v in s : d [ k ] . append ( v ) # \u76f4\u63a5append sorted ( d . items ()) [( 'blue' , [ 2 , 4 ]), ( 'red' , [ 1 ]), ( 'yellow' , [ 1 , 3 ])] \u4e0a\u9762\u7684\u4f8b\u5b50 defaultdict \u7684\u9ed8\u8ba4\u503c\u662f list \uff0c\u4e5f\u53ef\u4ee5\u662f\u6574\u6570\uff0c\u5176\u5b9e\u662f\u8c03\u7528\u4e86 int() \u3002 1 2 3 4 5 6 7 s = 'mississippi' d = defaultdict ( int ) # \u9ed8\u8ba4\u6574\u6570\uff0c\u521d\u59cb\u503c\u4e3a0 for k in s : d [ k ] += 1 sorted ( d . items ()) [( 'i' , 4 ), ( 'm' , 1 ), ( 'p' , 2 ), ( 's' , 4 )] \u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u9ed8\u8ba4\u6570\u636e\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u9700\u8981\u6e05\u695a defaultdict \u521d\u59cb\u5316\u7684\u539f\u7406\u3002\u67e5\u770b\u6e90\u7801\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u4e2a\u53c2\u6570 default_factory \u6765\u63a7\u5236\u7684\u3002\u8fd9\u4e2a\u53c2\u6570\u7684\u53d6\u503c\u53ef\u4ee5\u662fNone\uff0c\u6216\u8005\u662f callable \u53ef\u8c03\u7528\u7684\u7c7b\u578b\u3002\u8fd9\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c default_factory \u53c2\u6570\u4f20\u4e00\u4e2a\u51fd\u6570\u5c31\u884c\u4e86\u3002 1 2 3 4 5 6 7 8 >>> x = defaultdict ( lambda : 2 ) # \u521b\u5efa\u9ed8\u8ba4\u503c\u4e3a2 >>> x [ 'a' ] 2 >>> x [ 'b' ] 2 >>> y = defaultdict ( lambda : [ 2 ]) # \u521b\u5efa\u9ed8\u8ba4\u503c\u4e3a[2] >>> y [ 't' ] [ 2 ] \u603b\u7ed3 \u00b6 Python\u96c6\u5408\u6846\u67b6\u63d0\u4f9b\u7684\u8fd9\u51e0\u79cd\u6570\u636e\u5bb9\u5668\uff0c\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u4e5f\u53ef\u4ee5\u4e0d\u7528\u8fd9\u4e9b\u6570\u636e\u5bb9\u5668\uff0c\u5982\u679c\u4e1a\u52a1\u91cf\u6bd4\u8f83\u5927\uff0c\u6267\u884c\u6548\u7387\u53ef\u80fd\u4e0d\u662f\u5f88\u9ad8\u3002\u672c\u6587\u53ea\u4ecb\u7ecd\u4e86Python\u7684\u96c6\u5408\u6846\u67b6\u4e2d\u76843\u79cd\u6570\u636e\u5bb9\u5668\uff0c\u8fd93\u79cd\u5bb9\u5668\u76f8\u5bf9\u9ebb\u70e6\u4e00\u70b9\uff0c\u4f7f\u7528\u573a\u666f\u5f88\u591a\uff0c\u7075\u6d3b\u8fd0\u7528\u8fd9\u4e9b\u6570\u636e\u5bb9\u5668\uff0c\u53ef\u4ee5\u4f7f\u5f97\u4f60\u7a0b\u5e8f\u66f4\u52a0\u9ad8\u6548\u548cpythonic\u3002 \u6ce8\uff1a\u672c\u6587\u53c2\u8003 Python3\u5b98\u65b9\u6587\u6863 \uff0c\u90e8\u5206\u4f8b\u5b50\u4e5f\u6765\u81ea\u5b98\u65b9\u6587\u6863\u3002","title":"\u96c6\u5408\u6846\u67b6"},{"location":"advance/collections/#python","text":"collections \u5b98\u7f51\u7ffb\u8bd1\u4e3a \u5bb9\u5668\u6570\u636e\u7c7b\u578b \uff0c\u5728Java\u4e2d\u79f0\u4e3a\u96c6\u5408\u6846\u67b6\uff0c\u540d\u5b57\u4e0d\u540c\u800c\u5df2\u3002Python\u5185\u7f6e\u4e86\u4e00\u4e9b\u6570\u636e\u7c7b\u578b\uff0c dict , list , set , \u548c tuple \u3002\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd9\u4e9b\u6570\u636e\u5bb9\u5668\u4e0d\u591f\u7528\uff0c\u6211\u4eec\u5f97\u7ee7\u627f\u57fa\u672c\u6570\u636e\u5bb9\u5668\uff0c\u7136\u540e\u5b9e\u73b0\u5b9a\u5236\u5316\u7684\u529f\u80fd\u3002\u6bd4\u5982\u539f\u59cb\u7684\u5b57\u5178\u662f\u65e0\u5e8f\u7684\uff0c\u5047\u5982\u9700\u8981\u6709\u5e8f\u7684\u5b57\u5178\u600e\u4e48\u529e\uff1f\u96c6\u5408\u6846\u67b6 collections \u5c31\u63d0\u4f9b\u4e86 OrderedDict \u8fd9\u6837\u7684\u6570\u636e\u5bb9\u5668\u3002\u9664\u6b64\u4e4b\u5916\u96c6\u5408\u6846\u67b6\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u7c7b\u578b\uff1a \u540d\u79f0 \u542b\u4e49 namedtuple() \u521b\u5efa\u547d\u540d\u5143\u7ec4\u5b50\u7c7b\u7684\u5de5\u5382\u51fd\u6570 deque \u7c7b\u4f3c\u5217\u8868(list)\u7684\u5bb9\u5668\uff0c\u5b9e\u73b0\u4e86\u5728\u4e24\u7aef\u5feb\u901f\u6dfb\u52a0(append)\u548c\u5f39\u51fa(pop) ChainMap \u7c7b\u4f3c\u5b57\u5178(dict)\u7684\u5bb9\u5668\u7c7b\uff0c\u5c06\u591a\u4e2a\u6620\u5c04\u96c6\u5408\u5230\u4e00\u4e2a\u89c6\u56fe\u91cc\u9762 Counter \u5b57\u5178\u7684\u5b50\u7c7b\uff0c\u63d0\u4f9b\u4e86\u53ef\u54c8\u5e0c\u5bf9\u8c61\u7684\u8ba1\u6570\u529f\u80fd OrderedDict \u5b57\u5178\u7684\u5b50\u7c7b\uff0c\u4fdd\u5b58\u4e86\u4ed6\u4eec\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f defaultdict \u5b57\u5178\u7684\u5b50\u7c7b\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de5\u5382\u51fd\u6570\uff0c\u4e3a\u5b57\u5178\u67e5\u8be2\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u503c \uff5c UserDict \u5c01\u88c5\u4e86\u5b57\u5178\u5bf9\u8c61\uff0c\u7b80\u5316\u4e86\u5b57\u5178\u5b50\u7c7b\u5316 UserList \u5c01\u88c5\u4e86\u5217\u8868\u5bf9\u8c61\uff0c\u7b80\u5316\u4e86\u5217\u8868\u5b50\u7c7b\u5316 UserString \u5c01\u88c5\u4e86\u5217\u8868\u5bf9\u8c61\uff0c\u7b80\u5316\u4e86\u5b57\u7b26\u4e32\u5b50\u7c7b\u5316","title":"Python\u7684\u96c6\u5408\u6846\u67b6"},{"location":"advance/collections/#namedtuple","text":"tuple\u521b\u5efa\u4ee5\u540e\u662f\u4e0d\u53ef\u66f4\u6539\u7684\uff0c\u8bbf\u95eetuple\u53ea\u80fd\u4f7f\u7528\u4e0b\u6807\u7d22\u5f15\u7684\u65b9\u5f0f\u3002\u51e1\u662f\u7528Python\u8fde\u63a5\u8fc7\u6570\u636e\u5e93\u7684\u90fd\u77e5\u9053\uff0c\u67e5\u8be2\u6570\u636e\u5e93\u8fd4\u56de\u7684\u7ed3\u679c\u662ftuple\u7c7b\u578b\u3002\u5982\u679c\u5b57\u6bb5\u8f83\u591a\uff0c\u8d85\u8fc75\u4e2a\u5b57\u6bb5\uff0c\u64cd\u4f5c\u5c31\u6709\u70b9\u9ebb\u70e6\u3002 \u5982\u679c\u4f7f\u7528ORM\u6846\u67b6\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e00\u75db\u70b9\u3002 \u7c7b\u76f4\u63a5\u6620\u5c04\u8868\uff0c\u7c7b\u7684\u5c5e\u6027\u5c31\u662f\u8868\u7684\u5b57\u6bb5 \uff0c\u7528\u201c\u70b9\u201d\u5c31\u80fd\u8865\u5168\u51fa\u8981\u4f7f\u7528\u7684\u5b57\u6bb5\u540d\u79f0\u3002\u9664\u6b64\u4e4b\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528 namedtuple \u3002\u5c24\u5176\u662f\u521b\u5efaCSV\u6587\u4ef6\u548c\u8bfb\u53d6\u6570\u636e\u5e93\u65f6\u975e\u5e38\u6709\u6548\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b namedtuple \u51fd\u6570\u7684\u57fa\u672c\u4f7f\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 >>> Point = namedtuple ( 'Point' , [ 'x' , 'y' ]) >>> p = Point ( 11 , y = 22 ) # instantiate with positional or keyword arguments >>> p [ 0 ] + p [ 1 ] # indexable like the plain tuple (11, 22) 33 >>> x , y = p # unpack like a regular tuple >>> x , y ( 11 , 22 ) >>> p . x + p . y # fields also accessible by name 33 >>> p # readable __repr__ with a name=value style Point ( x = 11 , y = 22 ) >>> p . _asdict () # \u8f6c\u6362\u4e3a\u5b57\u5178 { 'x' : 11 , 'y' : 22 } \u63a5\u4e0b\u6765\u6a21\u62df\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u904d\u5386\u8fd4\u56de\u7ed3\u679c\uff0c\u4f1a\u53d1\u73b0\u64cd\u4f5c\u6bcf\u6761\u6570\u636e\u5c31\u50cf\u64cd\u4f5c\u5bf9\u8c61\u4e00\u6837\u65b9\u4fbf\u3002\u8fd9\u91cc\u4f1a\u7528\u5230\u65b9\u6cd5 _make() \u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 from collections import namedtuple # \u6570\u636e\u5e93\u8fd4\u56de\u7ed3\u679c data = ( ( 'Tom' , 12 , 'tom@qq.com' ), ( 'Jim' , 15 , 'jim@163.com' ), ( 'Ana' , 13 , 'Ana@126.com' ) ) User = namedtuple ( 'User' , [ 'name' , 'age' , 'email' ]) # \u7c7b\u578b\u58f0\u660e user : User for user in map ( User . _make , data ): print ( f \" { user . name } , { user . age } , { user . email } \" ) # \u8f93\u51fa # Tom, 12, tom@qq.com # Jim, 15, jim@163.com # Ana, 13, Ana@126.com \u8bfb\u53d6CSV\u6587\u4ef6\u548c\u6570\u636e\u5e93\u7684\u4f7f\u7528\uff0c\u8ddf\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u5dee\u4e0d\u591a\uff0c\u4e0b\u9762\u7ed9\u51fa\u6e90\u7801 EmployeeRecord = namedtuple ( 'EmployeeRecord' , 'name, age, title, department, paygrade' ) # \u6700\u597d\u505a\u7c7b\u578b\u58f0\u660e\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u70b9\u51fa\u5c5e\u6027 emp : EmployeeRecord import csv for emp in map ( EmployeeRecord . _make , csv . reader ( open ( \"employees.csv\" , \"rb\" ))): print ( emp . name , emp . title ) import sqlite3 conn = sqlite3 . connect ( '/companydata' ) cursor = conn . cursor () cursor . execute ( 'SELECT name, age, title, department, paygrade FROM employees' ) for emp in map ( EmployeeRecord . _make , cursor . fetchall ()): print ( emp . name , emp . title )","title":"namedtuple \u547d\u540d\u5143\u7ec4"},{"location":"advance/collections/#counter","text":"\u4f5c\u4e3a\u8ba1\u6570\u5668\u5bf9\u8c61\uff0cCounter\u975e\u5e38\u65b9\u4fbf\uff0c\u63d0\u4f9b\u4e86\u51e0\u4e2a\u7edf\u8ba1\u65b9\u6cd5\u975e\u5e38\u597d\u7528\u3002\u6211\u4eec\u5148\u6765\u770b\u770b\u666e\u901a\u8ba1\u6570\u5668\u7684\u4f7f\u7528\uff1a 1 2 3 4 5 6 >>> from collections import Counter >>> cnt = Counter () >>> for word in [ 'red' , 'blue' , 'red' , 'green' , 'blue' , 'blue' ]: ... cnt [ word ] += 1 # \u4e0d\u9700\u8981\u8003\u8651key\u662f\u5426\u8986\u76d6 >>> cnt Counter ({ 'blue' : 3 , 'red' : 2 , 'green' : 1 }) \u9664\u4e86\u521b\u5efa\u7a7a\u7684\u8ba1\u6570\u5668\uff0c\u8fd8\u53ef\u4ee5\u521b\u5efa\u521d\u59cb\u5316\u53c2\u6570\uff0c\u53c2\u6570\u5c31\u662f\u8981\u7edf\u8ba1\u7684\u5bf9\u8c61\uff0c\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u6216\u8005\u5b57\u5178\u7b49\u53ef\u8fed\u4ee3\u7c7b\u578b\u3002 1 2 3 4 5 6 7 8 >>> c = Counter ( 'abcdeabcdabcaba' ) # count elements from a string >>> c . most_common ( 3 ) # three most common elements [( 'a' , 5 ), ( 'b' , 4 ), ( 'c' , 3 )] >>> sorted ( c ) # list all unique elements [ 'a' , 'b' , 'c' , 'd' , 'e' ] >>> '' . join ( sorted ( c . elements ())) # list elements with repetitions 'aaaaabbbbcccdde'","title":"\u8ba1\u6570\u5668Counter"},{"location":"advance/collections/#defaultdict","text":"\u8bbf\u95ee\u5b57\u5178 key \u7684\u65f6\u5019\u4f1a\u78b0\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679ckey\u5b58\u5728\u5c31\u6b63\u5e38\u8fd4\u56de\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\u5219\u629b\u51fa KeyError \u7684\u5f02\u5e38\u3002\u901a\u5e38\u4f7f\u7528\u5b57\u5178\u7684 get \u65b9\u6cd5\uff0c\u5982\u679cget key \u4e0d\u5b58\u5728\uff0c\u9ed8\u8ba4\u503c\u53ef\u4ee5\u81ea\u5b9a\u4e49,\u4f46\u8fd9\u53ea\u80fd\u89e3\u51b3\u4e0d\u629b\u51fa KeyError \u7684\u5f02\u5e38\u3002\u5176\u4f59\u95ee\u9898\u8fd8\u662f\u4e0d\u597d\u5904\u7406\u3002 \u6bd4\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u6e05\u5355\u662f\u8fd9\u6837\u7684\uff0c\u989c\u8272\u4f7f\u7528\u6b21\u6570\u3002\uff08\u4f60\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u7528\u6237\u7684\u8d2d\u7269\u660e\u7ec6\u6570\u636e\uff09 1 2 3 4 5 6 7 s = [ ( 'yellow' , 1 ), ( 'blue' , 2 ), ( 'yellow' , 3 ), ( 'blue' , 4 ), ( 'red' , 1 ) ] \u5982\u679c\u8981\u7edf\u8ba1\u51fa\u6bcf\u79cd\u989c\u8272\u4f7f\u7528\u4e86\u591a\u5c11\u6b21\uff0c\u5927\u81f4\u7684\u601d\u8def\u662f\u521b\u5efa\u7ed3\u679c\u5b57\u5178\uff0c\u904d\u5386s\uff0c\u78b0\u5230\u65b0\u7684key\u5c31\u76f4\u63a5\u8d4b\u503c\uff0c\u78b0\u5230\u5df2\u7ecf\u5b58\u5728\u7684key\uff0cvalue\u503c\u76f8\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4e0a\u9762\u7684Counter\u7c7b\uff0c\u5224\u65ad\u7684\u6b65\u9aa4\u90fd\u7701\u4e86\u3002 \u73b0\u5728\u9700\u6c42\u53d8\u4e86\uff0c\u9700\u8981\u628a\u6bcf\u79cd\u989c\u8272\u4f7f\u7528\u7684\u6b21\u6570\u653e\u5728\u5217\u8868\u91cc\u3002\u5c31\u662f\u628a\u76f8\u540c\u7684key\u7684value\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u4e0d\u662f\u52a0\u5728\u4e00\u8d77\u4e86\u3002\u5f53\u7136\u4f60\u80af\u5b9a\u4e5f\u6709\u529e\u6cd5\u505a\u5230\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 defaultdict \u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0 pythonic \u3002 1 2 3 4 5 6 7 s = [( 'yellow' , 1 ), ( 'blue' , 2 ), ( 'yellow' , 3 ), ( 'blue' , 4 ), ( 'red' , 1 )] d = defaultdict ( list ) # \u9ed8\u8ba4\u503c\u4e3alist for k , v in s : d [ k ] . append ( v ) # \u76f4\u63a5append sorted ( d . items ()) [( 'blue' , [ 2 , 4 ]), ( 'red' , [ 1 ]), ( 'yellow' , [ 1 , 3 ])] \u4e0a\u9762\u7684\u4f8b\u5b50 defaultdict \u7684\u9ed8\u8ba4\u503c\u662f list \uff0c\u4e5f\u53ef\u4ee5\u662f\u6574\u6570\uff0c\u5176\u5b9e\u662f\u8c03\u7528\u4e86 int() \u3002 1 2 3 4 5 6 7 s = 'mississippi' d = defaultdict ( int ) # \u9ed8\u8ba4\u6574\u6570\uff0c\u521d\u59cb\u503c\u4e3a0 for k in s : d [ k ] += 1 sorted ( d . items ()) [( 'i' , 4 ), ( 'm' , 1 ), ( 'p' , 2 ), ( 's' , 4 )] \u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u9ed8\u8ba4\u6570\u636e\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u9700\u8981\u6e05\u695a defaultdict \u521d\u59cb\u5316\u7684\u539f\u7406\u3002\u67e5\u770b\u6e90\u7801\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u4e2a\u53c2\u6570 default_factory \u6765\u63a7\u5236\u7684\u3002\u8fd9\u4e2a\u53c2\u6570\u7684\u53d6\u503c\u53ef\u4ee5\u662fNone\uff0c\u6216\u8005\u662f callable \u53ef\u8c03\u7528\u7684\u7c7b\u578b\u3002\u8fd9\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c default_factory \u53c2\u6570\u4f20\u4e00\u4e2a\u51fd\u6570\u5c31\u884c\u4e86\u3002 1 2 3 4 5 6 7 8 >>> x = defaultdict ( lambda : 2 ) # \u521b\u5efa\u9ed8\u8ba4\u503c\u4e3a2 >>> x [ 'a' ] 2 >>> x [ 'b' ] 2 >>> y = defaultdict ( lambda : [ 2 ]) # \u521b\u5efa\u9ed8\u8ba4\u503c\u4e3a[2] >>> y [ 't' ] [ 2 ]","title":"\u9ed8\u8ba4\u5b57\u5178defaultdict"},{"location":"advance/collections/#_1","text":"Python\u96c6\u5408\u6846\u67b6\u63d0\u4f9b\u7684\u8fd9\u51e0\u79cd\u6570\u636e\u5bb9\u5668\uff0c\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u4e5f\u53ef\u4ee5\u4e0d\u7528\u8fd9\u4e9b\u6570\u636e\u5bb9\u5668\uff0c\u5982\u679c\u4e1a\u52a1\u91cf\u6bd4\u8f83\u5927\uff0c\u6267\u884c\u6548\u7387\u53ef\u80fd\u4e0d\u662f\u5f88\u9ad8\u3002\u672c\u6587\u53ea\u4ecb\u7ecd\u4e86Python\u7684\u96c6\u5408\u6846\u67b6\u4e2d\u76843\u79cd\u6570\u636e\u5bb9\u5668\uff0c\u8fd93\u79cd\u5bb9\u5668\u76f8\u5bf9\u9ebb\u70e6\u4e00\u70b9\uff0c\u4f7f\u7528\u573a\u666f\u5f88\u591a\uff0c\u7075\u6d3b\u8fd0\u7528\u8fd9\u4e9b\u6570\u636e\u5bb9\u5668\uff0c\u53ef\u4ee5\u4f7f\u5f97\u4f60\u7a0b\u5e8f\u66f4\u52a0\u9ad8\u6548\u548cpythonic\u3002 \u6ce8\uff1a\u672c\u6587\u53c2\u8003 Python3\u5b98\u65b9\u6587\u6863 \uff0c\u90e8\u5206\u4f8b\u5b50\u4e5f\u6765\u81ea\u5b98\u65b9\u6587\u6863\u3002","title":"\u603b\u7ed3"},{"location":"advance/file-stream/","text":"Python\u4e0e\u6587\u4ef6\u6d41 \u00b6 Python\u8bfb\u5199\u6587\u4ef6\u975e\u5e38\u7b80\u5355\uff0c\u672c\u6587\u9664\u4e86\u4ecb\u7ecd\u7b80\u5355\u7684\u8bfb\u5199\u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6\u4ee5\u5916\uff0c\u8fd8\u4f1a\u4ecb\u7ecd\u6587\u4ef6\u5bf9\u8c61\u7684\u5c5e\u6027\u65b9\u6cd5\u548c\u6587\u4ef6\u6d41\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6587\u7ae0\u5185\u5bb9\u5305\u542b\u4ee5\u4e0b\u65b9\u9762\uff1a \u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6 \u8bfb\u5199\u5b57\u7b26\u6587\u4ef6 \u8bfb\u5199\u5b57\u8282\u6587\u4ef6 \u4e0a\u4e0b\u6587 with \u64cd\u4f5c\u6587\u4ef6 \u5206\u6790\u6587\u4ef6\u5bf9\u8c61\u7684\u6e90\u7801 \u6587\u4ef6\u6d41\u7684\u5c5e\u6027\u65b9\u6cd5 \u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6 \u00b6 \u5b57\u7b26\u6587\u4ef6\u901a\u5e38\u662f\u4e00\u4e9b\u5b58\u50a8\u5b57\u7b26\u4e32\u7684\u6587\u672c\u6587\u4ef6\u3002\u5728windows\u8bb0\u4e8b\u672c\u521b\u5efa\u7684txt\u6587\u4ef6\uff0c\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u7f51\u9875\u7684html\u6587\u4ef6\u90fd\u662f\u5b57\u7b26\u6587\u4ef6\uff1b\u5b57\u8282\u6587\u4ef6\u662f\u6307\u5b58\u50a8\u5b57\u8282\u7801\u7684\u6587\u4ef6\uff0c\u4e5f\u662f\u4e8c\u8fdb\u5236\u7684\u6587\u4ef6\u3002\u6bd4\u5982windows\u4e0b\u53ef\u6267\u884c\u7684exe\u6587\u4ef6\uff0c\u56fe\u7247\uff0c\u97f3\u9891\u89c6\u9891\u6587\u4ef6\u90fd\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u75310\u548c1\u6784\u6210\u3002 \u7406\u8bba\u4e0a\u8bf4\u6240\u6709\u5728\u8ba1\u7b97\u673a\u4e0a\u9762\u7684\u6587\u4ef6\u6700\u7ec8\u5b58\u50a8\u5f62\u5f0f\u90fd\u662f0\u548c1\u7684\u6587\u4ef6\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u56fe\u7247\u6587\u4ef6\u7684\u4e8c\u8fdb\u5236,\u901a\u5e38\u662f\u8f6c\u4e3a16\u8fdb\u5236\uff0c\u5c31\u957f\u8fd9\u6837\u5b50\uff1a 00000000: 8950 4e47 0d0a 1a0a 0000 000d 4948 4452 .PNG........IHDR 00000010: 0000 0374 0000 0370 0806 0000 0067 0128 ...t...p.....g.( 00000020: ad00 0004 1969 4343 506b 4347 436f 6c6f .....iCCPkCGColo 00000030: 7253 7061 6365 4765 6e65 7269 6352 4742 rSpaceGenericRGB 00000040: 0000 388d 8d55 5d68 1c55 143e bb73 6723 ..8..U]h.U.>.sg# 00000050: 24ce 536c 3485 74a8 3f0d 250d 9356 34a1 $.Sl4.t.?.%..V4. 00000060: b4ba 7fdd dd36 6e96 4936 da22 e864 f6ee .....6n.I6.\".d.. 00000070: ce98 c9ce 3833 bbfd a14f 4550 7c31 ea9b ....83...OEP|1.. 00000080: 14c4 bfb7 8020 28f5 0fdb 3eb4 2f95 0a25 ..... (...>./..% 00000090: dad4 2028 3eb4 f883 50e8 8ba6 eb99 3b33 .. (>...P.....;3 000000a0: 9969 bab1 de65 ee7c f39d ef9e 7bee b967 .i...e.|....{..g 000000b0: ef05 e8b9 aa58 9691 1401 169a ae2d 1732 .....X.......-.2 000000c0: e273 878f 883d 2b90 8487 a017 06a1 5751 .s...=+.......WQ 000000d0: 1d2b 5da9 4c02 364f 0b77 b55b df43 c27b .+].L.6O.w.[.C.{ 000000e0: 5fd9 d5dd fe9f adb7 461d 1520 711f 62b3 _.......F.. q.b. 000000f0: e6a8 0b88 8f01 f0a7 55cb 7601 7afa 911f ........U.v.z... 00000100: 3fea 5a1e f662 e8b7 3140 c42f 7ab8 e163 ?.Z..b..1@./z..c \u6839\u636e\u6587\u4ef6\u7c7b\u578b\u901a\u5e38\u5206\u4e3a\u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6\uff08\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\uff0c\u4e8e\u662fPython\u4e2d\u64cd\u4f5c\u8fd9\u4e24\u79cd\u6587\u4ef6\u90fd\u6709\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u4e0d\u8981\u7528\u6df7\u4e86\u3002 \u8bfb\u5199\u5b57\u7b26\u6587\u4ef6 \u00b6 \u8bfb\u5199\u666e\u901a\u7684\u5b57\u7b26\u6587\u4ef6\u975e\u5e38\u5bb9\u6613\u3002\u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u6587\u4ef6\uff0c\u5e76\u4e14\u5f80\u91cc\u9762\u5199\u51651-100\u7684\u6570\u5b57\u3002\u6bcf\u4e2a\u6570\u5b57\u5360\u4e00\u884c\u3002 filename = \"demo.txt\" # \u4ee5\u5199\u5165\u7684\u65b9\u5f0f\u521b\u5efa\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u76f4\u63a5\u521b\u5efa # \u5982\u679c\u5b58\u5728\u5219\u4f1a\u8986\u76d6 fd = open ( filename , 'w' ) for num in range ( 1 , 101 ): # \u5199\u5165\u6bd4\u5982\u662fstr\u7684\u5b57\u7b26 # \u62fc\u63a5\u6362\u884c\u7b26 fd . write ( str ( num ) + \" \\n \" ) # \u5173\u95ed\u6587\u4ef6\u5bf9\u8c61 fd . close () \u63a5\u4e0b\u6765\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5e76\u4e14\u8ba1\u7b97\u51fa\u8fd9\u4e9b\u6570\u5b57\u7684\u603b\u548c\u3002 total = 0 for line in open ( \"demo.txt\" ): total += int ( line . strip ()) # \u53bb\u9664\u672b\u5c3e\u6362\u884c\u7b26 print ( total ) # 5050 \u8bfb\u53d6\u6587\u4ef6\u4e00\u884c\u4ee3\u7801\u5c31\u80fd\u641e\u5b9a\u3002 \u8bfb\u5199\u5b57\u8282\u6587\u4ef6 \u00b6 \u5b57\u8282\u6587\u4ef6\u7684\u8bfb\u53d6\u4e0e\u5b57\u7b26\u6587\u4ef6\u8bfb\u53d6\u57fa\u672c\u4e00\u6837\uff0c\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u6307\u5b9a\u8bfb\u5199\u6587\u4ef6\u6a21\u5f0f\uff0c open \u51fd\u6570\u6709\u4e00\u4e2a\u53c2\u6570 mode \uff0c\u5b57\u8282\u6587\u4ef6\u7684\u8bfb\u53d6\u4e3a\u201crb\u201d\uff0c\u5199\u5165\u4e3a\u201cwb\u201d\uff0c\u5176\u4e2db\u7684\u610f\u601d\u662fbinary\u3002 \u9996\u5148\u8bfb\u53d6\u56fe\u7247\uff0c\u7136\u540e\u518d\u628a\u8fd9\u5f20\u56fe\u7247\u5199\u5165\u53e6\u5916\u7684\u5b57\u8282\u6587\u4ef6\uff0c\u6709\u70b9\u50cf\u590d\u5236\u4e0e\u7c98\u8d34\u3002\u5148\u6765\u770b\u8bfb\u53d6\u5b57\u8282\u7801\u6587\u4ef6\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765\uff1a fd = open ( \"pic.png\" , \"rb\" ) content = fd . read () print ( content ) fd . close () \u8f93\u51fa\u5185\u5bb9\u662f\uff1a \\x94\\x9cqk\\x04\\x9c\\x8cQMa\\xb0S\\xe9\\xdb\\x9d\\xdb\\xbc\\x9dYxMO\\x13... \u8fd9\u4e2a\u5c31\u662funicode\u7f16\u7801\uff0cPython\u5728\u5904\u7406\u6570\u636e\u65f6\uff0c\u5728\u5185\u5b58\u4e2d\u7edf\u4e00\u7684\u7f16\u7801\u90fd\u662funicode\u7801\u3002\u6211\u4eec\u628a\u8bfb\u53d6\u7684unicode\u7f16\u7801\u5199\u5165\u5b57\u8282\u6587\u4ef6\uff0c\u5c31\u5f97\u5230\u539f\u59cb\u7684\u56fe\u7247\u4e86\u3002 fd = open ( \"pic.png\" , \"rb\" ) content = fd . read () print ( content ) fd . close () fw = open ( \"out.png\" , \"wb\" ) fw . write ( content ) fw . close () \u660e\u767d\u4e86\u8fd9\u4e2a\u539f\u7406\uff0c\u7528Python\u5728\u7f51\u4e0a\u4e0b\u8f7d\u56fe\u7247\u6216\u8005\u89c6\u9891\u7684\u65f6\u5019\u5c31\u80fd\u7528\u4e0a\u4e86\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u628a\u7f51\u4e0a\u7684\u5b57\u8282\u6587\u4ef6\uff0c\u5199\u5165\u672c\u5730\u78c1\u76d8\u3002\u5c31\u662f\u8fd9\u4e48\u5bb9\u6613\u3002 \u4e0a\u4e0b\u6587 with \u64cd\u4f5c\u6587\u4ef6 \u00b6 with\u8bed\u53e5\u662f\u4e00\u79cd\u4e0a\u4e0b\u6587\u8d44\u6e90\u7ba1\u7406\u534f\u8bae\uff0c\u4f7f\u7528with\u8bed\u53e5\u683c\u5f0f\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u4f60\u7684\u64cd\u4f5c\uff0c\u800c\u5ffd\u89c6\u8d44\u6e90\u7684\u5173\u95ed\u3002\u56e0\u4e3a\u8d44\u6e90\u6253\u5f00\u4ee5\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\uff0c\u5bfc\u81f4\u8d44\u6e90\u65e0\u6cd5\u56de\u6536\u800c\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\u3002\u4f7f\u7528with\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\u3002 with open ( \"demo.txt\" ) as fd : for num in range ( 1 , 101 ): # \u5199\u5165\u6bd4\u5982\u662fstr\u7684\u5b57\u7b26 # \u62fc\u63a5\u6362\u884c\u7b26 fd . write ( str ( num ) + \" \\n \" ) with open ( \"pic.png\" , \"rb\" ) as fd : content = fd . read () print ( content ) with open ( \"out.png\" , \"wb\" ) as fw : fw . write ( content ) \u7701\u6389\u4e86\u5173\u95ed\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u5728with\u7684\u8bed\u5883\u4e0b\uff0c\u4f60\u7684\u7a0b\u5e8f\u51fa\u73b0\u5f02\u5e38\uff0c\u6587\u4ef6\u4f9d\u7136\u80fd\u591f\u4fdd\u8bc1\u5173\u95ed\u3002 \u5206\u6790\u6587\u4ef6\u5bf9\u8c61\u7684\u6e90\u7801 \u00b6 open\u51fd\u6570\u7684\u6e90\u7801\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\uff0c\u5c5e\u4e8ebuiltins\u65b9\u6cd5\uff08\u5185\u5efa\u65b9\u6cd5\uff09\u3002\u6211\u4eec\u6765\u770b\u770b\u51e0\u4e2a\u5173\u952e\u53c2\u6570\uff1a def open ( file , mode = 'r' , buffering = None , encoding = None , errors = None , newline = None , closefd = True ): # known special case of open \"\"\" Open file and return a stream. Raise OSError upon failure... \"\"\" pass file \u4e0d\u9700\u8981\u591a\u8bf4\uff0c\u6587\u4ef6\u7684\u540d\u79f0\u3002mode\u7528\u5f88\u591a\u53c2\u6570\uff0cr\u548cw\u4ee5\u53cab\u90fd\u5df2\u7ecf\u7528\u8fc7\u4e86\uff0ca\u662fappend\u7684\u610f\u601d\uff0c\u4ee5\u5199\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\u8ffd\u52a0\u7684\u6587\u4ef6\u6700\u540e\u3002+\u53f7\u7684\u542b\u4e49\u662f\u4ee5\u66f4\u65b0\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\u5305\u62ec\u8bfb\u548c\u5199\u64cd\u4f5c\u3002 =============================================================== Character Meaning --------- --------------------------------------------------------------- 'r' open for reading (default) 'w' open for writing, truncating the file first 'x' create a new file and open it for writing 'a' open for writing, appending to the end of the file if it exists 'b' binary mode 't' text mode (default) '+' open a disk file for updating (reading and writing) 'U' universal newline mode (deprecated) ========= =============================================================== buffering \u53c2\u6570\u8868\u793a\u7f13\u51b2\u533a\u7684\u7684\u7b56\u7565\u3002\u5206\u522b\u53d6\u503c\u4e3aNone\uff0c0\uff0c1\uff0c\u5927\u4e8e1\u3002None\u8868\u793a\u9ed8\u8ba4\u7684\u7b56\u7565\uff0c\u6570\u636e\u5757\u5927\u5c0f\u4e3a8192\u4e2a\u5b57\u8282\uff0c\u6bcf\u6b21\u8bfb\u5199\u7684\u5355\u4f4d\u5c31\u662f\u8fd9\u4e2a\u6570\u636e\u5757\u5927\u5c0f\u3002\u8bfb\u5199\u6587\u4ef6\u9996\u5148\u4f1a\u8bfb\u5199\u5728\u4e00\u5757\u7f13\u51b2\u533a\uff0c\u7136\u540e\u518d\u628a\u5185\u5bb9flush\u8fdb\u6587\u4ef6\uff0c\u5bf9\u4e8e\u5927\u6587\u4ef6\u7684\u64cd\u4f5c\u4f1a\u4fee\u6539\u8fd9\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982\u8981\u7ed9\u4e00\u4e2a\u5927\u4e8e\u5185\u5b58\u7684\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\u6216\u8005\u641c\u7d22\uff0c\u53ea\u80fd\u5206\u5757\u8bfb\u5165\u5185\u5b58\u4e2d\u3002\u5176\u4f59\u7b56\u7565\u53ef\u4ee5\u53c2\u8003\u6e90\u7801\u3002 encoding \u7f16\u7801\u65b9\u5f0f\uff0c\u53ea\u80fd\u5728\u5b57\u7b26\u6587\u4ef6\u4e2d\u6709\u6548\uff0c\u5b57\u8282\u6587\u4ef6\u6ca1\u6709\u7f16\u7801\u65b9\u5f0f\u3002\u4e0d\u6307\u5b9a\u8fd9\u4e2a\u53c2\u6570\u901a\u5e38\u4f1a\u6839\u636e\u7cfb\u7edf\u7684\u6765\u51b3\u5b9a\uff0c\u5982\u679c\u8bfb\u53d6\u6587\u4ef6\u51fa\u73b0\u4e71\u7801\uff0c\u5219\u8003\u8651\u6307\u5b9a\u6587\u4ef6\u7684\u7f16\u7801\u65b9\u65b9\u5f0f\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662futf-8\u548cgbk\u4e24\u79cd\u3002 \u770b\u5b8c\u4e86\u8fd9\u51e0\u4e2a\u53c2\u6570\u6211\u4eec\u6765\u770b\u770b\u8fd4\u56de\u503c\uff0c\u5c31\u662fio\u6a21\u5757\u4e0b\u7684TextIOWrapper\u7c7b\u3002\u4e8e\u662f\u6211\u4eec\u6253\u5f00\u8fd9\u4e2a\u7c7b,\u987a\u4fbf\u6253\u5370\u51fa\u5c5e\u6027\u548c\u65b9\u6cd5\uff1a >>> open ( \"file1.txt\" ) >>> < _io . TextIOWrapper name = 'file1.txt' mode = 'r' encoding = 'UTF-8' > >>> from io import TextIOWrapper >>> for each in dir ( TextIOWrapper ): ... : if not each . startswith ( \"_\" ): ... : print ( each ) # \u5185\u5bb9\u8f83\u591a\u7701\u7565 \u5982\u679c\u4f7f\u7528IDE\u67e5\u770b\u6e90\u7801\u6700\u65b9\u4fbf\uff0c\u6253\u5f00\u6e90\u7801\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u7c7b\u53c8\u662f\u5185\u5efa\u6a21\u5757\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u770b\u770b\u6587\u4ef6\u6d41\u7684\u4e00\u4e9b\u5e38\u7528\u65b9\u6cd5\u3002 \u6587\u4ef6\u6d41\u7684\u5c5e\u6027\u65b9\u6cd5 \u00b6 open \u51fd\u6570\u8fd4\u56de\u7684\u5bf9\u8c61\u5c31\u662f\u6587\u4ef6\u6d41\uff08 Open file and return a stream. Raise OSError upon failure \uff09\u3002\u4e0a\u9762\u6211\u4eec\u770b\u5230\u8fd4\u56de\u7684\u662f*_io.TextIOWrapper*\u8fd9\u4e2a\u7c7b\u3002\u6587\u4ef6\u6d41\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u4e0a\u9762\u5df2\u7ecf\u7528\u5230\u4e86\u4e00\u4e9b\uff0c\u4f8b\u5982 read \u8bfb\u53d6\u5168\u90e8\u5185\u5bb9\uff0c write \u5199\u5165\u5185\u5bb9\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e9b\u65b9\u6cd5\u3002 # \u521b\u5efa\u6587\u4ef6\uff0c\u5199\u51651-100\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4e00\u4e2a\u6570\u5b57\u5360\u4e00\u884c In [ 5 ]: with open ( \"demo.txt\" , 'w' ) as fd : ... : for num in range ( 1 , 101 ): ... : fd . write ( str ( num ) + \" \\n \" ) ... : In [ 8 ]: fd = open ( \"demo.txt\" ) In [ 9 ]: fd Out [ 9 ]: < _io . TextIOWrapper name = 'demo.txt' mode = 'r' encoding = 'UTF-8' > In [ 10 ]: help ( fd . readline ) In [ 11 ]: fd . readline () # \u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c Out [ 11 ]: '1 \\n ' In [ 12 ]: fd . readline () Out [ 12 ]: '2 \\n ' In [ 13 ]: fd . readline () Out [ 13 ]: '3 \\n ' In [ 14 ]: fd . readline () Out [ 14 ]: '4 \\n ' In [ 15 ]: fd . readline () Out [ 15 ]: '5 \\n ' In [ 16 ]: fd . readline () Out [ 16 ]: '6 \\n ' # \u6bcf\u6b21\u8bfb\u53d6\u4e24\u4e2a\u5b57\u7b26\uff0c\u6307\u9488\u7684\u4f4d\u7f6e\u5728\u7b2c13\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u4e86\uff08\u4ece0\u5f00\u59cb\uff09 In [ 17 ]: fd . tell () # \u67e5\u770b\u6307\u9488\u4f4d\u7f6e Out [ 17 ]: 12 In [ 18 ]: fd . read () # \u4ece\u5f53\u524d\u6307\u9488\u4f4d\u7f6e\u8bfb\u53d6\u5269\u4f59\u5168\u90e8\u5185\u5bb9 Out [ 18 ]: '7 \\n 8 \\n 9 \\n 10 \\n 11 \\n 12 \\n 13 \\n 14 \\n 15 \\n 16 \\n 17 \\n 18 \\n 19 \\n 20 \\n 21 \\n 22 \\n 23 \\n 24 \\n 25 \\n 26 \\n 27 \\n 28 \\n 29 \\n 30 \\n 31 \\n 32 \\n 33 \\n 34 \\n 35 \\n 36 \\n 37 \\n 38 \\n 39 \\n 40 \\n 41 \\n 42 \\n 43 \\n 44 \\n 45 \\n 46 \\n 47 \\n 48 \\n 49 \\n 50 \\n 51 \\n 52 \\n 53 \\n 54 \\n 55 \\n 56 \\n 57 \\n 58 \\n 59 \\n 60 \\n 61 \\n 62 \\n 63 \\n 64 \\n 65 \\n 66 \\n 67 \\n 68 \\n 69 \\n 70 \\n 71 \\n 72 \\n 73 \\n 74 \\n 75 \\n 76 \\n 77 \\n 78 \\n 79 \\n 80 \\n 81 \\n 82 \\n 83 \\n 84 \\n 85 \\n 86 \\n 87 \\n 88 \\n 89 \\n 90 \\n 91 \\n 92 \\n 93 \\n 94 \\n 95 \\n 96 \\n 97 \\n 98 \\n 99 \\n 100 \\n ' In [ 19 ]: fd . read () # \u518d\u5f80\u4e0b\u8bfb\u4e3a\u7a7a\u4e86 Out [ 19 ]: '' In [ 20 ]: fd . tell () # \u67e5\u770b\u6307\u9488\u7684\u4f4d\u7f6e Out [ 20 ]: 292 # 292\u610f\u5473\u7740\u5df2\u7ecf\u8f93\u51fa\u4e86292\u4e2a\u5b57\u7b26\u957f\u5ea6\u4e86 \u5f88\u5bb9\u6613\u8ba1\u7b97\u51fa\u6765 9\\times 2 +3\\times90 + 4=292 9\\times 2 +3\\times90 + 4=292 \uff0c\u6307\u9488\u7684\u504f\u79fb\u91cf\u4e3a292\u4e2a\u5b57\u7b26\uff0c\u5df2\u7ecf\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e\u4e86\u3002\u65e2\u7136\u53ef\u4ee5\u83b7\u53d6\u5230\u6587\u4ef6\u7684\u6307\u9488\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5982\u4f55\u79fb\u52a8\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\u5462\uff1f\u8fd9\u5c31\u7528\u5230 seek \u65b9\u6cd5\u4e86\u3002 In [ 21 ]: fd . read () Out [ 21 ]: '' # \u518d\u6b21read\u53d1\u73b0\u6307\u9488\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u53d8\u5316\u4e86 In [ 22 ]: fd . tell () Out [ 22 ]: 292 In [ 23 ]: fd . seek ( 0 ) # \u6307\u9488\u56de\u5230\u5f00\u59cb\u4f4d\u7f6e Out [ 23 ]: 0 In [ 24 ]: fd . tell () # \u83b7\u53d6\u6307\u9488\u4f4d\u7f6e Out [ 24 ]: 0 In [ 25 ]: data = fd . readlines () # \u8fd9\u6b21\u6211\u4eec\u8bfb\u53d6\u6240\u6709\u884c In [ 26 ]: data [: 10 ] # \u67e5\u770b\u524d10\u4e2a\u5143\u7d20 Out [ 26 ]: [ '1 \\n ' , '2 \\n ' , '3 \\n ' , '4 \\n ' , '5 \\n ' , '6 \\n ' , '7 \\n ' , '8 \\n ' , '9 \\n ' , '10 \\n ' ] readlines \u65b9\u6cd5\u6309\u884c\u8bfb\u53d6\u6240\u6709\u7684\u6570\u636e(\u6ce8\u610f\u6bcf\u4e2a\u5143\u7d20\u5305\u542b\u4e86\u6362\u884c\u7b26)\u3002\u8fd9\u91cc\u8865\u5145 seek(offset,reference_point) ,\u5176\u4e2d offset \u662f\u504f\u79fb\u91cf\uff0c reference_point \u76f8\u5bf9\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u53d6\u503c\u4e3a0\u8868\u793a\u5f00\u59cb\u4f4d\u7f6e\uff0c1\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\uff0c2\u8868\u793a\u7ed3\u675f\u4f4d\u7f6e\u3002\u8fd9\u79cd\u60c5\u51b5\u53ea\u9002\u7528\u4e8e\u5b57\u8282\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\uff0c \u5982\u679c\u4ee5\u5b57\u7b26\u65b9\u5f0f\u6253\u5f00\uff0c\u65e0\u6cd5\u5b9e\u73b0\u76f8\u5bf9\u4f4d\u7f6e\u7684\u504f\u79fb \u3002 In [ 1 ]: fd = open ( \"demo.txt\" , \"rb\" ) # \u4e8c\u8fdb\u5236\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6 In [ 2 ]: fd . readline () Out [ 2 ]: b '1 \\n ' In [ 3 ]: fd . readline () Out [ 3 ]: b '2 \\n ' In [ 4 ]: fd . tell () Out [ 4 ]: 4 In [ 5 ]: fd . seek ( - 10 , 2 ) # \u652f\u6301\u76f8\u5bf9\u4f4d\u7f6e\u504f\u79fb\u91cf Out [ 5 ]: 282 In [ 6 ]: fd . read ( 10 ) Out [ 6 ]: b '98 \\n 99 \\n 100 \\n ' \u9664\u4e86\u8fd9\u51e0\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u65b9\u6cd5\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u4f8b\u5982detach\uff0cisatty\uff0creconfigure\u7b49\u7b49\uff0c\u5982\u679c\u5728\u5b9e\u9645\u4e2d\u78b0\u5230\u590d\u6742\u7684\u6587\u4ef6\u6d41\u95ee\u9898\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u67e5\u770b\u5e95\u5c42\u7684C\u8bed\u8a00\u6e90\u7801\uff0c\u6216\u8005\u7528C\u5199\u6269\u5c55\u65b9\u6cd5\u3002 \u603b\u7ed3\u4e00\u4e0b \u00b6 \u672c\u6587\u91cd\u70b9\u6574\u7406\u4e86Python\u64cd\u4f5c\u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u57fa\u672c\u7684\u8bfb\u5199\u4f7f\u7528\uff0c\u51e0\u884c\u4ee3\u7801\u5c31\u80fd\u641e\u5b9a\uff1b\u9664\u6b64\u4e4b\u5916\u5efa\u8bae\u4f7f\u7528with\u7684\u4e0a\u4e0b\u6587\u8bed\u53e5\uff0c\u8fd9\u6837\u907f\u514d\u624b\u52a8\u8fdb\u884c\u8d44\u6e90\u7ba1\u7406\uff1b\u540e\u7eed\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u4e86\u6587\u4ef6\u6d41\u5bf9\u8c61\uff0c\u4ee5\u53ca\u5bf9\u8c61\u7684\u90e8\u5206\u65b9\u6cd5\uff0c\u91cd\u70b9\u4ecb\u7ecd\u4e86\u6587\u4ef6\u6307\u9488\u7684\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6587\u4ef6\u6307\u9488\u65f6\u5b57\u8282\u6587\u4ef6\u548c\u5b57\u7b26\u6587\u4ef6\u662f\u5b58\u5728\u5dee\u522b\u7684\u3002\u78b0\u5230\u590d\u6742\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u9700\u8981\u5bf9\u540c\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u4f1a\u7528\u5230\u6587\u4ef6\u6307\u9488\u3002","title":"\u6587\u4ef6\u8bfb\u5199"},{"location":"advance/file-stream/#python","text":"Python\u8bfb\u5199\u6587\u4ef6\u975e\u5e38\u7b80\u5355\uff0c\u672c\u6587\u9664\u4e86\u4ecb\u7ecd\u7b80\u5355\u7684\u8bfb\u5199\u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6\u4ee5\u5916\uff0c\u8fd8\u4f1a\u4ecb\u7ecd\u6587\u4ef6\u5bf9\u8c61\u7684\u5c5e\u6027\u65b9\u6cd5\u548c\u6587\u4ef6\u6d41\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6587\u7ae0\u5185\u5bb9\u5305\u542b\u4ee5\u4e0b\u65b9\u9762\uff1a \u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6 \u8bfb\u5199\u5b57\u7b26\u6587\u4ef6 \u8bfb\u5199\u5b57\u8282\u6587\u4ef6 \u4e0a\u4e0b\u6587 with \u64cd\u4f5c\u6587\u4ef6 \u5206\u6790\u6587\u4ef6\u5bf9\u8c61\u7684\u6e90\u7801 \u6587\u4ef6\u6d41\u7684\u5c5e\u6027\u65b9\u6cd5","title":"Python\u4e0e\u6587\u4ef6\u6d41"},{"location":"advance/file-stream/#_1","text":"\u5b57\u7b26\u6587\u4ef6\u901a\u5e38\u662f\u4e00\u4e9b\u5b58\u50a8\u5b57\u7b26\u4e32\u7684\u6587\u672c\u6587\u4ef6\u3002\u5728windows\u8bb0\u4e8b\u672c\u521b\u5efa\u7684txt\u6587\u4ef6\uff0c\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u7f51\u9875\u7684html\u6587\u4ef6\u90fd\u662f\u5b57\u7b26\u6587\u4ef6\uff1b\u5b57\u8282\u6587\u4ef6\u662f\u6307\u5b58\u50a8\u5b57\u8282\u7801\u7684\u6587\u4ef6\uff0c\u4e5f\u662f\u4e8c\u8fdb\u5236\u7684\u6587\u4ef6\u3002\u6bd4\u5982windows\u4e0b\u53ef\u6267\u884c\u7684exe\u6587\u4ef6\uff0c\u56fe\u7247\uff0c\u97f3\u9891\u89c6\u9891\u6587\u4ef6\u90fd\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u75310\u548c1\u6784\u6210\u3002 \u7406\u8bba\u4e0a\u8bf4\u6240\u6709\u5728\u8ba1\u7b97\u673a\u4e0a\u9762\u7684\u6587\u4ef6\u6700\u7ec8\u5b58\u50a8\u5f62\u5f0f\u90fd\u662f0\u548c1\u7684\u6587\u4ef6\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u56fe\u7247\u6587\u4ef6\u7684\u4e8c\u8fdb\u5236,\u901a\u5e38\u662f\u8f6c\u4e3a16\u8fdb\u5236\uff0c\u5c31\u957f\u8fd9\u6837\u5b50\uff1a 00000000: 8950 4e47 0d0a 1a0a 0000 000d 4948 4452 .PNG........IHDR 00000010: 0000 0374 0000 0370 0806 0000 0067 0128 ...t...p.....g.( 00000020: ad00 0004 1969 4343 506b 4347 436f 6c6f .....iCCPkCGColo 00000030: 7253 7061 6365 4765 6e65 7269 6352 4742 rSpaceGenericRGB 00000040: 0000 388d 8d55 5d68 1c55 143e bb73 6723 ..8..U]h.U.>.sg# 00000050: 24ce 536c 3485 74a8 3f0d 250d 9356 34a1 $.Sl4.t.?.%..V4. 00000060: b4ba 7fdd dd36 6e96 4936 da22 e864 f6ee .....6n.I6.\".d.. 00000070: ce98 c9ce 3833 bbfd a14f 4550 7c31 ea9b ....83...OEP|1.. 00000080: 14c4 bfb7 8020 28f5 0fdb 3eb4 2f95 0a25 ..... (...>./..% 00000090: dad4 2028 3eb4 f883 50e8 8ba6 eb99 3b33 .. (>...P.....;3 000000a0: 9969 bab1 de65 ee7c f39d ef9e 7bee b967 .i...e.|....{..g 000000b0: ef05 e8b9 aa58 9691 1401 169a ae2d 1732 .....X.......-.2 000000c0: e273 878f 883d 2b90 8487 a017 06a1 5751 .s...=+.......WQ 000000d0: 1d2b 5da9 4c02 364f 0b77 b55b df43 c27b .+].L.6O.w.[.C.{ 000000e0: 5fd9 d5dd fe9f adb7 461d 1520 711f 62b3 _.......F.. q.b. 000000f0: e6a8 0b88 8f01 f0a7 55cb 7601 7afa 911f ........U.v.z... 00000100: 3fea 5a1e f662 e8b7 3140 c42f 7ab8 e163 ?.Z..b..1@./z..c \u6839\u636e\u6587\u4ef6\u7c7b\u578b\u901a\u5e38\u5206\u4e3a\u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6\uff08\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\uff0c\u4e8e\u662fPython\u4e2d\u64cd\u4f5c\u8fd9\u4e24\u79cd\u6587\u4ef6\u90fd\u6709\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u4e0d\u8981\u7528\u6df7\u4e86\u3002","title":"\u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6"},{"location":"advance/file-stream/#_2","text":"\u8bfb\u5199\u666e\u901a\u7684\u5b57\u7b26\u6587\u4ef6\u975e\u5e38\u5bb9\u6613\u3002\u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u6587\u4ef6\uff0c\u5e76\u4e14\u5f80\u91cc\u9762\u5199\u51651-100\u7684\u6570\u5b57\u3002\u6bcf\u4e2a\u6570\u5b57\u5360\u4e00\u884c\u3002 filename = \"demo.txt\" # \u4ee5\u5199\u5165\u7684\u65b9\u5f0f\u521b\u5efa\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u76f4\u63a5\u521b\u5efa # \u5982\u679c\u5b58\u5728\u5219\u4f1a\u8986\u76d6 fd = open ( filename , 'w' ) for num in range ( 1 , 101 ): # \u5199\u5165\u6bd4\u5982\u662fstr\u7684\u5b57\u7b26 # \u62fc\u63a5\u6362\u884c\u7b26 fd . write ( str ( num ) + \" \\n \" ) # \u5173\u95ed\u6587\u4ef6\u5bf9\u8c61 fd . close () \u63a5\u4e0b\u6765\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5e76\u4e14\u8ba1\u7b97\u51fa\u8fd9\u4e9b\u6570\u5b57\u7684\u603b\u548c\u3002 total = 0 for line in open ( \"demo.txt\" ): total += int ( line . strip ()) # \u53bb\u9664\u672b\u5c3e\u6362\u884c\u7b26 print ( total ) # 5050 \u8bfb\u53d6\u6587\u4ef6\u4e00\u884c\u4ee3\u7801\u5c31\u80fd\u641e\u5b9a\u3002","title":"\u8bfb\u5199\u5b57\u7b26\u6587\u4ef6"},{"location":"advance/file-stream/#_3","text":"\u5b57\u8282\u6587\u4ef6\u7684\u8bfb\u53d6\u4e0e\u5b57\u7b26\u6587\u4ef6\u8bfb\u53d6\u57fa\u672c\u4e00\u6837\uff0c\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u6307\u5b9a\u8bfb\u5199\u6587\u4ef6\u6a21\u5f0f\uff0c open \u51fd\u6570\u6709\u4e00\u4e2a\u53c2\u6570 mode \uff0c\u5b57\u8282\u6587\u4ef6\u7684\u8bfb\u53d6\u4e3a\u201crb\u201d\uff0c\u5199\u5165\u4e3a\u201cwb\u201d\uff0c\u5176\u4e2db\u7684\u610f\u601d\u662fbinary\u3002 \u9996\u5148\u8bfb\u53d6\u56fe\u7247\uff0c\u7136\u540e\u518d\u628a\u8fd9\u5f20\u56fe\u7247\u5199\u5165\u53e6\u5916\u7684\u5b57\u8282\u6587\u4ef6\uff0c\u6709\u70b9\u50cf\u590d\u5236\u4e0e\u7c98\u8d34\u3002\u5148\u6765\u770b\u8bfb\u53d6\u5b57\u8282\u7801\u6587\u4ef6\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765\uff1a fd = open ( \"pic.png\" , \"rb\" ) content = fd . read () print ( content ) fd . close () \u8f93\u51fa\u5185\u5bb9\u662f\uff1a \\x94\\x9cqk\\x04\\x9c\\x8cQMa\\xb0S\\xe9\\xdb\\x9d\\xdb\\xbc\\x9dYxMO\\x13... \u8fd9\u4e2a\u5c31\u662funicode\u7f16\u7801\uff0cPython\u5728\u5904\u7406\u6570\u636e\u65f6\uff0c\u5728\u5185\u5b58\u4e2d\u7edf\u4e00\u7684\u7f16\u7801\u90fd\u662funicode\u7801\u3002\u6211\u4eec\u628a\u8bfb\u53d6\u7684unicode\u7f16\u7801\u5199\u5165\u5b57\u8282\u6587\u4ef6\uff0c\u5c31\u5f97\u5230\u539f\u59cb\u7684\u56fe\u7247\u4e86\u3002 fd = open ( \"pic.png\" , \"rb\" ) content = fd . read () print ( content ) fd . close () fw = open ( \"out.png\" , \"wb\" ) fw . write ( content ) fw . close () \u660e\u767d\u4e86\u8fd9\u4e2a\u539f\u7406\uff0c\u7528Python\u5728\u7f51\u4e0a\u4e0b\u8f7d\u56fe\u7247\u6216\u8005\u89c6\u9891\u7684\u65f6\u5019\u5c31\u80fd\u7528\u4e0a\u4e86\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u628a\u7f51\u4e0a\u7684\u5b57\u8282\u6587\u4ef6\uff0c\u5199\u5165\u672c\u5730\u78c1\u76d8\u3002\u5c31\u662f\u8fd9\u4e48\u5bb9\u6613\u3002","title":"\u8bfb\u5199\u5b57\u8282\u6587\u4ef6"},{"location":"advance/file-stream/#with","text":"with\u8bed\u53e5\u662f\u4e00\u79cd\u4e0a\u4e0b\u6587\u8d44\u6e90\u7ba1\u7406\u534f\u8bae\uff0c\u4f7f\u7528with\u8bed\u53e5\u683c\u5f0f\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u4f60\u7684\u64cd\u4f5c\uff0c\u800c\u5ffd\u89c6\u8d44\u6e90\u7684\u5173\u95ed\u3002\u56e0\u4e3a\u8d44\u6e90\u6253\u5f00\u4ee5\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\uff0c\u5bfc\u81f4\u8d44\u6e90\u65e0\u6cd5\u56de\u6536\u800c\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\u3002\u4f7f\u7528with\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\u3002 with open ( \"demo.txt\" ) as fd : for num in range ( 1 , 101 ): # \u5199\u5165\u6bd4\u5982\u662fstr\u7684\u5b57\u7b26 # \u62fc\u63a5\u6362\u884c\u7b26 fd . write ( str ( num ) + \" \\n \" ) with open ( \"pic.png\" , \"rb\" ) as fd : content = fd . read () print ( content ) with open ( \"out.png\" , \"wb\" ) as fw : fw . write ( content ) \u7701\u6389\u4e86\u5173\u95ed\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u5728with\u7684\u8bed\u5883\u4e0b\uff0c\u4f60\u7684\u7a0b\u5e8f\u51fa\u73b0\u5f02\u5e38\uff0c\u6587\u4ef6\u4f9d\u7136\u80fd\u591f\u4fdd\u8bc1\u5173\u95ed\u3002","title":"\u4e0a\u4e0b\u6587with\u64cd\u4f5c\u6587\u4ef6"},{"location":"advance/file-stream/#_4","text":"open\u51fd\u6570\u7684\u6e90\u7801\u4f7f\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\uff0c\u5c5e\u4e8ebuiltins\u65b9\u6cd5\uff08\u5185\u5efa\u65b9\u6cd5\uff09\u3002\u6211\u4eec\u6765\u770b\u770b\u51e0\u4e2a\u5173\u952e\u53c2\u6570\uff1a def open ( file , mode = 'r' , buffering = None , encoding = None , errors = None , newline = None , closefd = True ): # known special case of open \"\"\" Open file and return a stream. Raise OSError upon failure... \"\"\" pass file \u4e0d\u9700\u8981\u591a\u8bf4\uff0c\u6587\u4ef6\u7684\u540d\u79f0\u3002mode\u7528\u5f88\u591a\u53c2\u6570\uff0cr\u548cw\u4ee5\u53cab\u90fd\u5df2\u7ecf\u7528\u8fc7\u4e86\uff0ca\u662fappend\u7684\u610f\u601d\uff0c\u4ee5\u5199\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\u8ffd\u52a0\u7684\u6587\u4ef6\u6700\u540e\u3002+\u53f7\u7684\u542b\u4e49\u662f\u4ee5\u66f4\u65b0\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\u5305\u62ec\u8bfb\u548c\u5199\u64cd\u4f5c\u3002 =============================================================== Character Meaning --------- --------------------------------------------------------------- 'r' open for reading (default) 'w' open for writing, truncating the file first 'x' create a new file and open it for writing 'a' open for writing, appending to the end of the file if it exists 'b' binary mode 't' text mode (default) '+' open a disk file for updating (reading and writing) 'U' universal newline mode (deprecated) ========= =============================================================== buffering \u53c2\u6570\u8868\u793a\u7f13\u51b2\u533a\u7684\u7684\u7b56\u7565\u3002\u5206\u522b\u53d6\u503c\u4e3aNone\uff0c0\uff0c1\uff0c\u5927\u4e8e1\u3002None\u8868\u793a\u9ed8\u8ba4\u7684\u7b56\u7565\uff0c\u6570\u636e\u5757\u5927\u5c0f\u4e3a8192\u4e2a\u5b57\u8282\uff0c\u6bcf\u6b21\u8bfb\u5199\u7684\u5355\u4f4d\u5c31\u662f\u8fd9\u4e2a\u6570\u636e\u5757\u5927\u5c0f\u3002\u8bfb\u5199\u6587\u4ef6\u9996\u5148\u4f1a\u8bfb\u5199\u5728\u4e00\u5757\u7f13\u51b2\u533a\uff0c\u7136\u540e\u518d\u628a\u5185\u5bb9flush\u8fdb\u6587\u4ef6\uff0c\u5bf9\u4e8e\u5927\u6587\u4ef6\u7684\u64cd\u4f5c\u4f1a\u4fee\u6539\u8fd9\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982\u8981\u7ed9\u4e00\u4e2a\u5927\u4e8e\u5185\u5b58\u7684\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\u6216\u8005\u641c\u7d22\uff0c\u53ea\u80fd\u5206\u5757\u8bfb\u5165\u5185\u5b58\u4e2d\u3002\u5176\u4f59\u7b56\u7565\u53ef\u4ee5\u53c2\u8003\u6e90\u7801\u3002 encoding \u7f16\u7801\u65b9\u5f0f\uff0c\u53ea\u80fd\u5728\u5b57\u7b26\u6587\u4ef6\u4e2d\u6709\u6548\uff0c\u5b57\u8282\u6587\u4ef6\u6ca1\u6709\u7f16\u7801\u65b9\u5f0f\u3002\u4e0d\u6307\u5b9a\u8fd9\u4e2a\u53c2\u6570\u901a\u5e38\u4f1a\u6839\u636e\u7cfb\u7edf\u7684\u6765\u51b3\u5b9a\uff0c\u5982\u679c\u8bfb\u53d6\u6587\u4ef6\u51fa\u73b0\u4e71\u7801\uff0c\u5219\u8003\u8651\u6307\u5b9a\u6587\u4ef6\u7684\u7f16\u7801\u65b9\u65b9\u5f0f\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662futf-8\u548cgbk\u4e24\u79cd\u3002 \u770b\u5b8c\u4e86\u8fd9\u51e0\u4e2a\u53c2\u6570\u6211\u4eec\u6765\u770b\u770b\u8fd4\u56de\u503c\uff0c\u5c31\u662fio\u6a21\u5757\u4e0b\u7684TextIOWrapper\u7c7b\u3002\u4e8e\u662f\u6211\u4eec\u6253\u5f00\u8fd9\u4e2a\u7c7b,\u987a\u4fbf\u6253\u5370\u51fa\u5c5e\u6027\u548c\u65b9\u6cd5\uff1a >>> open ( \"file1.txt\" ) >>> < _io . TextIOWrapper name = 'file1.txt' mode = 'r' encoding = 'UTF-8' > >>> from io import TextIOWrapper >>> for each in dir ( TextIOWrapper ): ... : if not each . startswith ( \"_\" ): ... : print ( each ) # \u5185\u5bb9\u8f83\u591a\u7701\u7565 \u5982\u679c\u4f7f\u7528IDE\u67e5\u770b\u6e90\u7801\u6700\u65b9\u4fbf\uff0c\u6253\u5f00\u6e90\u7801\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u7c7b\u53c8\u662f\u5185\u5efa\u6a21\u5757\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u770b\u770b\u6587\u4ef6\u6d41\u7684\u4e00\u4e9b\u5e38\u7528\u65b9\u6cd5\u3002","title":"\u5206\u6790\u6587\u4ef6\u5bf9\u8c61\u7684\u6e90\u7801"},{"location":"advance/file-stream/#_5","text":"open \u51fd\u6570\u8fd4\u56de\u7684\u5bf9\u8c61\u5c31\u662f\u6587\u4ef6\u6d41\uff08 Open file and return a stream. Raise OSError upon failure \uff09\u3002\u4e0a\u9762\u6211\u4eec\u770b\u5230\u8fd4\u56de\u7684\u662f*_io.TextIOWrapper*\u8fd9\u4e2a\u7c7b\u3002\u6587\u4ef6\u6d41\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u4e0a\u9762\u5df2\u7ecf\u7528\u5230\u4e86\u4e00\u4e9b\uff0c\u4f8b\u5982 read \u8bfb\u53d6\u5168\u90e8\u5185\u5bb9\uff0c write \u5199\u5165\u5185\u5bb9\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e9b\u65b9\u6cd5\u3002 # \u521b\u5efa\u6587\u4ef6\uff0c\u5199\u51651-100\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4e00\u4e2a\u6570\u5b57\u5360\u4e00\u884c In [ 5 ]: with open ( \"demo.txt\" , 'w' ) as fd : ... : for num in range ( 1 , 101 ): ... : fd . write ( str ( num ) + \" \\n \" ) ... : In [ 8 ]: fd = open ( \"demo.txt\" ) In [ 9 ]: fd Out [ 9 ]: < _io . TextIOWrapper name = 'demo.txt' mode = 'r' encoding = 'UTF-8' > In [ 10 ]: help ( fd . readline ) In [ 11 ]: fd . readline () # \u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c Out [ 11 ]: '1 \\n ' In [ 12 ]: fd . readline () Out [ 12 ]: '2 \\n ' In [ 13 ]: fd . readline () Out [ 13 ]: '3 \\n ' In [ 14 ]: fd . readline () Out [ 14 ]: '4 \\n ' In [ 15 ]: fd . readline () Out [ 15 ]: '5 \\n ' In [ 16 ]: fd . readline () Out [ 16 ]: '6 \\n ' # \u6bcf\u6b21\u8bfb\u53d6\u4e24\u4e2a\u5b57\u7b26\uff0c\u6307\u9488\u7684\u4f4d\u7f6e\u5728\u7b2c13\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u4e86\uff08\u4ece0\u5f00\u59cb\uff09 In [ 17 ]: fd . tell () # \u67e5\u770b\u6307\u9488\u4f4d\u7f6e Out [ 17 ]: 12 In [ 18 ]: fd . read () # \u4ece\u5f53\u524d\u6307\u9488\u4f4d\u7f6e\u8bfb\u53d6\u5269\u4f59\u5168\u90e8\u5185\u5bb9 Out [ 18 ]: '7 \\n 8 \\n 9 \\n 10 \\n 11 \\n 12 \\n 13 \\n 14 \\n 15 \\n 16 \\n 17 \\n 18 \\n 19 \\n 20 \\n 21 \\n 22 \\n 23 \\n 24 \\n 25 \\n 26 \\n 27 \\n 28 \\n 29 \\n 30 \\n 31 \\n 32 \\n 33 \\n 34 \\n 35 \\n 36 \\n 37 \\n 38 \\n 39 \\n 40 \\n 41 \\n 42 \\n 43 \\n 44 \\n 45 \\n 46 \\n 47 \\n 48 \\n 49 \\n 50 \\n 51 \\n 52 \\n 53 \\n 54 \\n 55 \\n 56 \\n 57 \\n 58 \\n 59 \\n 60 \\n 61 \\n 62 \\n 63 \\n 64 \\n 65 \\n 66 \\n 67 \\n 68 \\n 69 \\n 70 \\n 71 \\n 72 \\n 73 \\n 74 \\n 75 \\n 76 \\n 77 \\n 78 \\n 79 \\n 80 \\n 81 \\n 82 \\n 83 \\n 84 \\n 85 \\n 86 \\n 87 \\n 88 \\n 89 \\n 90 \\n 91 \\n 92 \\n 93 \\n 94 \\n 95 \\n 96 \\n 97 \\n 98 \\n 99 \\n 100 \\n ' In [ 19 ]: fd . read () # \u518d\u5f80\u4e0b\u8bfb\u4e3a\u7a7a\u4e86 Out [ 19 ]: '' In [ 20 ]: fd . tell () # \u67e5\u770b\u6307\u9488\u7684\u4f4d\u7f6e Out [ 20 ]: 292 # 292\u610f\u5473\u7740\u5df2\u7ecf\u8f93\u51fa\u4e86292\u4e2a\u5b57\u7b26\u957f\u5ea6\u4e86 \u5f88\u5bb9\u6613\u8ba1\u7b97\u51fa\u6765 9\\times 2 +3\\times90 + 4=292 9\\times 2 +3\\times90 + 4=292 \uff0c\u6307\u9488\u7684\u504f\u79fb\u91cf\u4e3a292\u4e2a\u5b57\u7b26\uff0c\u5df2\u7ecf\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e\u4e86\u3002\u65e2\u7136\u53ef\u4ee5\u83b7\u53d6\u5230\u6587\u4ef6\u7684\u6307\u9488\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5982\u4f55\u79fb\u52a8\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\u5462\uff1f\u8fd9\u5c31\u7528\u5230 seek \u65b9\u6cd5\u4e86\u3002 In [ 21 ]: fd . read () Out [ 21 ]: '' # \u518d\u6b21read\u53d1\u73b0\u6307\u9488\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u53d8\u5316\u4e86 In [ 22 ]: fd . tell () Out [ 22 ]: 292 In [ 23 ]: fd . seek ( 0 ) # \u6307\u9488\u56de\u5230\u5f00\u59cb\u4f4d\u7f6e Out [ 23 ]: 0 In [ 24 ]: fd . tell () # \u83b7\u53d6\u6307\u9488\u4f4d\u7f6e Out [ 24 ]: 0 In [ 25 ]: data = fd . readlines () # \u8fd9\u6b21\u6211\u4eec\u8bfb\u53d6\u6240\u6709\u884c In [ 26 ]: data [: 10 ] # \u67e5\u770b\u524d10\u4e2a\u5143\u7d20 Out [ 26 ]: [ '1 \\n ' , '2 \\n ' , '3 \\n ' , '4 \\n ' , '5 \\n ' , '6 \\n ' , '7 \\n ' , '8 \\n ' , '9 \\n ' , '10 \\n ' ] readlines \u65b9\u6cd5\u6309\u884c\u8bfb\u53d6\u6240\u6709\u7684\u6570\u636e(\u6ce8\u610f\u6bcf\u4e2a\u5143\u7d20\u5305\u542b\u4e86\u6362\u884c\u7b26)\u3002\u8fd9\u91cc\u8865\u5145 seek(offset,reference_point) ,\u5176\u4e2d offset \u662f\u504f\u79fb\u91cf\uff0c reference_point \u76f8\u5bf9\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u53d6\u503c\u4e3a0\u8868\u793a\u5f00\u59cb\u4f4d\u7f6e\uff0c1\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\uff0c2\u8868\u793a\u7ed3\u675f\u4f4d\u7f6e\u3002\u8fd9\u79cd\u60c5\u51b5\u53ea\u9002\u7528\u4e8e\u5b57\u8282\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\uff0c \u5982\u679c\u4ee5\u5b57\u7b26\u65b9\u5f0f\u6253\u5f00\uff0c\u65e0\u6cd5\u5b9e\u73b0\u76f8\u5bf9\u4f4d\u7f6e\u7684\u504f\u79fb \u3002 In [ 1 ]: fd = open ( \"demo.txt\" , \"rb\" ) # \u4e8c\u8fdb\u5236\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6 In [ 2 ]: fd . readline () Out [ 2 ]: b '1 \\n ' In [ 3 ]: fd . readline () Out [ 3 ]: b '2 \\n ' In [ 4 ]: fd . tell () Out [ 4 ]: 4 In [ 5 ]: fd . seek ( - 10 , 2 ) # \u652f\u6301\u76f8\u5bf9\u4f4d\u7f6e\u504f\u79fb\u91cf Out [ 5 ]: 282 In [ 6 ]: fd . read ( 10 ) Out [ 6 ]: b '98 \\n 99 \\n 100 \\n ' \u9664\u4e86\u8fd9\u51e0\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u65b9\u6cd5\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u4f8b\u5982detach\uff0cisatty\uff0creconfigure\u7b49\u7b49\uff0c\u5982\u679c\u5728\u5b9e\u9645\u4e2d\u78b0\u5230\u590d\u6742\u7684\u6587\u4ef6\u6d41\u95ee\u9898\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u67e5\u770b\u5e95\u5c42\u7684C\u8bed\u8a00\u6e90\u7801\uff0c\u6216\u8005\u7528C\u5199\u6269\u5c55\u65b9\u6cd5\u3002","title":"\u6587\u4ef6\u6d41\u7684\u5c5e\u6027\u65b9\u6cd5"},{"location":"advance/file-stream/#_6","text":"\u672c\u6587\u91cd\u70b9\u6574\u7406\u4e86Python\u64cd\u4f5c\u5b57\u7b26\u6587\u4ef6\u548c\u5b57\u8282\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u57fa\u672c\u7684\u8bfb\u5199\u4f7f\u7528\uff0c\u51e0\u884c\u4ee3\u7801\u5c31\u80fd\u641e\u5b9a\uff1b\u9664\u6b64\u4e4b\u5916\u5efa\u8bae\u4f7f\u7528with\u7684\u4e0a\u4e0b\u6587\u8bed\u53e5\uff0c\u8fd9\u6837\u907f\u514d\u624b\u52a8\u8fdb\u884c\u8d44\u6e90\u7ba1\u7406\uff1b\u540e\u7eed\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u4e86\u6587\u4ef6\u6d41\u5bf9\u8c61\uff0c\u4ee5\u53ca\u5bf9\u8c61\u7684\u90e8\u5206\u65b9\u6cd5\uff0c\u91cd\u70b9\u4ecb\u7ecd\u4e86\u6587\u4ef6\u6307\u9488\u7684\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6587\u4ef6\u6307\u9488\u65f6\u5b57\u8282\u6587\u4ef6\u548c\u5b57\u7b26\u6587\u4ef6\u662f\u5b58\u5728\u5dee\u522b\u7684\u3002\u78b0\u5230\u590d\u6742\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u9700\u8981\u5bf9\u540c\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u4f1a\u7528\u5230\u6587\u4ef6\u6307\u9488\u3002","title":"\u603b\u7ed3\u4e00\u4e0b"},{"location":"advance/intro/","text":"","title":"\u5185\u5bb9\u4ecb\u7ecd"},{"location":"advance/pdf/","text":"Python\u8bfb\u5199PDF \u00b6 PDF\u7684\u57fa\u672c\u64cd\u4f5c\u4e3b\u8981\u662f\u8bfb\u53d6\u3001\u521b\u5efa\uff0c\u5408\u5e76\u7b49\u64cd\u4f5c\u3002\u4f7f\u7528Python\u7684\u7b2c\u4e09\u65b9\u5305 PyPDF2 . \u5b89\u88c5\u4f9d\u8d56\u5305 \u00b6 \u4f7f\u7528Python\u7684 pip \u8fdb\u884c\u5b89\u88c5\uff0c\u5b89\u88c5\u5305\u540d\u79f0\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002 pip install PyPDF2 \u67e5\u770b\u57fa\u672c\u7684\u7c7b\u548c\u65b9\u6cd5 \u00b6 \u8fdb\u5165\u5305\u7684 __init__.py \u6587\u4ef6\u53ef\u4ee5\u770b\u5230\u4e3b\u8981\u7684\u51e0\u4e2a\u7c7b\u548c\u65b9\u6cd5 from .pdf import PdfFileReader , PdfFileWriter from .merger import PdfFileMerger from .pagerange import PageRange , parse_filename_page_ranges from ._version import __version__ __all__ = [ \"pdf\" , \"PdfFileMerger\" ] \u4ece\u540d\u79f0\u4e0a\u53ef\u4ee5\u770b\u51fa\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5206\u522b\u662f\u8bfb\u53d6\uff0c\u5199\u5165\u548c\u5408\u5e76\uff0c\u5176\u4e2d\u5408\u5e76\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8bfb\u53d6\u7136\u540e \u518d\u5199\u5165\u7684\u64cd\u4f5c\u3002 \u8bfb\u53d6\u548c\u5199\u5165PDF \u00b6 \u8bfb\u53d6PDF\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 PdfFileReader \u8fd9\u4e2a\u7c7b\uff0c\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u7c7b\u7684\u53c2\u6570 class PdfFileReader ( object ): \"\"\" Initializes a PdfFileReader object. This operation can take some time, as the PDF stream's cross-reference tables are read into memory. :param stream: A File object or an object that supports the standard read and seek methods similar to a File object. Could also be a string representing a path to a PDF file. :param bool strict: Determines whether user should be warned of all problems and also causes some correctable problems to be fatal. Defaults to ``True``. :param warndest: Destination for logging warnings (defaults to ``sys.stderr``). :param bool overwriteWarnings: Determines whether to override Python's ``warnings.py`` module with a custom implementation (defaults to ``True``). \"\"\" def __init__ ( self , stream , strict = True , warndest = None , overwriteWarnings = True ): \u5176\u4e2d\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\u662f stream \uff0c\u6587\u4ef6\u6d41\u800c\u4e0d\u662f\u6587\u4ef6\u540d\u79f0\u3002 \u800cPDF\u7684\u521b\u5efa\u4e0d\u9700\u8981\u4f20\u5165\u53c2\u6570\u3002 from PyPDF2 import PdfFileReader , PdfFileWriter infn = 'infn.pdf' outfn = 'outfn.pdf' # \u83b7\u53d6\u4e00\u4e2a PdfFileReader \u5bf9\u8c61 pdf_input = PdfFileReader ( open ( infn , 'rb' )) # \u83b7\u53d6 PDF \u7684\u9875\u6570 page_count = pdf_input . getNumPages () print ( page_count ) # \u8fd4\u56de\u4e00\u4e2a PageObject page = pdf_input . getPage ( i ) # \u83b7\u53d6\u4e00\u4e2a PdfFileWriter \u5bf9\u8c61 pdf_output = PdfFileWriter () # \u5c06\u4e00\u4e2a PageObject \u52a0\u5165\u5230 PdfFileWriter \u4e2d pdf_output . addPage ( page ) # \u8f93\u51fa\u5230\u6587\u4ef6\u4e2d pdf_output . write ( open ( outfn , 'wb' )) \u5408\u5e76\u591a\u4e2aPDF \u00b6 \u5408\u5e76\u591a\u4e2aPDF\u5c31\u8bfb\u53d6\u591a\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5199\u5165\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002\u4e0d\u8fc7\u8fd9\u6837\u9700\u8981\u8ba1\u7b97\u9875\u9762\u6570\uff0c\u4e0d\u5982\u76f4\u63a5\u7528 PdfFileMerger ,\u63d0\u4f9b\u4e86 append \u65b9\u6cd5 from PyPDF2 import PdfFileReader , PdfFileMerger def read_pdf ( pdf_name ): stream = open ( pdf_name , \"rb\" ) reader = None try : reader = PdfFileReader ( stream ) except Exception as e : print ( e ) return reader def merge_pdf ( pdfs , output_name = \"merge.pdf\" ): merge = PdfFileMerger () for pdf_name in pdfs : pdf_obj = read_pdf ( pdf_name ) print ( \"\u5f00\u59cb\u5408\u5e76 \u300a %s \u300b \u9875\u9762\u6570: %s \" % ( pdf_name , pdf_obj . getNumPages ())) merge . append ( pdf_obj ) merge . write ( open ( output_name , \"wb\" )) print ( \"\u5408\u5e76\u540e\u603b\u9875\u9762\u6570\uff1a\" , merge . id_count ) print ( \"\u5199\u5165\u5f53\u524d\u76ee\u5f55\" , output_name ) if __name__ == '__main__' : pdfs = [ \"file1.pdf\" , \"file2.pdf\" , \"file3.pdf\" ] merge_pdf ( pdfs ) \u8f93\u51fa\u7ed3\u679c\uff1a \u5f00\u59cb\u5408\u5e76 \u300afile1.pdf\u300b \u9875\u9762\u6570: 28 \u5f00\u59cb\u5408\u5e76 \u300afile2.pdf\u300b \u9875\u9762\u6570: 34 \u5f00\u59cb\u5408\u5e76 \u300afile3.pdf\u300b \u9875\u9762\u6570: 38 \u5408\u5e76\u540e\u603b\u9875\u9762\u6570\uff1a 100 \u5199\u5165\u5f53\u524d\u76ee\u5f55 merge.pdf","title":"\u8bfb\u5199PDF\u6587\u4ef6"},{"location":"advance/pdf/#pythonpdf","text":"PDF\u7684\u57fa\u672c\u64cd\u4f5c\u4e3b\u8981\u662f\u8bfb\u53d6\u3001\u521b\u5efa\uff0c\u5408\u5e76\u7b49\u64cd\u4f5c\u3002\u4f7f\u7528Python\u7684\u7b2c\u4e09\u65b9\u5305 PyPDF2 .","title":"Python\u8bfb\u5199PDF"},{"location":"advance/pdf/#_1","text":"\u4f7f\u7528Python\u7684 pip \u8fdb\u884c\u5b89\u88c5\uff0c\u5b89\u88c5\u5305\u540d\u79f0\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002 pip install PyPDF2","title":"\u5b89\u88c5\u4f9d\u8d56\u5305"},{"location":"advance/pdf/#_2","text":"\u8fdb\u5165\u5305\u7684 __init__.py \u6587\u4ef6\u53ef\u4ee5\u770b\u5230\u4e3b\u8981\u7684\u51e0\u4e2a\u7c7b\u548c\u65b9\u6cd5 from .pdf import PdfFileReader , PdfFileWriter from .merger import PdfFileMerger from .pagerange import PageRange , parse_filename_page_ranges from ._version import __version__ __all__ = [ \"pdf\" , \"PdfFileMerger\" ] \u4ece\u540d\u79f0\u4e0a\u53ef\u4ee5\u770b\u51fa\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5206\u522b\u662f\u8bfb\u53d6\uff0c\u5199\u5165\u548c\u5408\u5e76\uff0c\u5176\u4e2d\u5408\u5e76\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8bfb\u53d6\u7136\u540e \u518d\u5199\u5165\u7684\u64cd\u4f5c\u3002","title":"\u67e5\u770b\u57fa\u672c\u7684\u7c7b\u548c\u65b9\u6cd5"},{"location":"advance/pdf/#pdf","text":"\u8bfb\u53d6PDF\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 PdfFileReader \u8fd9\u4e2a\u7c7b\uff0c\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u7c7b\u7684\u53c2\u6570 class PdfFileReader ( object ): \"\"\" Initializes a PdfFileReader object. This operation can take some time, as the PDF stream's cross-reference tables are read into memory. :param stream: A File object or an object that supports the standard read and seek methods similar to a File object. Could also be a string representing a path to a PDF file. :param bool strict: Determines whether user should be warned of all problems and also causes some correctable problems to be fatal. Defaults to ``True``. :param warndest: Destination for logging warnings (defaults to ``sys.stderr``). :param bool overwriteWarnings: Determines whether to override Python's ``warnings.py`` module with a custom implementation (defaults to ``True``). \"\"\" def __init__ ( self , stream , strict = True , warndest = None , overwriteWarnings = True ): \u5176\u4e2d\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\u662f stream \uff0c\u6587\u4ef6\u6d41\u800c\u4e0d\u662f\u6587\u4ef6\u540d\u79f0\u3002 \u800cPDF\u7684\u521b\u5efa\u4e0d\u9700\u8981\u4f20\u5165\u53c2\u6570\u3002 from PyPDF2 import PdfFileReader , PdfFileWriter infn = 'infn.pdf' outfn = 'outfn.pdf' # \u83b7\u53d6\u4e00\u4e2a PdfFileReader \u5bf9\u8c61 pdf_input = PdfFileReader ( open ( infn , 'rb' )) # \u83b7\u53d6 PDF \u7684\u9875\u6570 page_count = pdf_input . getNumPages () print ( page_count ) # \u8fd4\u56de\u4e00\u4e2a PageObject page = pdf_input . getPage ( i ) # \u83b7\u53d6\u4e00\u4e2a PdfFileWriter \u5bf9\u8c61 pdf_output = PdfFileWriter () # \u5c06\u4e00\u4e2a PageObject \u52a0\u5165\u5230 PdfFileWriter \u4e2d pdf_output . addPage ( page ) # \u8f93\u51fa\u5230\u6587\u4ef6\u4e2d pdf_output . write ( open ( outfn , 'wb' ))","title":"\u8bfb\u53d6\u548c\u5199\u5165PDF"},{"location":"advance/pdf/#pdf_1","text":"\u5408\u5e76\u591a\u4e2aPDF\u5c31\u8bfb\u53d6\u591a\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5199\u5165\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002\u4e0d\u8fc7\u8fd9\u6837\u9700\u8981\u8ba1\u7b97\u9875\u9762\u6570\uff0c\u4e0d\u5982\u76f4\u63a5\u7528 PdfFileMerger ,\u63d0\u4f9b\u4e86 append \u65b9\u6cd5 from PyPDF2 import PdfFileReader , PdfFileMerger def read_pdf ( pdf_name ): stream = open ( pdf_name , \"rb\" ) reader = None try : reader = PdfFileReader ( stream ) except Exception as e : print ( e ) return reader def merge_pdf ( pdfs , output_name = \"merge.pdf\" ): merge = PdfFileMerger () for pdf_name in pdfs : pdf_obj = read_pdf ( pdf_name ) print ( \"\u5f00\u59cb\u5408\u5e76 \u300a %s \u300b \u9875\u9762\u6570: %s \" % ( pdf_name , pdf_obj . getNumPages ())) merge . append ( pdf_obj ) merge . write ( open ( output_name , \"wb\" )) print ( \"\u5408\u5e76\u540e\u603b\u9875\u9762\u6570\uff1a\" , merge . id_count ) print ( \"\u5199\u5165\u5f53\u524d\u76ee\u5f55\" , output_name ) if __name__ == '__main__' : pdfs = [ \"file1.pdf\" , \"file2.pdf\" , \"file3.pdf\" ] merge_pdf ( pdfs ) \u8f93\u51fa\u7ed3\u679c\uff1a \u5f00\u59cb\u5408\u5e76 \u300afile1.pdf\u300b \u9875\u9762\u6570: 28 \u5f00\u59cb\u5408\u5e76 \u300afile2.pdf\u300b \u9875\u9762\u6570: 34 \u5f00\u59cb\u5408\u5e76 \u300afile3.pdf\u300b \u9875\u9762\u6570: 38 \u5408\u5e76\u540e\u603b\u9875\u9762\u6570\uff1a 100 \u5199\u5165\u5f53\u524d\u76ee\u5f55 merge.pdf","title":"\u5408\u5e76\u591a\u4e2aPDF"},{"location":"advance/excel/1/","text":"","title":"\u5b89\u88c5\u53ca\u521d\u6b65\u4f7f\u7528"},{"location":"advance/excel/2/","text":"","title":"2"},{"location":"python/class-object1/","text":"\u9762\u5411\u5bf9\u8c61\u4ecb\u7ecd \u00b6 Python\u88ab\u6210\u4e3a\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f46\u4e0d\u4f1a\u5f3a\u5236\u4f60\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9762\u5411\u8fc7\u7a0b\u7684\u65b9\u5f0f\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4f60\u53ef\u4ee5\u628a\u4f60\u60f3\u8981\u505a\u7684\u4e8b\u60c5\u6309\u7167\u6d41\u7a0b\u4e00\u6b65\u4e00\u6b65\u7684\u5b8c\u6210\uff0c\u6574\u4e2a\u8ba1\u7b97\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u6210\u9762\u5411\u8fc7\u7a0b\u7684\u7f16\u7a0b\u3002 \u90a3\u4e48\u4ec0\u4e48\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5462\uff1f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08\u82f1\u8bed\uff1aObject-oriented programming\uff0c\u7f29\u5199\uff1aOOP\uff09\u662f\u79cd\u5177\u6709\u5bf9\u8c61\u6982\u5ff5\u7684\u7a0b\u5e8f\u7f16\u7a0b\u5178\u8303\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u79cd\u7a0b\u5e8f\u5f00\u53d1\u7684\u62bd\u8c61\u65b9\u9488 1 \u3002\u5bf9\u8c61\u662f\u628a\u6570\u636e\u4ee5\u53ca\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u7684\u51fd\u6570\u805a\u5408\u5728\u4e00\u8d77\uff0c\u4f5c\u4e3a\u4e00\u79cd\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002\u5176\u4e2d\u7684\"\u6570\u636e\"\u6570\u636e\u88ab\u79f0\u4e3a\u5c5e\u6027\uff0c\u201c\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u7684\u51fd\u6570\u201d\u6210\u4e3a\u65b9\u6cd5\u3002 \u7c7b\u4e0e\u5bf9\u8c61 \u00b6 \u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\uff0c\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u6982\u5ff5\u5c31\u662f\u7c7b\u4e0e\u5bf9\u8c61\u3002\u7c7b\uff08class\uff09\u662f\u67d0\u4e9b\u4e8b\u7269\u5171\u6709\u7279\u5f81\u7684\u62bd\u8c61\uff0c\u8fd9\u91cc\u62bd\u8c61\u5305\u62ec\u5bf9\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u62bd\u8c61\u3002\u6211\u4eec\u77e5\u9053 int,list, dict \u8fd9\u4e9b\u662f\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7c7b\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u3002\u7c7b\u7684\u5b9a\u4e49\u4f7f\u7528 class \u5173\u952e\u8bcd\uff0c\u7c7b\u91cc\u9762\u53ef\u4ee5\u5b9a\u4e49\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u5148\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50. class Circle : def __init__ ( self , r : float ): self . r = r self . pi = 3.14 def circumference ( self ): \"\"\"\u5468\u957f\"\"\" return 2 * self . pi * self . r def area ( self ): \"\"\"\u9762\u79ef\"\"\" return self . pi * self . r ** 2 print ( Circle ) # <class '__main__.Circle'> \u4e0a\u9762\u7684\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b Circle \uff0c\u4ee3\u7801\u770b\u4e0d\u61c2\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u5148\u89e3\u91ca\u4e00\u4e0b\u3002 __init__ \u65b9\u6cd5\u7528\u6765\u5b9a\u4e49\u521d\u59cb\u5316\u53c2\u6570\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u521d\u59cb\u5316\u53c2\u6570\u662f\u5706\u7684\u534a\u5f84\uff0c\u540c\u65f6\u8fd8\u5b9a\u4e49\u5706\u5468\u7387\u7684\u5927\u5c0f\u3002\u8fd9\u4e24\u4e2a\u6570\u636e\u662f\u5c5e\u6027\u3002\u63a5\u4e0b\u6765\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5206\u522b\u662f\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\uff0c\u5c31\u662f\u65b9\u6cd5\u3002\u6211\u4eec\u6253\u5370\u51fa\u8fd9\u4e2a\u7c7b\uff0c\u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u4e2a\u5173\u952e\u8bcd\u662f class \uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u7c7b\u3002 \u5bf9\u8c61\u5c31\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002\u662f\u7c7b\u521b\u9020\u51fa\u6765\u7684\u5b9e\u9645\u4e8b\u7269\u3002\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u5706\u7c7b\uff0c\u8fd9\u4e2a\u5706\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u4e0d\u6e05\u695a\u5427\uff0c\u534a\u5f84\u5462\uff1f\u53ea\u5b9a\u4e49\u4e86\u534a\u5f84\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5177\u4f53\u5927\u5c0f\u4e0d\u5f97\u800c\u77e5\uff0c\u8fd9\u5c31\u662f\u7c7b\uff0c\u662f\u5bf9\u67d0\u7c7b\u4e8b\u7269\u7684\u62bd\u8c61\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u7528\u8fd9\u4e2a\u7c7b\u5b9e\u4f8b\u5316\u51e0\u4e2a\u5bf9\u8c61\u51fa\u6765\u3002 c1 = Circle ( r = 1 ) c5 = Circle ( r = 5 ) # \u8f93\u51fa\u4e24\u4e2a\u5b9e\u4f8b\u7684\u5468\u957f\u548c\u9762\u79ef print ( c1 . circumference (), c1 . area ()) print ( c5 . circumference (), c5 . area ()) # 6.28 3.14 # 31.4 78.5 c1,c5 \u662f\u7c7b\u5b9e\u4f8b\u51fa\u7684\u4e24\u4e2a\u5bf9\u8c61\uff0c\u5b83\u4eec\u662f\u5177\u4f53\u7684\u4e8b\u7269\uff0c\u534a\u5f84\uff0c\u5468\u957f\u548c\u9762\u79ef\u90fd\u662f\u786e\u5b9a\u7684\u3002\u901a\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u4f60\u5e94\u8be5\u660e\u767d\u4e86\u7c7b\u4e0e\u5bf9\u8c61\u4e86\u5427\u3002\u6211\u4eec\u5728\u4e0a\u4ea7\u96f6\u4ef6\u7684\u65f6\u5019\u9700\u8981\u6a21\u5b50\uff0c\u7c7b\u5c31\u662f\u8fd9\u4e2a\u6a21\u5b50\uff0c\u800c\u5bf9\u8c61\u5c31\u662f\u6a21\u5b50\u751f\u4ea7\u51fa\u7684\u96f6\u4ef6\u3002\u7406\u89e3\u4e86\u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5\u4ee5\u540e\uff0c\u63a5\u4e0b\u6765\u518d\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u3002 \u90fd\u662f\u7c7b \u00b6 \u901a\u8fc7\u4e0a\u9762\u4f8b\u5b50\u4f60\u5e94\u8be5\u7406\u89e3\u4e86\u7c7b\u4e0e\u5bf9\u8c61\uff0c\u73b0\u5728\u6765\u89e3\u91ca\u4e00\u4e0bPython\u4e3a\u4ec0\u4e48\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u56e0\u4e3a\u5728Python\u4e2d\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f\u7c7b\uff0c\u5305\u62ec int, float,list, dict, tuple \u7b49\u7b49\u3002\u600e\u4e48\u67e5\u770b\u5462\uff1f\u7528\u6211\u4eec\u524d\u9762\u8bb2\u8fc7\u7684 type \u51fd\u6570. >>> type ( \"123\" ) < class ' str '> >>> type ( 10 ) < class ' int '> >>> type ( True ) < class ' bool '> >>> type ([ 1 , 2 , 3 ]) < class ' list '> \u4e0a\u9762\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f class \uff0c\u65e2\u7136\u662f\u7c7b\u90a3\u5c31\u6709\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\u3002 >>> ( 10 ) . __add__ ( 12 ) # 10\u662f\u4e00\u4e2a\u7c7b\uff0c\u6709\u52a0\u6cd5\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e8e\u662f\u52a0\u4e0a12 22 >>> 'abc' . upper () # 'abc'\u662f\u4e00\u4e2a\u7c7b\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a\u5c5e\u6027\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199 'ABC' \u6574\u6570\u662f\u7c7b\uff0c\u65e2\u7136\u662f\u7c7b\u4e0b\u9762\u5c31\u6709\u64cd\u4f5c\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u8c03\u7528\u52a0\u6cd5\u80fd\u6b63\u5e38\u8fd4\u56de\u7ed3\u679c\u3002\u5b57\u7b26\u4e32\u4e5f\u662f\u4e5f\u662f\u7c7b\uff0c\u8c03\u7528\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199\u7684\u65b9\u6cd5\u3002\u53ef\u4ee5\u901a\u8fc7 dir \u51fd\u6570\u8f93\u51fa\u7c7b\u7684\u65b9\u6cd5\u3002 for each in dir ( Circle ): print ( each ) \u8f93\u51fa\u7ed3\u679c\uff1a __class__ __delattr__ ... area circumference \u9664\u4e86\u6211\u4eec\u5b9a\u4e49\u7684\u4e24\u4e2a\u65b9\u6cd5\u4ee5\u5916\uff0c\u8fd8\u6709\u5f88\u591a\u4ee5\u53cc\u4e0b\u5212\u7ebf __ \u5f00\u5934\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u662f\u5185\u7f6e\u65b9\u6cd5\uff0c\u4ee5\u540e\u4f1a\u6162\u6162\u9053\u6765\u3002 \u8bfb\u8005\u5c1d\u8bd5 \u524d\u9762\u8bb2\u5217\u8868\u7684\u65f6\u5019\u6211\u4eec\u8bb2\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u5c1d\u8bd5\u8f93\u51fa\u5217\u8868\u7684\u6240\u6709\u65b9\u6cd5\u3002 \u603b\u7ed3 \u00b6 \u672c\u8282\u5185\u5bb9\u4ecb\u7ecd\u4e86\u7c7b\u548c\u5bf9\u8c61\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u7c7b\u662f\u67d0\u4e9b\u4e8b\u7269\u5171\u6709\u7279\u5f81\u7684\u62bd\u8c61\uff0c\u800c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u662f\u5177\u6709\u7684\u4e8b\u7269\u3002\u901a\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u6211\u4eec\u53d1\u73b0Python\u4e2d\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u7adf\u7136\u90fd\u662f\u7c7b\uff0c\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u8bf4Python\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u4e4b\u540e\u8fd8\u5c06\u7ee7\u7eed\u4ecb\u7ecd\u7c7b\u4e0e\u5bf9\u8c61\u3002 \u53c2\u8003 \u00b6 https://zh.wikipedia.org/wiki/\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \u21a9","title":"\u9762\u5411\u5bf9\u8c61\u4ecb\u7ecd"},{"location":"python/class-object1/#_1","text":"Python\u88ab\u6210\u4e3a\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f46\u4e0d\u4f1a\u5f3a\u5236\u4f60\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9762\u5411\u8fc7\u7a0b\u7684\u65b9\u5f0f\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4f60\u53ef\u4ee5\u628a\u4f60\u60f3\u8981\u505a\u7684\u4e8b\u60c5\u6309\u7167\u6d41\u7a0b\u4e00\u6b65\u4e00\u6b65\u7684\u5b8c\u6210\uff0c\u6574\u4e2a\u8ba1\u7b97\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u6210\u9762\u5411\u8fc7\u7a0b\u7684\u7f16\u7a0b\u3002 \u90a3\u4e48\u4ec0\u4e48\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5462\uff1f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08\u82f1\u8bed\uff1aObject-oriented programming\uff0c\u7f29\u5199\uff1aOOP\uff09\u662f\u79cd\u5177\u6709\u5bf9\u8c61\u6982\u5ff5\u7684\u7a0b\u5e8f\u7f16\u7a0b\u5178\u8303\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u79cd\u7a0b\u5e8f\u5f00\u53d1\u7684\u62bd\u8c61\u65b9\u9488 1 \u3002\u5bf9\u8c61\u662f\u628a\u6570\u636e\u4ee5\u53ca\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u7684\u51fd\u6570\u805a\u5408\u5728\u4e00\u8d77\uff0c\u4f5c\u4e3a\u4e00\u79cd\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002\u5176\u4e2d\u7684\"\u6570\u636e\"\u6570\u636e\u88ab\u79f0\u4e3a\u5c5e\u6027\uff0c\u201c\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u7684\u51fd\u6570\u201d\u6210\u4e3a\u65b9\u6cd5\u3002","title":"\u9762\u5411\u5bf9\u8c61\u4ecb\u7ecd"},{"location":"python/class-object1/#_2","text":"\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\uff0c\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u6982\u5ff5\u5c31\u662f\u7c7b\u4e0e\u5bf9\u8c61\u3002\u7c7b\uff08class\uff09\u662f\u67d0\u4e9b\u4e8b\u7269\u5171\u6709\u7279\u5f81\u7684\u62bd\u8c61\uff0c\u8fd9\u91cc\u62bd\u8c61\u5305\u62ec\u5bf9\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u62bd\u8c61\u3002\u6211\u4eec\u77e5\u9053 int,list, dict \u8fd9\u4e9b\u662f\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7c7b\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u3002\u7c7b\u7684\u5b9a\u4e49\u4f7f\u7528 class \u5173\u952e\u8bcd\uff0c\u7c7b\u91cc\u9762\u53ef\u4ee5\u5b9a\u4e49\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u5148\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50. class Circle : def __init__ ( self , r : float ): self . r = r self . pi = 3.14 def circumference ( self ): \"\"\"\u5468\u957f\"\"\" return 2 * self . pi * self . r def area ( self ): \"\"\"\u9762\u79ef\"\"\" return self . pi * self . r ** 2 print ( Circle ) # <class '__main__.Circle'> \u4e0a\u9762\u7684\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b Circle \uff0c\u4ee3\u7801\u770b\u4e0d\u61c2\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u5148\u89e3\u91ca\u4e00\u4e0b\u3002 __init__ \u65b9\u6cd5\u7528\u6765\u5b9a\u4e49\u521d\u59cb\u5316\u53c2\u6570\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u521d\u59cb\u5316\u53c2\u6570\u662f\u5706\u7684\u534a\u5f84\uff0c\u540c\u65f6\u8fd8\u5b9a\u4e49\u5706\u5468\u7387\u7684\u5927\u5c0f\u3002\u8fd9\u4e24\u4e2a\u6570\u636e\u662f\u5c5e\u6027\u3002\u63a5\u4e0b\u6765\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5206\u522b\u662f\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\uff0c\u5c31\u662f\u65b9\u6cd5\u3002\u6211\u4eec\u6253\u5370\u51fa\u8fd9\u4e2a\u7c7b\uff0c\u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u4e2a\u5173\u952e\u8bcd\u662f class \uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u7c7b\u3002 \u5bf9\u8c61\u5c31\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002\u662f\u7c7b\u521b\u9020\u51fa\u6765\u7684\u5b9e\u9645\u4e8b\u7269\u3002\u6bd4\u5982\u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u5706\u7c7b\uff0c\u8fd9\u4e2a\u5706\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u4e0d\u6e05\u695a\u5427\uff0c\u534a\u5f84\u5462\uff1f\u53ea\u5b9a\u4e49\u4e86\u534a\u5f84\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5177\u4f53\u5927\u5c0f\u4e0d\u5f97\u800c\u77e5\uff0c\u8fd9\u5c31\u662f\u7c7b\uff0c\u662f\u5bf9\u67d0\u7c7b\u4e8b\u7269\u7684\u62bd\u8c61\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u7528\u8fd9\u4e2a\u7c7b\u5b9e\u4f8b\u5316\u51e0\u4e2a\u5bf9\u8c61\u51fa\u6765\u3002 c1 = Circle ( r = 1 ) c5 = Circle ( r = 5 ) # \u8f93\u51fa\u4e24\u4e2a\u5b9e\u4f8b\u7684\u5468\u957f\u548c\u9762\u79ef print ( c1 . circumference (), c1 . area ()) print ( c5 . circumference (), c5 . area ()) # 6.28 3.14 # 31.4 78.5 c1,c5 \u662f\u7c7b\u5b9e\u4f8b\u51fa\u7684\u4e24\u4e2a\u5bf9\u8c61\uff0c\u5b83\u4eec\u662f\u5177\u4f53\u7684\u4e8b\u7269\uff0c\u534a\u5f84\uff0c\u5468\u957f\u548c\u9762\u79ef\u90fd\u662f\u786e\u5b9a\u7684\u3002\u901a\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u4f60\u5e94\u8be5\u660e\u767d\u4e86\u7c7b\u4e0e\u5bf9\u8c61\u4e86\u5427\u3002\u6211\u4eec\u5728\u4e0a\u4ea7\u96f6\u4ef6\u7684\u65f6\u5019\u9700\u8981\u6a21\u5b50\uff0c\u7c7b\u5c31\u662f\u8fd9\u4e2a\u6a21\u5b50\uff0c\u800c\u5bf9\u8c61\u5c31\u662f\u6a21\u5b50\u751f\u4ea7\u51fa\u7684\u96f6\u4ef6\u3002\u7406\u89e3\u4e86\u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5\u4ee5\u540e\uff0c\u63a5\u4e0b\u6765\u518d\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u3002","title":"\u7c7b\u4e0e\u5bf9\u8c61"},{"location":"python/class-object1/#_3","text":"\u901a\u8fc7\u4e0a\u9762\u4f8b\u5b50\u4f60\u5e94\u8be5\u7406\u89e3\u4e86\u7c7b\u4e0e\u5bf9\u8c61\uff0c\u73b0\u5728\u6765\u89e3\u91ca\u4e00\u4e0bPython\u4e3a\u4ec0\u4e48\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u56e0\u4e3a\u5728Python\u4e2d\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f\u7c7b\uff0c\u5305\u62ec int, float,list, dict, tuple \u7b49\u7b49\u3002\u600e\u4e48\u67e5\u770b\u5462\uff1f\u7528\u6211\u4eec\u524d\u9762\u8bb2\u8fc7\u7684 type \u51fd\u6570. >>> type ( \"123\" ) < class ' str '> >>> type ( 10 ) < class ' int '> >>> type ( True ) < class ' bool '> >>> type ([ 1 , 2 , 3 ]) < class ' list '> \u4e0a\u9762\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f class \uff0c\u65e2\u7136\u662f\u7c7b\u90a3\u5c31\u6709\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\u3002 >>> ( 10 ) . __add__ ( 12 ) # 10\u662f\u4e00\u4e2a\u7c7b\uff0c\u6709\u52a0\u6cd5\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e8e\u662f\u52a0\u4e0a12 22 >>> 'abc' . upper () # 'abc'\u662f\u4e00\u4e2a\u7c7b\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a\u5c5e\u6027\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199 'ABC' \u6574\u6570\u662f\u7c7b\uff0c\u65e2\u7136\u662f\u7c7b\u4e0b\u9762\u5c31\u6709\u64cd\u4f5c\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u8c03\u7528\u52a0\u6cd5\u80fd\u6b63\u5e38\u8fd4\u56de\u7ed3\u679c\u3002\u5b57\u7b26\u4e32\u4e5f\u662f\u4e5f\u662f\u7c7b\uff0c\u8c03\u7528\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199\u7684\u65b9\u6cd5\u3002\u53ef\u4ee5\u901a\u8fc7 dir \u51fd\u6570\u8f93\u51fa\u7c7b\u7684\u65b9\u6cd5\u3002 for each in dir ( Circle ): print ( each ) \u8f93\u51fa\u7ed3\u679c\uff1a __class__ __delattr__ ... area circumference \u9664\u4e86\u6211\u4eec\u5b9a\u4e49\u7684\u4e24\u4e2a\u65b9\u6cd5\u4ee5\u5916\uff0c\u8fd8\u6709\u5f88\u591a\u4ee5\u53cc\u4e0b\u5212\u7ebf __ \u5f00\u5934\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u662f\u5185\u7f6e\u65b9\u6cd5\uff0c\u4ee5\u540e\u4f1a\u6162\u6162\u9053\u6765\u3002 \u8bfb\u8005\u5c1d\u8bd5 \u524d\u9762\u8bb2\u5217\u8868\u7684\u65f6\u5019\u6211\u4eec\u8bb2\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u5c1d\u8bd5\u8f93\u51fa\u5217\u8868\u7684\u6240\u6709\u65b9\u6cd5\u3002","title":"\u90fd\u662f\u7c7b"},{"location":"python/class-object1/#_4","text":"\u672c\u8282\u5185\u5bb9\u4ecb\u7ecd\u4e86\u7c7b\u548c\u5bf9\u8c61\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u7c7b\u662f\u67d0\u4e9b\u4e8b\u7269\u5171\u6709\u7279\u5f81\u7684\u62bd\u8c61\uff0c\u800c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u662f\u5177\u6709\u7684\u4e8b\u7269\u3002\u901a\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u6211\u4eec\u53d1\u73b0Python\u4e2d\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u7adf\u7136\u90fd\u662f\u7c7b\uff0c\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u8bf4Python\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u4e4b\u540e\u8fd8\u5c06\u7ee7\u7eed\u4ecb\u7ecd\u7c7b\u4e0e\u5bf9\u8c61\u3002","title":"\u603b\u7ed3"},{"location":"python/class-object1/#_5","text":"https://zh.wikipedia.org/wiki/\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \u21a9","title":"\u53c2\u8003"},{"location":"python/class-object2/","text":"\u7c7b\u4e0e\u5bf9\u8c61\u7684\u5c5e\u6027 \u00b6 \u524d\u9762\u5df2\u7ecf\u8bb2\u8fc7\u4e86\u7c7b\u548c\u5bf9\u8c61\u7684\u57fa\u672c\u6982\u5ff5\uff0c","title":"\u7c7b\u4e0e\u5bf9\u8c61\u7684\u5c5e\u6027"},{"location":"python/class-object2/#_1","text":"\u524d\u9762\u5df2\u7ecf\u8bb2\u8fc7\u4e86\u7c7b\u548c\u5bf9\u8c61\u7684\u57fa\u672c\u6982\u5ff5\uff0c","title":"\u7c7b\u4e0e\u5bf9\u8c61\u7684\u5c5e\u6027"},{"location":"python/class-object3/","text":"","title":"\u7c7b\u4e0e\u5bf9\u8c61\u7684\u65b9\u6cd5"},{"location":"python/compute/","text":"\u5f53\u6210\u8ba1\u7b97\u5668\u4f7f\u7528 \u00b6 \u56db\u5219\u8fd0\u7b97 \u00b6 print ( 100 * 3 - 20 + 2 ** 3 ) \u9664\u6cd5\u9700\u8981\u6ce8\u610f \u00b6 print ( 222 / 333 ) # \u666e\u901a\u9664\u6cd5 print ( 222 // 333 ) # \u53d6\u6574\u9664\u6cd5 \u4f7f\u7528\u6570\u5b66\u51fd\u6570 \u00b6 \u5bfc\u5165\u6570\u5b66\u51fd\u6570\u5305\uff1a import math \u6839\u5f0f \u00b6 \u8ba1\u7b97\u6839\u5f0f\uff0c\u6bd4\u5982\u8ba1\u7b97 \\sqrt 3 \\sqrt 3 print ( math . sqrt ( 3 )) \u4e09\u89d2\u51fd\u6570 \u00b6 print ( math . cos ( math . pi / 3 )) print ( math . sin ( math . pi / 6 )) \u53d6\u6574 \u00b6 \u53d6\u6574\u5927\u81f4\u5206\u4e3a3\u79cd\uff0c\u5411\u4e0a\u53d6\u6574\uff0c\u56db\u820d\u4e94\u5165\uff0c\u5411\u4e0b\u53d6\u6574\u3002\u63a5\u4e0b\u6765\u5206\u522b\u6765\u770b\u3002 print ( math . ceil ( 2.4 )) # \u5411\u4e0a\u53d6\u6574 print ( round ( 1.2 )) # \u56db\u820d\u4e94\u5165 print ( round ( 1.7 )) # \u56db\u820d\u4e94\u5165 print ( math . floor ( 1.7 )) # \u5411\u4e0b\u53d6\u6574 print ( math . floor ( 1.2 )) # \u5411\u4e0b\u53d6\u6574 \u6307\u6570\u8ba1\u7b97 \u00b6 \u5176\u5b9e\u6307\u6570\u7684\u8ba1\u7b97\u53ef\u4ee5\u8fd0\u7b97\u7b26 ** ,\uff0c\u6bd4\u5982 3^4 3^4 \u53ef\u4ee5\u5199\u6210 3 ** 4 .\u6570\u5b66\u5305\u91cc\u9762\u4e5f\u63d0\u4f9b\u4e86\u51fd\u6570\u3002 print ( math . pow ( 3 , 4 )) \u603b\u7ed3 \u628aPython\u5f53\u6210\u8ba1\u7b97\u5668\u4f7f\u7528\uff0c\u529f\u80fd\u662f\u975e\u5e38\u5f3a\u5927\u7684\u3002\u6570\u5b66\u5305\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684\u8ba1\u7b97\u51fd\u6570\uff0c\u65b9\u4fbf\u8c03\u7528\u3002\u672c\u8282\u5185\u5bb9\u9996\u6b21\u7528\u5230\u4e86\u5305\u7684\u5bfc\u5165\u3002\u5bfc\u5165\u5305\uff0c\u5176\u5b9e\u662f\u501f\u52a9\u522b\u4eba\u5b9e\u73b0\u7684\u7b97\u6cd5\u3002","title":"\u5f53\u6210\u8ba1\u7b97\u5668"},{"location":"python/compute/#_1","text":"","title":"\u5f53\u6210\u8ba1\u7b97\u5668\u4f7f\u7528"},{"location":"python/compute/#_2","text":"print ( 100 * 3 - 20 + 2 ** 3 )","title":"\u56db\u5219\u8fd0\u7b97"},{"location":"python/compute/#_3","text":"print ( 222 / 333 ) # \u666e\u901a\u9664\u6cd5 print ( 222 // 333 ) # \u53d6\u6574\u9664\u6cd5","title":"\u9664\u6cd5\u9700\u8981\u6ce8\u610f"},{"location":"python/compute/#_4","text":"\u5bfc\u5165\u6570\u5b66\u51fd\u6570\u5305\uff1a import math","title":"\u4f7f\u7528\u6570\u5b66\u51fd\u6570"},{"location":"python/compute/#_5","text":"\u8ba1\u7b97\u6839\u5f0f\uff0c\u6bd4\u5982\u8ba1\u7b97 \\sqrt 3 \\sqrt 3 print ( math . sqrt ( 3 ))","title":"\u6839\u5f0f"},{"location":"python/compute/#_6","text":"print ( math . cos ( math . pi / 3 )) print ( math . sin ( math . pi / 6 ))","title":"\u4e09\u89d2\u51fd\u6570"},{"location":"python/compute/#_7","text":"\u53d6\u6574\u5927\u81f4\u5206\u4e3a3\u79cd\uff0c\u5411\u4e0a\u53d6\u6574\uff0c\u56db\u820d\u4e94\u5165\uff0c\u5411\u4e0b\u53d6\u6574\u3002\u63a5\u4e0b\u6765\u5206\u522b\u6765\u770b\u3002 print ( math . ceil ( 2.4 )) # \u5411\u4e0a\u53d6\u6574 print ( round ( 1.2 )) # \u56db\u820d\u4e94\u5165 print ( round ( 1.7 )) # \u56db\u820d\u4e94\u5165 print ( math . floor ( 1.7 )) # \u5411\u4e0b\u53d6\u6574 print ( math . floor ( 1.2 )) # \u5411\u4e0b\u53d6\u6574","title":"\u53d6\u6574"},{"location":"python/compute/#_8","text":"\u5176\u5b9e\u6307\u6570\u7684\u8ba1\u7b97\u53ef\u4ee5\u8fd0\u7b97\u7b26 ** ,\uff0c\u6bd4\u5982 3^4 3^4 \u53ef\u4ee5\u5199\u6210 3 ** 4 .\u6570\u5b66\u5305\u91cc\u9762\u4e5f\u63d0\u4f9b\u4e86\u51fd\u6570\u3002 print ( math . pow ( 3 , 4 )) \u603b\u7ed3 \u628aPython\u5f53\u6210\u8ba1\u7b97\u5668\u4f7f\u7528\uff0c\u529f\u80fd\u662f\u975e\u5e38\u5f3a\u5927\u7684\u3002\u6570\u5b66\u5305\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684\u8ba1\u7b97\u51fd\u6570\uff0c\u65b9\u4fbf\u8c03\u7528\u3002\u672c\u8282\u5185\u5bb9\u9996\u6b21\u7528\u5230\u4e86\u5305\u7684\u5bfc\u5165\u3002\u5bfc\u5165\u5305\uff0c\u5176\u5b9e\u662f\u501f\u52a9\u522b\u4eba\u5b9e\u73b0\u7684\u7b97\u6cd5\u3002","title":"\u6307\u6570\u8ba1\u7b97"},{"location":"python/dict/","text":"\u5b57\u5178 \u00b6 \u4ecb\u7ecd \u00b6 \u5b57\u5178\u662f\u4e00\u79cd\u901a\u8fc7key\u67e5\u627evalue\u7684\u8fc7\u7a0b\u7684\u6570\u636e\u7ed3\u6784\u3002 \u6211\u4eec\u67e5\u5b57\u5178\u65f6\u901a\u8fc7\u504f\u65c1\u90e8\u9996\u67e5\u5230\u8fd9\u4e2a\u5b57\u7684\u9875\u7801\uff0c\u7136\u540e\u627e\u5230\u8fd9\u4e2a\u5b57\u3002\u987e\u540d\u601d\u4e49\u5b57\u5178\u5c31\u662f\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u3002\u6211\u4eec\u5b58\u50a8\u4e86\u5f88\u591a\u6570\u636e\uff08value\uff09\uff0c\u5148\u901a\u8fc7key\u627e\u5230\u4f4d\u7f6e\uff0c\u7136\u540e\u5c31\u80fd\u62ff\u5230\u8fd9\u4e2a\u6570\u636e\u3002\u8fd9\u79cd\u5c31\u662fkey-value\u7684\u5b57\u5178\u6570\u636e\u3002 \u6bd4\u5982\u6211\u4eec\u5efa\u7acb\u4e86\u6c34\u679c\u4e0e\u4ef7\u683c\u7684\u5173\u7cfb\uff0c\u7528\u5b57\u5178\u5b58\u50a8\u3002 price = { \"\u82f9\u679c\" : 8 , \"\u9999\u68a8\" : 9 , \"\u897f\u74dc\" : 4.5 , \"\u8354\u679d\" : 20 } \u8bbf\u95ee \u00b6 \u5728\u67e5\u8be2\u67d0\u79cd\u6c34\u679c\u5355\u4ef7\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u6c34\u679c\u7684\u540d\u79f0\u5c31\u80fd\u5f97\u5230\u3002 >>> price [ \"\u82f9\u679c\" ] 8 >>> price [ '\u897f\u74dc' ] 4.5 >>> price [ '\u9999\u8549' ] # \u62a5\u9519\uff0c\u56e0\u4e3a\u8fd9\u79cd\u6c34\u679c\u6839\u672c\u627e\u4e0d\u5230 \u5b57\u5178\u9664\u4e86\u53ef\u4ee5\u4fbf\u6377\u7684\u83b7\u53d6value\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u5224\u65adkey\u662f\u5426\u5b58\u5728\u5b57\u5178\u4e2d\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u67d0\u79cd\u6c34\u679c\u662f\u4e0d\u662f\u5728\u5217\u51fa\u7684\u5355\u4ef7\u4e2d\u3002 >>> '\u674e\u5b50' in price # \u4e0d\u5728\u5355\u4ef7\u4e2d False >>> '\u897f\u74dc' in price True >>> '\u674e\u5b50' not in price # \u786e\u5b9e\u4e0d\u5728\u5355\u4ef7\u4e2d True \u904d\u5386 \u00b6 \u9664\u4e86\u4e0a\u9762\u83b7\u53d6value\u503c\u548c\u5224\u65ad\u662f\u4e0d\u5305\u542b\u5173\u7cfb\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u904d\u5386\u8fd9\u4e2a\u5b57\u5178\u3002 for key , value in dict_data . items (): print ( key , \"==>\" , value ) \u7ec3\u4e60 \u8bfb\u8005\u81ea\u884c\u8f93\u51fa\u5f53\u9762\u7684\u6c34\u679c\u5355\u4ef7\u8868 \u6ce8\u610f \u6bcf\u6b21\u904d\u5386\u7684\u7ed3\u679c\u8f93\u51fa\u7684\u987a\u5e8f\u53ef\u80fd\u4e0d\u540c\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b57\u5178\u662f\u4e00\u79cd\u65e0\u5e8f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u901a\u8fc7key-value\u8fd9\u79cd\u952e\u503c\u5bf9\u5173\u8054\u7684\u3002 \u589e\u5220\u6539\u64cd\u4f5c \u00b6 \u4ef7\u683c\u8868\u5217\u597d\u4e86\uff0c\u6c34\u679c\u7684\u4ef7\u683c\u4e0d\u53ef\u80fd\u4e0d\u53d8\u4e86\u3002\u6211\u4eec\u9664\u4e86\u9700\u8981\u83b7\u53d6\u4ef7\u683c\uff0c\u8fd8\u9700\u8981\u589e\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u4ef7\u683c\u3002 >>> price [ '\u674e\u5b50' ] = 15 # \u589e\u52a0\u674e\u5b50\u7684\u5355\u4ef7 >>> price { '\u82f9\u679c' : 8 , '\u9999\u68a8' : 9 , '\u897f\u74dc' : 4.5 , '\u8354\u679d' : 20 , '\u674e\u5b50' : 15 } >>> del price [ '\u897f\u74dc' ] >>> price { '\u82f9\u679c' : 8 , '\u9999\u68a8' : 9 , '\u8354\u679d' : 20 , '\u674e\u5b50' : 15 } >>> price [ '\u82f9\u679c' ] = 12 # \u82f9\u679c\u6da8\u4ef7 >>> price { '\u82f9\u679c' : 12 , '\u9999\u68a8' : 9 , '\u8354\u679d' : 20 , '\u674e\u5b50' : 15 } \u8fd9\u91cc\u8865\u5145\u4e00\u53e5\uff0c\u66f4\u65b0\u5b57\u5178\u7684\u65f6\u5019\u4e0e\u6dfb\u52a0\u5143\u7d20\u4e00\u6837\u3002\u5b57\u5178\u6dfb\u52a0\u5143\u7d20\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709key\u4f1a\u76f4\u63a5\u6dfb\u52a0\uff0c\u5982\u679ckey\u5b58\u5728\u7684\u4f1a\u8986\u76d6\u539f\u6765\u7684value\u503c\u3002 \u603b\u7ed3 \u00b6 \u672c\u8282\u5185\u5bb9\u8bb2\u8ff0\u4e86\u5b57\u5178\u7684\u6982\u5ff5\uff0c\u4ee5\u53ca\u5b57\u5178\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u5305\u62ec\u5b57\u5178\u7684\u8bbf\u95ee\u548c\u904d\u5386\uff0c\u9664\u6b21\u4e4b\u5916\u8fd8\u6709\u51e0\u4e2a\u65b9\u6cd5\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5b66\u4e60\u3002\u5b57\u5178\u7684\u5185\u5bb9\u6bd4\u8f83\u7b80\u5355\uff0c\u57fa\u672c\u4f7f\u7528\u5c31\u8fd9\u4e48\u591a\u3002","title":"\u5b57\u5178"},{"location":"python/dict/#_1","text":"","title":"\u5b57\u5178"},{"location":"python/dict/#_2","text":"\u5b57\u5178\u662f\u4e00\u79cd\u901a\u8fc7key\u67e5\u627evalue\u7684\u8fc7\u7a0b\u7684\u6570\u636e\u7ed3\u6784\u3002 \u6211\u4eec\u67e5\u5b57\u5178\u65f6\u901a\u8fc7\u504f\u65c1\u90e8\u9996\u67e5\u5230\u8fd9\u4e2a\u5b57\u7684\u9875\u7801\uff0c\u7136\u540e\u627e\u5230\u8fd9\u4e2a\u5b57\u3002\u987e\u540d\u601d\u4e49\u5b57\u5178\u5c31\u662f\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u3002\u6211\u4eec\u5b58\u50a8\u4e86\u5f88\u591a\u6570\u636e\uff08value\uff09\uff0c\u5148\u901a\u8fc7key\u627e\u5230\u4f4d\u7f6e\uff0c\u7136\u540e\u5c31\u80fd\u62ff\u5230\u8fd9\u4e2a\u6570\u636e\u3002\u8fd9\u79cd\u5c31\u662fkey-value\u7684\u5b57\u5178\u6570\u636e\u3002 \u6bd4\u5982\u6211\u4eec\u5efa\u7acb\u4e86\u6c34\u679c\u4e0e\u4ef7\u683c\u7684\u5173\u7cfb\uff0c\u7528\u5b57\u5178\u5b58\u50a8\u3002 price = { \"\u82f9\u679c\" : 8 , \"\u9999\u68a8\" : 9 , \"\u897f\u74dc\" : 4.5 , \"\u8354\u679d\" : 20 }","title":"\u4ecb\u7ecd"},{"location":"python/dict/#_3","text":"\u5728\u67e5\u8be2\u67d0\u79cd\u6c34\u679c\u5355\u4ef7\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u6c34\u679c\u7684\u540d\u79f0\u5c31\u80fd\u5f97\u5230\u3002 >>> price [ \"\u82f9\u679c\" ] 8 >>> price [ '\u897f\u74dc' ] 4.5 >>> price [ '\u9999\u8549' ] # \u62a5\u9519\uff0c\u56e0\u4e3a\u8fd9\u79cd\u6c34\u679c\u6839\u672c\u627e\u4e0d\u5230 \u5b57\u5178\u9664\u4e86\u53ef\u4ee5\u4fbf\u6377\u7684\u83b7\u53d6value\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u5224\u65adkey\u662f\u5426\u5b58\u5728\u5b57\u5178\u4e2d\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u67d0\u79cd\u6c34\u679c\u662f\u4e0d\u662f\u5728\u5217\u51fa\u7684\u5355\u4ef7\u4e2d\u3002 >>> '\u674e\u5b50' in price # \u4e0d\u5728\u5355\u4ef7\u4e2d False >>> '\u897f\u74dc' in price True >>> '\u674e\u5b50' not in price # \u786e\u5b9e\u4e0d\u5728\u5355\u4ef7\u4e2d True","title":"\u8bbf\u95ee"},{"location":"python/dict/#_4","text":"\u9664\u4e86\u4e0a\u9762\u83b7\u53d6value\u503c\u548c\u5224\u65ad\u662f\u4e0d\u5305\u542b\u5173\u7cfb\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u904d\u5386\u8fd9\u4e2a\u5b57\u5178\u3002 for key , value in dict_data . items (): print ( key , \"==>\" , value ) \u7ec3\u4e60 \u8bfb\u8005\u81ea\u884c\u8f93\u51fa\u5f53\u9762\u7684\u6c34\u679c\u5355\u4ef7\u8868 \u6ce8\u610f \u6bcf\u6b21\u904d\u5386\u7684\u7ed3\u679c\u8f93\u51fa\u7684\u987a\u5e8f\u53ef\u80fd\u4e0d\u540c\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b57\u5178\u662f\u4e00\u79cd\u65e0\u5e8f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u901a\u8fc7key-value\u8fd9\u79cd\u952e\u503c\u5bf9\u5173\u8054\u7684\u3002","title":"\u904d\u5386"},{"location":"python/dict/#_5","text":"\u4ef7\u683c\u8868\u5217\u597d\u4e86\uff0c\u6c34\u679c\u7684\u4ef7\u683c\u4e0d\u53ef\u80fd\u4e0d\u53d8\u4e86\u3002\u6211\u4eec\u9664\u4e86\u9700\u8981\u83b7\u53d6\u4ef7\u683c\uff0c\u8fd8\u9700\u8981\u589e\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u4ef7\u683c\u3002 >>> price [ '\u674e\u5b50' ] = 15 # \u589e\u52a0\u674e\u5b50\u7684\u5355\u4ef7 >>> price { '\u82f9\u679c' : 8 , '\u9999\u68a8' : 9 , '\u897f\u74dc' : 4.5 , '\u8354\u679d' : 20 , '\u674e\u5b50' : 15 } >>> del price [ '\u897f\u74dc' ] >>> price { '\u82f9\u679c' : 8 , '\u9999\u68a8' : 9 , '\u8354\u679d' : 20 , '\u674e\u5b50' : 15 } >>> price [ '\u82f9\u679c' ] = 12 # \u82f9\u679c\u6da8\u4ef7 >>> price { '\u82f9\u679c' : 12 , '\u9999\u68a8' : 9 , '\u8354\u679d' : 20 , '\u674e\u5b50' : 15 } \u8fd9\u91cc\u8865\u5145\u4e00\u53e5\uff0c\u66f4\u65b0\u5b57\u5178\u7684\u65f6\u5019\u4e0e\u6dfb\u52a0\u5143\u7d20\u4e00\u6837\u3002\u5b57\u5178\u6dfb\u52a0\u5143\u7d20\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709key\u4f1a\u76f4\u63a5\u6dfb\u52a0\uff0c\u5982\u679ckey\u5b58\u5728\u7684\u4f1a\u8986\u76d6\u539f\u6765\u7684value\u503c\u3002","title":"\u589e\u5220\u6539\u64cd\u4f5c"},{"location":"python/dict/#_6","text":"\u672c\u8282\u5185\u5bb9\u8bb2\u8ff0\u4e86\u5b57\u5178\u7684\u6982\u5ff5\uff0c\u4ee5\u53ca\u5b57\u5178\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u5305\u62ec\u5b57\u5178\u7684\u8bbf\u95ee\u548c\u904d\u5386\uff0c\u9664\u6b21\u4e4b\u5916\u8fd8\u6709\u51e0\u4e2a\u65b9\u6cd5\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5b66\u4e60\u3002\u5b57\u5178\u7684\u5185\u5bb9\u6bd4\u8f83\u7b80\u5355\uff0c\u57fa\u672c\u4f7f\u7528\u5c31\u8fd9\u4e48\u591a\u3002","title":"\u603b\u7ed3"},{"location":"python/dowhat/","text":"\u80fd\u505a\u4ec0\u4e48 \u00b6","title":"\u80fd\u505a\u4ec0\u4e48"},{"location":"python/dowhat/#_1","text":"","title":"\u80fd\u505a\u4ec0\u4e48"},{"location":"python/for-while/","text":"\u5faa\u73af \u00b6 \u8ba1\u7b97\u673a\u975e\u5e38\u64c5\u957f\u7684\u4e8b\u60c5\u662f\u5927\u91cf\u91cd\u590d\u7684\u4e8b\u60c5\uff0c\u800c\u4eba\u7c7b\u662f\u975e\u5e38\u8ba8\u538c\u53cd\u590d\u91cd\u590d\u7684\u4e8b\u60c5\u3002\u6bd4\u5982\u8bf4\u8ba9\u4f60\u4ece1\u5199\u52301000\uff0c\u4f60\u53ef\u80fd\u5c31\u8981\u6000\u7591\u4eba\u751f\u4e86\uff0c\u5199\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u8fd9\u4e48\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u4e0d\u8981\u4e00\u79d2\u949f\u5c31\u8ddf\u8f93\u51fa\u6765\uff0c\u800c\u4e14\u8fd8\u80fd\u82b1\u5f0f\u8f93\u51fa\u3002 \u8ba1\u7b97\u673a\u5904\u7406\u8fd9\u4e9b\u5927\u91cf\u91cd\u590d\u4e8b\u60c5\u65f6\u9700\u8981\u7528\u5230\u5faa\u73af\u3002\u6bd4\u5982\u8001\u5e08\u7f5a\u4f60\u6284\u5199\u674e\u767d\u7684\u300a\u671b\u5e90\u5c71\u7011\u5e03\u300b\u4e00\u767e\u904d\u3002 \u65e5\u7167\u9999\u7089\u751f\u7d2b\u70df\uff0c\u9065\u770b\u7011\u5e03\u6302\u524d\u5ddd\u3002 \u98de\u6d41\u76f4\u4e0b\u4e09\u5343\u5c3a\uff0c\u7591\u662f\u94f6\u6cb3\u843d\u4e5d\u5929\u3002 \u8fd9\u4e2a\u65f6\u5019\u4e00\u4e2a\u5faa\u73af\u8bed\u53e5\u5c31\u80fd\u79d2\u6740\u3002\u5faa\u73af\u8bed\u53e5\u5206\u4e3a for \u8bed\u53e5\u548c while \u8bed\u53e5\u3002 poem = \"\"\" \u65e5\u7167\u9999\u7089\u751f\u7d2b\u70df\uff0c\u9065\u770b\u7011\u5e03\u6302\u524d\u5ddd\u3002 \u98de\u6d41\u76f4\u4e0b\u4e09\u5343\u5c3a\uff0c\u7591\u662f\u94f6\u6cb3\u843d\u4e5d\u5929\u3002 \"\"\" for i in range ( 100 ): print ( poem ) # \u6539\u9020\u6210while i = 0 while i < 100 : print ( poem ) i = i + 1 for \u5faa\u73af\u5f3a\u5236\u5faa\u73af\uff0c\u5f88\u5bb9\u786e\u5b9a\u5faa\u73af\u7684\u6b21\u6570\u3002\u6bd4\u5982\u6211\u4eec\u5c31\u8981\u5faa\u73af100\u6b21\uff0c\u4f7f\u7528range\u751f\u62100-99\u7684\u5e8f\u5217\uff0c\u4e5f\u5c31\u662f100\u4e2a\u6570\uff0c\u7136\u540e\u7528for\u5faa\u73af\u904d\u5386\u8fd9100\u4e2a\u6570\u7684\u5e8f\u5217\uff0c\u4ece\u800c\u8fbe\u5230\u4e86\u5faa\u73af\u6267\u884c print(poem) \u4e00\u767e\u6b21\u7684\u6548\u679c\u3002\u800c while \u5faa\u73af\u7279\u70b9\u662f**\u6761\u4ef6\u5faa\u73af**\uff0c\u6267\u884c\u7684\u6761\u4ef6\u662f i < 100 ,\u5f53\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u4ee5\u540e\uff0c\u5faa\u73af\u5c06\u4f1a\u8df3\u51fa\u3002 \u5728\u5f88\u591a\u65f6\u5019\u8fd9\u4e24\u79cd\u5faa\u73af\u662f\u53ef\u4ee5\u8f6c\u5316\u7684\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5f97\u770b\u5177\u4f53\u60c5\u51b5\uff0c\u8bfb\u8005\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u8fd9\u91cc\u4e0d\u662f\u8003\u8bd5\uff0c\u4e0d\u4f1a\u5f3a\u8feb\u76f8\u4e92\u6539\u5199\u3002 \u52a8\u624b\u9898 \u8bfb\u8005\u53ef\u4ee5\u8003\u8651\u8f93\u51fa9x9\u7684\u4e58\u6cd5\u8868 \u8df3\u51fa\u5faa\u73af \u00b6 \u8df3\u51fa\u5faa\u73af\u9002\u7528\u4e8efor\u548cwhile\u5faa\u73af\uff0c\u4e0d\u8fc7\u8df3\u51fa\u7528\u4e24\u79cd\u65b9\u5f0f\u3002 1. \u8df3\u51fa\u5f53\u524d\u5faa\u73af\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\u3002\u7528 continue . 2. \u8df3\u51fa\u5faa\u73af\uff0c\u4e0d\u518d\u6267\u884c\u5faa\u73af\u3002\u7528 break \u6bd4\u5982\u6211\u4eec\u8f93\u51fa0-9\u7684\u6570\u5b57\uff0c\u4e00\u79cd\u60c5\u51b5\u662f\u4e0d\u8f93\u51fa7\uff0c\u4e5f\u5c31\u662f\u8df3\u8fc77\uff0c\u76f4\u63a5\u8f93\u51fa8\u548c9.\u53e6\u5916\u4e00\u79cd\u5c31\u662f\u78b0\u52307\u4ee5\u540e\u4e0d\u518d\u8f93\u51fa\u4e86\u3002\u6211\u4eec\u7528for\u5faa\u73af\u5206\u522b\u6765\u5b9e\u73b0\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002 for i in range ( 10 ): if i == 7 : continue # \u8df3\u51fa\u5f53\u524d\u5faa\u73af\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21 print ( i ) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 0 1 2 3 4 5 6 8 9 for i in range ( 10 ): if i == 7 : break # \u7ed3\u675f\u5faa\u73af print ( i ) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 0 1 2 3 4 5 6 \u8865\u5145 \u00b6 \u5176\u5b9e for \u548c while \u5faa\u73af\u662f\u53ef\u4ee5\u914d\u5408 else \u7684\uff0c\u5f53\u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\u6bd5\uff0c\u4f1a\u6267\u884c else \u8bed\u53e5\uff0c\u5982\u679c\u78b0\u5230 break \u8df3\u51fa\u4e86\u5faa\u73af\u5219\u4e0d\u4f1a\u6267\u884c else \u8bed\u53e5\u3002 for item in container : if search_something ( item ): # Found it! process ( item ) break else : # Didn't find anything.. not_found_in_container () \u6211\u4eec\u8fd8\u662f\u7ee7\u7eed\u770b\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u627e\u5230\u6570\u5b577\u4ee5\u540e\u5faa\u73af\u7ed3\u675f\u3002 for i in range ( 10 ): if i == 7 : print ( \"\u627e\u5230\u6570\u5b577\u4e86\" ) break else : print ( \"\u5faa\u73af\u7ed3\u675f\uff0c\u6ca1\u627e\u5230\" ) # \u627e\u5230\u6570\u5b577\u4e86 \u4fee\u6539\u4e0a\u9762\u7684break\u8ba9\u5faa\u73af\u6267\u884c\u5b8c\uff0c\u5219else\u8bed\u53e5\u4e5f\u4f1a\u88ab\u6267\u884c\u3002 \u603b\u7ed3 \u00b6 \u672c\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5faa\u73af\u8bed\u53e5\uff0c for \u5faa\u73af\u548c while \u5faa\u73af\u3002\u8865\u5145\u4e86\u5faa\u73af\u53ef\u4ee5\u4e0eelse\u642d\u914d\u4f7f\u7528\u3002\u5728\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u5faa\u73af\u7528\u5f97\u975e\u5e38\u591a\uff0c\u8fd9\u4e2a\u662f\u8ba1\u7b97\u673a\u7684\u4e13\u957f\uff0c\u9700\u8981\u591a\u52a0\u7ec3\u4e60\u3002","title":"\u5faa\u73af"},{"location":"python/for-while/#_1","text":"\u8ba1\u7b97\u673a\u975e\u5e38\u64c5\u957f\u7684\u4e8b\u60c5\u662f\u5927\u91cf\u91cd\u590d\u7684\u4e8b\u60c5\uff0c\u800c\u4eba\u7c7b\u662f\u975e\u5e38\u8ba8\u538c\u53cd\u590d\u91cd\u590d\u7684\u4e8b\u60c5\u3002\u6bd4\u5982\u8bf4\u8ba9\u4f60\u4ece1\u5199\u52301000\uff0c\u4f60\u53ef\u80fd\u5c31\u8981\u6000\u7591\u4eba\u751f\u4e86\uff0c\u5199\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u8fd9\u4e48\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u4e0d\u8981\u4e00\u79d2\u949f\u5c31\u8ddf\u8f93\u51fa\u6765\uff0c\u800c\u4e14\u8fd8\u80fd\u82b1\u5f0f\u8f93\u51fa\u3002 \u8ba1\u7b97\u673a\u5904\u7406\u8fd9\u4e9b\u5927\u91cf\u91cd\u590d\u4e8b\u60c5\u65f6\u9700\u8981\u7528\u5230\u5faa\u73af\u3002\u6bd4\u5982\u8001\u5e08\u7f5a\u4f60\u6284\u5199\u674e\u767d\u7684\u300a\u671b\u5e90\u5c71\u7011\u5e03\u300b\u4e00\u767e\u904d\u3002 \u65e5\u7167\u9999\u7089\u751f\u7d2b\u70df\uff0c\u9065\u770b\u7011\u5e03\u6302\u524d\u5ddd\u3002 \u98de\u6d41\u76f4\u4e0b\u4e09\u5343\u5c3a\uff0c\u7591\u662f\u94f6\u6cb3\u843d\u4e5d\u5929\u3002 \u8fd9\u4e2a\u65f6\u5019\u4e00\u4e2a\u5faa\u73af\u8bed\u53e5\u5c31\u80fd\u79d2\u6740\u3002\u5faa\u73af\u8bed\u53e5\u5206\u4e3a for \u8bed\u53e5\u548c while \u8bed\u53e5\u3002 poem = \"\"\" \u65e5\u7167\u9999\u7089\u751f\u7d2b\u70df\uff0c\u9065\u770b\u7011\u5e03\u6302\u524d\u5ddd\u3002 \u98de\u6d41\u76f4\u4e0b\u4e09\u5343\u5c3a\uff0c\u7591\u662f\u94f6\u6cb3\u843d\u4e5d\u5929\u3002 \"\"\" for i in range ( 100 ): print ( poem ) # \u6539\u9020\u6210while i = 0 while i < 100 : print ( poem ) i = i + 1 for \u5faa\u73af\u5f3a\u5236\u5faa\u73af\uff0c\u5f88\u5bb9\u786e\u5b9a\u5faa\u73af\u7684\u6b21\u6570\u3002\u6bd4\u5982\u6211\u4eec\u5c31\u8981\u5faa\u73af100\u6b21\uff0c\u4f7f\u7528range\u751f\u62100-99\u7684\u5e8f\u5217\uff0c\u4e5f\u5c31\u662f100\u4e2a\u6570\uff0c\u7136\u540e\u7528for\u5faa\u73af\u904d\u5386\u8fd9100\u4e2a\u6570\u7684\u5e8f\u5217\uff0c\u4ece\u800c\u8fbe\u5230\u4e86\u5faa\u73af\u6267\u884c print(poem) \u4e00\u767e\u6b21\u7684\u6548\u679c\u3002\u800c while \u5faa\u73af\u7279\u70b9\u662f**\u6761\u4ef6\u5faa\u73af**\uff0c\u6267\u884c\u7684\u6761\u4ef6\u662f i < 100 ,\u5f53\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u4ee5\u540e\uff0c\u5faa\u73af\u5c06\u4f1a\u8df3\u51fa\u3002 \u5728\u5f88\u591a\u65f6\u5019\u8fd9\u4e24\u79cd\u5faa\u73af\u662f\u53ef\u4ee5\u8f6c\u5316\u7684\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5f97\u770b\u5177\u4f53\u60c5\u51b5\uff0c\u8bfb\u8005\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u8fd9\u91cc\u4e0d\u662f\u8003\u8bd5\uff0c\u4e0d\u4f1a\u5f3a\u8feb\u76f8\u4e92\u6539\u5199\u3002 \u52a8\u624b\u9898 \u8bfb\u8005\u53ef\u4ee5\u8003\u8651\u8f93\u51fa9x9\u7684\u4e58\u6cd5\u8868","title":"\u5faa\u73af"},{"location":"python/for-while/#_2","text":"\u8df3\u51fa\u5faa\u73af\u9002\u7528\u4e8efor\u548cwhile\u5faa\u73af\uff0c\u4e0d\u8fc7\u8df3\u51fa\u7528\u4e24\u79cd\u65b9\u5f0f\u3002 1. \u8df3\u51fa\u5f53\u524d\u5faa\u73af\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\u3002\u7528 continue . 2. \u8df3\u51fa\u5faa\u73af\uff0c\u4e0d\u518d\u6267\u884c\u5faa\u73af\u3002\u7528 break \u6bd4\u5982\u6211\u4eec\u8f93\u51fa0-9\u7684\u6570\u5b57\uff0c\u4e00\u79cd\u60c5\u51b5\u662f\u4e0d\u8f93\u51fa7\uff0c\u4e5f\u5c31\u662f\u8df3\u8fc77\uff0c\u76f4\u63a5\u8f93\u51fa8\u548c9.\u53e6\u5916\u4e00\u79cd\u5c31\u662f\u78b0\u52307\u4ee5\u540e\u4e0d\u518d\u8f93\u51fa\u4e86\u3002\u6211\u4eec\u7528for\u5faa\u73af\u5206\u522b\u6765\u5b9e\u73b0\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002 for i in range ( 10 ): if i == 7 : continue # \u8df3\u51fa\u5f53\u524d\u5faa\u73af\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21 print ( i ) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 0 1 2 3 4 5 6 8 9 for i in range ( 10 ): if i == 7 : break # \u7ed3\u675f\u5faa\u73af print ( i ) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 0 1 2 3 4 5 6","title":"\u8df3\u51fa\u5faa\u73af"},{"location":"python/for-while/#_3","text":"\u5176\u5b9e for \u548c while \u5faa\u73af\u662f\u53ef\u4ee5\u914d\u5408 else \u7684\uff0c\u5f53\u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\u6bd5\uff0c\u4f1a\u6267\u884c else \u8bed\u53e5\uff0c\u5982\u679c\u78b0\u5230 break \u8df3\u51fa\u4e86\u5faa\u73af\u5219\u4e0d\u4f1a\u6267\u884c else \u8bed\u53e5\u3002 for item in container : if search_something ( item ): # Found it! process ( item ) break else : # Didn't find anything.. not_found_in_container () \u6211\u4eec\u8fd8\u662f\u7ee7\u7eed\u770b\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u627e\u5230\u6570\u5b577\u4ee5\u540e\u5faa\u73af\u7ed3\u675f\u3002 for i in range ( 10 ): if i == 7 : print ( \"\u627e\u5230\u6570\u5b577\u4e86\" ) break else : print ( \"\u5faa\u73af\u7ed3\u675f\uff0c\u6ca1\u627e\u5230\" ) # \u627e\u5230\u6570\u5b577\u4e86 \u4fee\u6539\u4e0a\u9762\u7684break\u8ba9\u5faa\u73af\u6267\u884c\u5b8c\uff0c\u5219else\u8bed\u53e5\u4e5f\u4f1a\u88ab\u6267\u884c\u3002","title":"\u8865\u5145"},{"location":"python/for-while/#_4","text":"\u672c\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5faa\u73af\u8bed\u53e5\uff0c for \u5faa\u73af\u548c while \u5faa\u73af\u3002\u8865\u5145\u4e86\u5faa\u73af\u53ef\u4ee5\u4e0eelse\u642d\u914d\u4f7f\u7528\u3002\u5728\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u5faa\u73af\u7528\u5f97\u975e\u5e38\u591a\uff0c\u8fd9\u4e2a\u662f\u8ba1\u7b97\u673a\u7684\u4e13\u957f\uff0c\u9700\u8981\u591a\u52a0\u7ec3\u4e60\u3002","title":"\u603b\u7ed3"},{"location":"python/func-args/","text":"\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570 \u00b6 \u4e0a\u4e00\u8282\u5df2\u7ecf\u8bb2\u4e86\u4e00\u90e8\u5206\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\uff0c\u51fd\u6570\u53ef\u63a5\u53d7\u65e0\u53c2\u6570\uff0c\u548c\u591a\u4e2a\u53c2\u6570\u7684\u60c5\u51b5\u3002\u4ed4\u7ec6\u60f3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u8f83\u591a\uff0c4-5\u4e2a\u53c2\u6570\u3002\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4f20\u5165\u53c2\u6570\u7684\u987a\u5e8f\u5f88\u5bb9\u6613\u51fa\u9519\u3002\u6bd4\u5982\uff1a def confirm ( name , age , gender , email , password ): print ( \"\u8bf7\u786e\u8ba4\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f:\" ) print ( \"name:\" , name ) print ( \"age:\" , age ) print ( \"gender:\" , gender ) print ( \"email:\" , email ) print ( \"password:\" , password ) \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5fc5\u987b\u5f88\u5c0f\u5fc3\u7684\u6309\u7167\u987a\u5e8f\u8f93\u5165\u3002\u6709\u6ca1\u6709\u529e\u6cd5\u8ba9\u53c2\u6570\u667a\u80fd\u4e00\u70b9\uff0c\u5373\u4f7f\u4e0d\u6309\u987a\u5e8f\u4e5f\u80fd\u81ea\u52a8\u5bf9\u5e94\u5462\uff1f\u8fd9\u5c31\u662f\u6211\u4eec\u8981\u5c06\u7684\u5173\u952e\u8bcd\u53c2\u6570\u3002 ## \u5173\u952e\u8bcd\u53c2\u6570 \u5173\u952e\u8bcd\u53ef\u4ee5\u5f88\u5bb9\u6613\u6620\u5c04\u4f20\u5165\u53c2\u6570\u7684\u987a\u5e8f\uff0c\u53ea\u9700\u8981\u6307\u5b9a\u8f93\u5165\u53c2\u6570\u7684\u540d\u79f0\u3002\u6bd4\u5982\u6211\u4eec\u8c03\u7528 confirm \u51fd\u6570\u3002 hello ( age = 15 , gender = 'M' , password = \"123456\" , email = \"Black@qq.com\" , name = \"Black\" ) \u8bf7\u786e\u8ba4\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f: name: Black age: 15 gender: M email: Black@qq.com password: 123456 \u6211\u4eec\u5e76\u6ca1\u6709\u6309\u7167\u53c2\u6570\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u4ecd\u7136\u5f97\u5230\u4e86\u6b63\u786e\u7684\u8f93\u51fa\u987a\u5e8f\u3002\u6211\u4eec\u5728\u8f93\u5165\u7684\u65f6\u5019\u6307\u5b9a\u4e86\u53c2\u6570\u7684\u540d\u79f0\u3002 \u9ed8\u8ba4\u53c2\u6570 \u00b6 \u5f53\u8f93\u5165\u53c2\u6570\u8f83\u591a\uff0c\u6709\u4e9b\u53c2\u6570\u53ef\u4ee5\u4e0d\u6307\u5b9a\u8f93\u5165\u503c\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u503c\uff0c\u8fd9\u5c31\u662f\u9ed8\u8ba4\u53c2\u6570\u3002\u9ed8\u8ba4\u7684\u53c2\u6570\u7684\u4f7f\u7528\u975e\u5e38\u591a\uff0c\u5c24\u5176\u5bf9\u4e8e\u590d\u6742\u7a0b\u5e8f\u7684\u8c03\u7528\uff0c\u7528\u6237\u5e76\u9700\u8981\u4e86\u89e3\u6240\u6709\u7684\u53c2\u6570\u542b\u4e49\uff0c\u5c31\u80fd\u4f7f\u7528\u4f60\u7f16\u5199\u7684\u51fd\u6570\u3002 \u6bd4\u5982\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7cfb\u7edf\u51fd\u6570\uff0c\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7684\u51fd\u6570 open \u3002\u90e8\u5206\u6e90\u7801\u5982\u4e0b\uff1a open ( file , mode = 'r' , buffering =- 1 , encoding = None , errors = None , newline = None , closefd = True , opener = None , ) Docstring : Open file and return a stream . Raise OSError upon failure . \u7b2c\u4e00\u4e2a\u53c2\u6570 file \u6587\u4ef6\u540d\u79f0\uff0c\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u79f0\u4f60\u5fc5\u987b\u8f93\u5165\uff0c\u4e4b\u540e\u7684\u53c2\u6570\u5168\u662f\u9ed8\u8ba4\u53c2\u6570\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570 mode \u6253\u5f00\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u53c2\u6570\u503c\u4e3a r \u8868\u793aread\u53ea\u8bfb\u7684\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6. encoding=None \u9ed8\u8ba4\u6253\u5f00\u7684\u7f16\u7801\u65b9\u5f0f\u4e3aNone\u3002\u6211\u4eec\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u662f\uff0c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u503c\u7684\u662f\u5fc5\u4f20\u53c2\u6570\uff0c\u6307\u5b9a\u4e86\u53c2\u6570\u7684\u503c\u5982\u679c\u4e0d\u4f20\u503c\uff0c\u5c31\u610f\u5473\u7740\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002 \u6bd4\u5982\u6211\u4eec\u5b8c\u6210\u4ece1\u52a0\u5230\u7684N\u7684\u7a0b\u5e8f\u3002 def sum2n ( n = 100 ): total = 0 i = 1 while i <= n : total += i i = i + 1 return total print ( sum2n ()) # \u4e0d\u6307\u5b9a\u53c2\u6570\uff0c\u9ed8\u8ba4n=100 print ( sum2n ( 10 )) # 5050 # 55 \u6ce8\u610f \u51fd\u6570\u5728\u5b9a\u4e49\u6216\u8005\u8c03\u7528\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u53c2\u6570\u4e00\u5b9a\u8981\u653e\u5728\u666e\u901a\u53c2\u6570\u4e4b\u540e\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u5c0f\u9ec4\u8f66\u7684\u4f7f\u7528\u5e74\u9f84\u5fc5\u987b\u662f12\u5c81\u4ee5\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u6ce8\u518c\u7684\u65f6\u5019\u9ed8\u8ba4\u5e74\u9f84\u662f12\u5c81\u3002 def login ( name , age = 12 , area = 'local' ): pass \u5982\u679c\u628a\u5fc5\u4f20\u53c2\u6570 name \u653e\u5728\u5173\u952e\u8bcd\u53c2\u6570\u4e4b\u540e\uff0c\u5c31\u4f1a\u62a5\u9519\u3002 def login ( age = 12 , name , area = 'local' ): # IDE \u63d0\u793a\u62a5\u9519 pass \u8fd9\u662f\u7531\u4e8e\u6211\u4eec\u5728\u8c03\u7528 login \u51fd\u6570\u65f6\uff0c\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u8fd9\u6837 login(\"\u738b\u5f3a\", 17) \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u4f20\u5165\u7684\u662fname\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u662fage\u7684\u503c\u3002\u5982\u679c\u5141\u8bb8\u4e86\u5fc5\u4f20\u53c2\u6570\u653e\u5728\u5173\u952e\u8bcd\u53c2\u6570\u4e4b\u540e\uff0c\u90a3\u4e48\u4f20\u53c2\u6570\u65f6\u5c31\u4f1a\u6709\u6b67\u4e49\u3002 \u603b\u7ed3 \u00b6 \u672c\u8282\u5185\u5bb9\u8fdb\u4e00\u6b65\u8bb2\u8ff0\u4e86\u51fd\u6570\u7684\u4f20\u53c2\u95ee\u9898\uff0c\u5bf9\u4e8e\u8f93\u5165\u53c2\u6570\u8f83\u591a\u7684\u60c5\u51b5\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u8bcd\u4f20\u53c2\uff0c\u6307\u5b9a\u53c2\u6570\u540d\u79f0\u7684\u65b9\u5f0f\u4f20\u503c\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\uff0c\u4e0d\u4f20\u503c\u610f\u5473\u7740\u4f7f\u7528\u51fd\u6570\u7684\u9ed8\u8ba4\u503c\u3002","title":"\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570"},{"location":"python/func-args/#_1","text":"\u4e0a\u4e00\u8282\u5df2\u7ecf\u8bb2\u4e86\u4e00\u90e8\u5206\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\uff0c\u51fd\u6570\u53ef\u63a5\u53d7\u65e0\u53c2\u6570\uff0c\u548c\u591a\u4e2a\u53c2\u6570\u7684\u60c5\u51b5\u3002\u4ed4\u7ec6\u60f3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u8f83\u591a\uff0c4-5\u4e2a\u53c2\u6570\u3002\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4f20\u5165\u53c2\u6570\u7684\u987a\u5e8f\u5f88\u5bb9\u6613\u51fa\u9519\u3002\u6bd4\u5982\uff1a def confirm ( name , age , gender , email , password ): print ( \"\u8bf7\u786e\u8ba4\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f:\" ) print ( \"name:\" , name ) print ( \"age:\" , age ) print ( \"gender:\" , gender ) print ( \"email:\" , email ) print ( \"password:\" , password ) \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5fc5\u987b\u5f88\u5c0f\u5fc3\u7684\u6309\u7167\u987a\u5e8f\u8f93\u5165\u3002\u6709\u6ca1\u6709\u529e\u6cd5\u8ba9\u53c2\u6570\u667a\u80fd\u4e00\u70b9\uff0c\u5373\u4f7f\u4e0d\u6309\u987a\u5e8f\u4e5f\u80fd\u81ea\u52a8\u5bf9\u5e94\u5462\uff1f\u8fd9\u5c31\u662f\u6211\u4eec\u8981\u5c06\u7684\u5173\u952e\u8bcd\u53c2\u6570\u3002 ## \u5173\u952e\u8bcd\u53c2\u6570 \u5173\u952e\u8bcd\u53ef\u4ee5\u5f88\u5bb9\u6613\u6620\u5c04\u4f20\u5165\u53c2\u6570\u7684\u987a\u5e8f\uff0c\u53ea\u9700\u8981\u6307\u5b9a\u8f93\u5165\u53c2\u6570\u7684\u540d\u79f0\u3002\u6bd4\u5982\u6211\u4eec\u8c03\u7528 confirm \u51fd\u6570\u3002 hello ( age = 15 , gender = 'M' , password = \"123456\" , email = \"Black@qq.com\" , name = \"Black\" ) \u8bf7\u786e\u8ba4\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f: name: Black age: 15 gender: M email: Black@qq.com password: 123456 \u6211\u4eec\u5e76\u6ca1\u6709\u6309\u7167\u53c2\u6570\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u4ecd\u7136\u5f97\u5230\u4e86\u6b63\u786e\u7684\u8f93\u51fa\u987a\u5e8f\u3002\u6211\u4eec\u5728\u8f93\u5165\u7684\u65f6\u5019\u6307\u5b9a\u4e86\u53c2\u6570\u7684\u540d\u79f0\u3002","title":"\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570"},{"location":"python/func-args/#_2","text":"\u5f53\u8f93\u5165\u53c2\u6570\u8f83\u591a\uff0c\u6709\u4e9b\u53c2\u6570\u53ef\u4ee5\u4e0d\u6307\u5b9a\u8f93\u5165\u503c\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u503c\uff0c\u8fd9\u5c31\u662f\u9ed8\u8ba4\u53c2\u6570\u3002\u9ed8\u8ba4\u7684\u53c2\u6570\u7684\u4f7f\u7528\u975e\u5e38\u591a\uff0c\u5c24\u5176\u5bf9\u4e8e\u590d\u6742\u7a0b\u5e8f\u7684\u8c03\u7528\uff0c\u7528\u6237\u5e76\u9700\u8981\u4e86\u89e3\u6240\u6709\u7684\u53c2\u6570\u542b\u4e49\uff0c\u5c31\u80fd\u4f7f\u7528\u4f60\u7f16\u5199\u7684\u51fd\u6570\u3002 \u6bd4\u5982\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7cfb\u7edf\u51fd\u6570\uff0c\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7684\u51fd\u6570 open \u3002\u90e8\u5206\u6e90\u7801\u5982\u4e0b\uff1a open ( file , mode = 'r' , buffering =- 1 , encoding = None , errors = None , newline = None , closefd = True , opener = None , ) Docstring : Open file and return a stream . Raise OSError upon failure . \u7b2c\u4e00\u4e2a\u53c2\u6570 file \u6587\u4ef6\u540d\u79f0\uff0c\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u79f0\u4f60\u5fc5\u987b\u8f93\u5165\uff0c\u4e4b\u540e\u7684\u53c2\u6570\u5168\u662f\u9ed8\u8ba4\u53c2\u6570\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570 mode \u6253\u5f00\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u53c2\u6570\u503c\u4e3a r \u8868\u793aread\u53ea\u8bfb\u7684\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6. encoding=None \u9ed8\u8ba4\u6253\u5f00\u7684\u7f16\u7801\u65b9\u5f0f\u4e3aNone\u3002\u6211\u4eec\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u662f\uff0c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u503c\u7684\u662f\u5fc5\u4f20\u53c2\u6570\uff0c\u6307\u5b9a\u4e86\u53c2\u6570\u7684\u503c\u5982\u679c\u4e0d\u4f20\u503c\uff0c\u5c31\u610f\u5473\u7740\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002 \u6bd4\u5982\u6211\u4eec\u5b8c\u6210\u4ece1\u52a0\u5230\u7684N\u7684\u7a0b\u5e8f\u3002 def sum2n ( n = 100 ): total = 0 i = 1 while i <= n : total += i i = i + 1 return total print ( sum2n ()) # \u4e0d\u6307\u5b9a\u53c2\u6570\uff0c\u9ed8\u8ba4n=100 print ( sum2n ( 10 )) # 5050 # 55 \u6ce8\u610f \u51fd\u6570\u5728\u5b9a\u4e49\u6216\u8005\u8c03\u7528\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u53c2\u6570\u4e00\u5b9a\u8981\u653e\u5728\u666e\u901a\u53c2\u6570\u4e4b\u540e\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u5c0f\u9ec4\u8f66\u7684\u4f7f\u7528\u5e74\u9f84\u5fc5\u987b\u662f12\u5c81\u4ee5\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u6ce8\u518c\u7684\u65f6\u5019\u9ed8\u8ba4\u5e74\u9f84\u662f12\u5c81\u3002 def login ( name , age = 12 , area = 'local' ): pass \u5982\u679c\u628a\u5fc5\u4f20\u53c2\u6570 name \u653e\u5728\u5173\u952e\u8bcd\u53c2\u6570\u4e4b\u540e\uff0c\u5c31\u4f1a\u62a5\u9519\u3002 def login ( age = 12 , name , area = 'local' ): # IDE \u63d0\u793a\u62a5\u9519 pass \u8fd9\u662f\u7531\u4e8e\u6211\u4eec\u5728\u8c03\u7528 login \u51fd\u6570\u65f6\uff0c\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u8fd9\u6837 login(\"\u738b\u5f3a\", 17) \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u4f20\u5165\u7684\u662fname\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u662fage\u7684\u503c\u3002\u5982\u679c\u5141\u8bb8\u4e86\u5fc5\u4f20\u53c2\u6570\u653e\u5728\u5173\u952e\u8bcd\u53c2\u6570\u4e4b\u540e\uff0c\u90a3\u4e48\u4f20\u53c2\u6570\u65f6\u5c31\u4f1a\u6709\u6b67\u4e49\u3002","title":"\u9ed8\u8ba4\u53c2\u6570"},{"location":"python/func-args/#_3","text":"\u672c\u8282\u5185\u5bb9\u8fdb\u4e00\u6b65\u8bb2\u8ff0\u4e86\u51fd\u6570\u7684\u4f20\u53c2\u95ee\u9898\uff0c\u5bf9\u4e8e\u8f93\u5165\u53c2\u6570\u8f83\u591a\u7684\u60c5\u51b5\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u8bcd\u4f20\u53c2\uff0c\u6307\u5b9a\u53c2\u6570\u540d\u79f0\u7684\u65b9\u5f0f\u4f20\u503c\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\uff0c\u4e0d\u4f20\u503c\u610f\u5473\u7740\u4f7f\u7528\u51fd\u6570\u7684\u9ed8\u8ba4\u503c\u3002","title":"\u603b\u7ed3"},{"location":"python/func-return/","text":"\u51fd\u6570\u8fd4\u56de\u503c \u00b6 \u9ed8\u8ba4\u8fd4\u56de\u503c \u00b6 \u5728\u51fd\u6570\u7684\u521d\u6b65\u90a3\u8282\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5728Python\u4e2d\u51fd\u6570\u4e00\u5b9a\u4f1a\u6709\u8fd4\u56de\u503c\uff0c\u5373\u4f7f\u7a0b\u5e8f\u4e2d\u6ca1\u6709\u6307\u5b9a\u8fd4\u56de\u503c\uff0c\u9ed8\u8ba4\u4e5f\u4f1a\u8fd4\u56de None .\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a def say_hello (): print ( \"hello Python\" ) res = say_hello () print ( res ) # hello Python # None \u591a\u4e2a\u8fd4\u56de\u503c \u00b6 \u524d\u9762\u4f7f\u7528\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u90fd\u53ea\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u5176\u5b9e\u5728Python\u4e2d\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u7ed3\u679c\uff0c\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u90fd\u662f\u53ef\u4ee5\u7684\u3002\u8a00\u5916\u4e4b\u610f\u662f\u8fd4\u56de\u503c\u4e5f\u5305\u62ec\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u7c7b\u6216\u8005\u4efb\u610f\u7684\u5bf9\u8c61\u3002\u8fd9\u91cc\u6211\u4eec\u4e0d\u5c55\u5f00\u8bb2\u89e3\uff0c\u4e0d\u662f\u57fa\u7840\u5185\u5bb9\u3002\u5148\u6765\u770b\u770b\u8fd4\u56de\u591a\u4e2a\u503c\u3002 \u6211\u4eec\u4f9d\u7136\u7528\u7b80\u5355\u7684\u4f8b\u5b50\u8bf4\u660e\uff0c\u8f93\u5165\u5706\u7684\u534a\u65a4\uff0c\u8fd4\u56de\u5706\u7684\u5468\u957f\u548c\u9762\u79ef import math def circle ( r ): \"\"\"\u8ba1\u7b97\u5706\u7684\u9762\u79ef\u548c\u5468\u957f\"\"\" if r <= 0 : print ( \"\u8f93\u5165\u7684\u534a\u5f84r\u503c\u5fc5\u987b\u4e3a\u6b63\u6570\" ) s = math . pi * r ** 2 c = 2 * math . pi * r return s , c \u5982\u679c\u6709\u4e09\u4e2a\u6216\u8005\u66f4\u591a\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u653e\u5728 return \u5173\u952e\u8bcd\u4e4b\u540e\uff0c\u7528 , \u5206\u9694\u3002\u591a\u4e2a\u8fd4\u56de\u503c\u5982\u4f55\u4f7f\u7528\u5462\uff1f\u63a5\u6536\u8fd4\u56de\u7684\u7ed3\u679c\u4ecd\u7136\u7528\u9017\u53f7\u5206\u9694\uff0c\u5982\u679c\u90e8\u5206\u8fd4\u56de\u7ed3\u679c\u4e0d\u9700\u8981\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5212\u7ebf _ \u4ee3\u66ff\u3002 aera , l = circle ( 5 ) # \u63a5\u6536\u4e24\u4e2a\u53c2\u6570 aera , _ = circle ( 5 ) # \u53ea\u63a5\u53d7\u7b2c\u4e00\u4e2a\u7ed3\u679c\uff0c\u7b2c\u4e8c\u4e2a\u7528_\u5360\u4f4d a , l , t = circle ( 10 ) # IDE\u4f1a\u63d0\u793a\u62a5\u9519\uff0c\u8fd0\u884c\u4ee5\u540e\u62a5\u9519\u5982\u4e0b Traceback ( most recent call last ): File \"/Users/chan/project/pyhome/task3.py\" , line 13 , in < module > a , l , t = circle ( 10 ) ValueError : not enough values to unpack ( expected 3 , got 2 ) \u63d0\u793a \u5982\u679c\u4f7f\u7528\u4e00\u4e2a\u53c2\u6570\u63a5\u6536\u4e0a\u9762\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c\u4f1a\u600e\u4e48\u6837\u5462\uff1f\u8bf7\u8bfb\u8005\u81ea\u884c\u5c1d\u8bd5\u3002 \u603b\u7ed3 \u00b6 \u672c\u8282\u5185\u5bb9\u8fdb\u4e00\u6b65\u8bb2\u8ff0\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u5982\u679c\u4e0d\u7ed9\u51fa\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u51fd\u6570\u7684\u9ed8\u8ba4\u8fd4\u56de\u503c\u4e3a None \u7c7b\u578b\uff1b\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u503c\uff0c\u503c\u7684\u7c7b\u578b\u53ef\u4ee5\u4e3a\u4efb\u610f\u7c7b\u578b\u3002","title":"\u51fd\u6570\u8fd4\u56de\u503c"},{"location":"python/func-return/#_1","text":"","title":"\u51fd\u6570\u8fd4\u56de\u503c"},{"location":"python/func-return/#_2","text":"\u5728\u51fd\u6570\u7684\u521d\u6b65\u90a3\u8282\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5728Python\u4e2d\u51fd\u6570\u4e00\u5b9a\u4f1a\u6709\u8fd4\u56de\u503c\uff0c\u5373\u4f7f\u7a0b\u5e8f\u4e2d\u6ca1\u6709\u6307\u5b9a\u8fd4\u56de\u503c\uff0c\u9ed8\u8ba4\u4e5f\u4f1a\u8fd4\u56de None .\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a def say_hello (): print ( \"hello Python\" ) res = say_hello () print ( res ) # hello Python # None","title":"\u9ed8\u8ba4\u8fd4\u56de\u503c"},{"location":"python/func-return/#_3","text":"\u524d\u9762\u4f7f\u7528\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u90fd\u53ea\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u5176\u5b9e\u5728Python\u4e2d\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u7ed3\u679c\uff0c\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u90fd\u662f\u53ef\u4ee5\u7684\u3002\u8a00\u5916\u4e4b\u610f\u662f\u8fd4\u56de\u503c\u4e5f\u5305\u62ec\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u7c7b\u6216\u8005\u4efb\u610f\u7684\u5bf9\u8c61\u3002\u8fd9\u91cc\u6211\u4eec\u4e0d\u5c55\u5f00\u8bb2\u89e3\uff0c\u4e0d\u662f\u57fa\u7840\u5185\u5bb9\u3002\u5148\u6765\u770b\u770b\u8fd4\u56de\u591a\u4e2a\u503c\u3002 \u6211\u4eec\u4f9d\u7136\u7528\u7b80\u5355\u7684\u4f8b\u5b50\u8bf4\u660e\uff0c\u8f93\u5165\u5706\u7684\u534a\u65a4\uff0c\u8fd4\u56de\u5706\u7684\u5468\u957f\u548c\u9762\u79ef import math def circle ( r ): \"\"\"\u8ba1\u7b97\u5706\u7684\u9762\u79ef\u548c\u5468\u957f\"\"\" if r <= 0 : print ( \"\u8f93\u5165\u7684\u534a\u5f84r\u503c\u5fc5\u987b\u4e3a\u6b63\u6570\" ) s = math . pi * r ** 2 c = 2 * math . pi * r return s , c \u5982\u679c\u6709\u4e09\u4e2a\u6216\u8005\u66f4\u591a\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u653e\u5728 return \u5173\u952e\u8bcd\u4e4b\u540e\uff0c\u7528 , \u5206\u9694\u3002\u591a\u4e2a\u8fd4\u56de\u503c\u5982\u4f55\u4f7f\u7528\u5462\uff1f\u63a5\u6536\u8fd4\u56de\u7684\u7ed3\u679c\u4ecd\u7136\u7528\u9017\u53f7\u5206\u9694\uff0c\u5982\u679c\u90e8\u5206\u8fd4\u56de\u7ed3\u679c\u4e0d\u9700\u8981\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5212\u7ebf _ \u4ee3\u66ff\u3002 aera , l = circle ( 5 ) # \u63a5\u6536\u4e24\u4e2a\u53c2\u6570 aera , _ = circle ( 5 ) # \u53ea\u63a5\u53d7\u7b2c\u4e00\u4e2a\u7ed3\u679c\uff0c\u7b2c\u4e8c\u4e2a\u7528_\u5360\u4f4d a , l , t = circle ( 10 ) # IDE\u4f1a\u63d0\u793a\u62a5\u9519\uff0c\u8fd0\u884c\u4ee5\u540e\u62a5\u9519\u5982\u4e0b Traceback ( most recent call last ): File \"/Users/chan/project/pyhome/task3.py\" , line 13 , in < module > a , l , t = circle ( 10 ) ValueError : not enough values to unpack ( expected 3 , got 2 ) \u63d0\u793a \u5982\u679c\u4f7f\u7528\u4e00\u4e2a\u53c2\u6570\u63a5\u6536\u4e0a\u9762\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c\u4f1a\u600e\u4e48\u6837\u5462\uff1f\u8bf7\u8bfb\u8005\u81ea\u884c\u5c1d\u8bd5\u3002","title":"\u591a\u4e2a\u8fd4\u56de\u503c"},{"location":"python/func-return/#_4","text":"\u672c\u8282\u5185\u5bb9\u8fdb\u4e00\u6b65\u8bb2\u8ff0\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u5982\u679c\u4e0d\u7ed9\u51fa\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u51fd\u6570\u7684\u9ed8\u8ba4\u8fd4\u56de\u503c\u4e3a None \u7c7b\u578b\uff1b\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u503c\uff0c\u503c\u7684\u7c7b\u578b\u53ef\u4ee5\u4e3a\u4efb\u610f\u7c7b\u578b\u3002","title":"\u603b\u7ed3"},{"location":"python/function/","text":"\u51fd\u6570\u521d\u6b65 \u00b6 \u4ecb\u7ecd \u00b6 \u6211\u4eec\u5728\u4e2d\u5b66\u5b66\u8fc7\u51fd\u6570 y = f(x) y = f(x) \u3002\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570\u6ca1\u6709\u975e\u5e38\u4e25\u683c\u7684\u5b9a\u4e49\uff0c\u4f46\u662f\u4fdd\u7559\u4e86\u51fd\u6570\u57fa\u672c\u5f62\u5f0f\u3002 function \u7684\u672c\u610f\u5c31\u662f\u529f\u80fd\u7684\u610f\u601d\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\u5b9e\u73b0\u67d0\u4e2a\u529f\u80fd\u4ee3\u7801\u5757\u3002\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u4ee3\u7801\u5757\u8fdb\u884c\u4e86\u5c01\u88c5\u5904\u7406\u3002 y = f(x) y = f(x) \u5176\u4e2d x x \u79f0\u4e3a\u8f93\u5165\u53c2\u6570\uff0c y y \u79f0\u4e3a\u8fd4\u56de\u53c2\u6570\u3002\u51fd\u6570\u7684\u5b9a\u4e49\u4f7f\u7528\u5173\u952e\u8bcd def \u3002\u4e0b\u9762\u662f\u8ba1\u7b97\u5706\u7684\u9762\u79ef\u7684\u51fd\u6570\u3002 def compute_circle_area ( r ): s = 3.14 * r ** 2 return s \u5176\u4e2dr\u5c31\u662f\u5706\u7684\u534a\u5f84\uff0c\u79f0\u4e3a\u8f93\u5165\u53c2\u6570\uff0c s \u662f\u5706\u7684\u9762\u79ef\uff0c\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd f \u5c31\u662f\u8ba1\u7b97\u5706\u7684\u9762\u79ef.\u662f\u4e0d\u662f\u53d1\u73b0\u5f88\u7b80\u5355\u3002 \u4f5c\u4e1a \u6839\u636e\u4e09\u89d2\u5f62\u7684\u4e09\u8fb9\u957f,a,b,c\u8ba1\u7b97\u4e09\u89d2\u5f62\u7684\u9762\u79ef\uff0c\u4f7f\u7528\u6d77\u4f26\u516c\u5f0f\u3002\u8bf7\u5199\u51fa\u51fd\u6570\u7684\u8ba1\u7b97\u7a0b\u5e8f\u3002 \u8f93\u5165\u53c2\u6570 \u00b6 \u65e0\u8f93\u5165\u53c2\u6570 \u00b6 \u5728\u6570\u5b66\u4e2d\u51fd\u6570\u9700\u8981\u53d8\u91cf\uff0c\u5c31\u662f\u8f93\u5165\u53c2\u6570\u3002\u90a3\u4e48\u5728\u7a0b\u5e8f\u4e2d\u4e00\u5b9a\u9700\u8981\u8f93\u5165\u53c2\u6570\u5417\uff1f\u7b54\u6848\u662f\u975e\u5fc5\u987b\u7684\u3002\u51fd\u6570\u53ef\u4ee5\u6ca1\u6709\u8f93\u5165\u53c2\u6570\uff0c\u4ec5\u4ec5\u5b8c\u6210\u67d0\u4e00\u529f\u80fd\u3002\u6bd4\u5982\u83b7\u53d61-10\u4e4b\u95f4\u968f\u673a\u6570\u3002 \u8865\u5145 \u968f\u673a\u6570\u9700\u8981\u7528\u5230random\u6a21\u5757\uff0c\u6a21\u5757\u7684\u5bfc\u5165\u4f7f\u7528import import random def get_random_number (): \"\"\"\u83b7\u53d61-10\u4e4b\u95f4\u7684\u968f\u673a\u6570\"\"\" num = random . randint ( 1 , 10 ) return num # 9 \u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u6bcf\u6b21\u8fd0\u884c\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f1a\u968f\u673a\u5730\u8fd4\u56de1-10\u4e4b\u95f4\u7684\u6574\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u51fd\u6570\u6539\u9020\u6210\u7ed9\u4e00\u4e2a\u8f93\u5165\u53c2\u6570(\u5927\u4e8e1)\uff0c\u8981\u6c42\u8fd4\u56de\u4e0d\u8d85\u8fc7\u8f93\u5165\u53c2\u6570\u7684\u968f\u673a\u6574\u6570\u3002 import random def get_random_number ( up_num ): \"\"\"\u83b7\u53d61-up_num\u4e4b\u95f4\u7684\u968f\u673a\u6570\"\"\" num = random . randint ( 1 , up_num ) return num \u601d\u8003 \u5982\u679cup_num\u5c0f\u4e8e1\u4f1a\u600e\u4e48\u6837\uff0c\u8bfb\u8005\u81ea\u884c\u5c1d\u8bd5 \u591a\u4e2a\u8f93\u5165\u53c2\u6570 \u00b6 \u8f93\u5165\u53c2\u6570\u53ef\u4ee5\u6ca1\u6709\uff0c\u53ef\u4ee5\u4f20\u4e00\u4e2a\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165\u53c2\u6570\u600e\u4e48\u529e\u5462\uff1f\u6bd4\u5982\u8bf4\u6211\u4eec\u73b0\u5728\u78b0\u5230\u8fd9\u6837\u7684\u95ee\u9898\uff1a \u8f93\u5165\u4e09\u6761\u7ebf\u6bb5\u7684\u957f\u5ea6\uff0c\u5224\u65ad\u8fd9\u4e09\u6761\u7ebf\u6bb5\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62\u3002 \u8f93\u5165\u7684\u53c2\u6570\u6709\u4e09\u6761\u8fb9\uff0c\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e86\u3002\u6bd4\u5982\u6211\u4eec\u8ba9\u51fd\u6570\u8f93\u51fa0\u548c1\uff0c0\u8868\u793a\u4e0d\u80fd\uff0c1\u8868\u793a\u53ef\u4ee5\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8f93\u51fa\u5e03\u5c14\u503c\uff0cTrue\u8868\u793a\u53ef\u4ee5\uff0cFalse\u8868\u793a\u4e0d\u53ef\u4ee5\u3002\u751a\u81f3\u53ef\u4ee5\u8f93\u51fa\u5b57\u7b26\u4e32\"\u53ef\u4ee5\"\u548c\"\u4e0d\u53ef\u4ee5\"\u3002 \u8f93\u51fa\u7ed3\u679c\u5b8c\u5168\u6709\u4f60\u6765\u63a7\u5236\uff0c\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u5e03\u5c14\u503c\u7684\u8f93\u51fa\u3002 \u5148\u5199\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\uff0c\u5b9a\u4e49\u8f93\u51fa\u7ed3\u679c res \u9ed8\u8ba4\u4e3aFalse\u3002 def form_triangle ( a , b , c ): res = False \u5224\u65ad\u4e09\u8fb9\u80fd\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u3002\u7531\u4e8e\u4e24\u8fb9\u4e4b\u5dee\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u4e3a\u4e86\u7b80\u5355\uff0c\u5f15\u5165\u7edd\u5bf9\u503c\u51fd\u6570\u3002 import math def form_triangle ( a , b , c ): res = False if ( math . fabs ( a - b ) < c ) and ( a + b > c ): res = True return res \u5982\u679c\u4e0d\u6ee1\u8db3if\u6761\u4ef6\uff0c\u90a3\u5c31\u610f\u5473\u7740\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u8fd4\u56de\u9ed8\u8ba4\u7684res\u7ed3\u679c\u3002\u5982\u679c\u6ee1\u8db3if\u6761\u4ef6\uff0c\u5219res\u88ab\u8d4b\u503c\u4e3aTrue\uff0c\u6700\u7ec8\u8fd4\u56deres\u3002 \u603b\u7ed3 \u00b6 \u672c\u8282\u5185\u5bb9\u8bb2\u89e3\u4e86Python\u4e2d\u51fd\u6570\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u5305\u62ec\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u91cd\u70b9\u8bb2\u89e3\u4e86\u51fd\u6570\u8f93\u5165\u53c2\u6570\uff0c\u53ef\u4ee5\u65e0\u8f93\u51fa\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\u53c2\u6570\u3002\u5b66\u4e60\u8fc7\u51fd\u6570\u4ee5\u540e\uff0c\u8bfb\u8005\u4ee5\u540e\u5199\u7a0b\u5e8f\u5c3d\u91cf\u4f7f\u7528\u51fd\u6570\u6765\u5b8c\u6210\u3002\u540e\u7eed\u7ee7\u7eed\u4ecb\u7ecd\u51fd\u6570\u7684\u4f7f\u7528\u3002","title":"\u51fd\u6570\u521d\u6b65"},{"location":"python/function/#_1","text":"","title":"\u51fd\u6570\u521d\u6b65"},{"location":"python/function/#_2","text":"\u6211\u4eec\u5728\u4e2d\u5b66\u5b66\u8fc7\u51fd\u6570 y = f(x) y = f(x) \u3002\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570\u6ca1\u6709\u975e\u5e38\u4e25\u683c\u7684\u5b9a\u4e49\uff0c\u4f46\u662f\u4fdd\u7559\u4e86\u51fd\u6570\u57fa\u672c\u5f62\u5f0f\u3002 function \u7684\u672c\u610f\u5c31\u662f\u529f\u80fd\u7684\u610f\u601d\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\u5b9e\u73b0\u67d0\u4e2a\u529f\u80fd\u4ee3\u7801\u5757\u3002\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u4ee3\u7801\u5757\u8fdb\u884c\u4e86\u5c01\u88c5\u5904\u7406\u3002 y = f(x) y = f(x) \u5176\u4e2d x x \u79f0\u4e3a\u8f93\u5165\u53c2\u6570\uff0c y y \u79f0\u4e3a\u8fd4\u56de\u53c2\u6570\u3002\u51fd\u6570\u7684\u5b9a\u4e49\u4f7f\u7528\u5173\u952e\u8bcd def \u3002\u4e0b\u9762\u662f\u8ba1\u7b97\u5706\u7684\u9762\u79ef\u7684\u51fd\u6570\u3002 def compute_circle_area ( r ): s = 3.14 * r ** 2 return s \u5176\u4e2dr\u5c31\u662f\u5706\u7684\u534a\u5f84\uff0c\u79f0\u4e3a\u8f93\u5165\u53c2\u6570\uff0c s \u662f\u5706\u7684\u9762\u79ef\uff0c\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd f \u5c31\u662f\u8ba1\u7b97\u5706\u7684\u9762\u79ef.\u662f\u4e0d\u662f\u53d1\u73b0\u5f88\u7b80\u5355\u3002 \u4f5c\u4e1a \u6839\u636e\u4e09\u89d2\u5f62\u7684\u4e09\u8fb9\u957f,a,b,c\u8ba1\u7b97\u4e09\u89d2\u5f62\u7684\u9762\u79ef\uff0c\u4f7f\u7528\u6d77\u4f26\u516c\u5f0f\u3002\u8bf7\u5199\u51fa\u51fd\u6570\u7684\u8ba1\u7b97\u7a0b\u5e8f\u3002","title":"\u4ecb\u7ecd"},{"location":"python/function/#_3","text":"","title":"\u8f93\u5165\u53c2\u6570"},{"location":"python/function/#_4","text":"\u5728\u6570\u5b66\u4e2d\u51fd\u6570\u9700\u8981\u53d8\u91cf\uff0c\u5c31\u662f\u8f93\u5165\u53c2\u6570\u3002\u90a3\u4e48\u5728\u7a0b\u5e8f\u4e2d\u4e00\u5b9a\u9700\u8981\u8f93\u5165\u53c2\u6570\u5417\uff1f\u7b54\u6848\u662f\u975e\u5fc5\u987b\u7684\u3002\u51fd\u6570\u53ef\u4ee5\u6ca1\u6709\u8f93\u5165\u53c2\u6570\uff0c\u4ec5\u4ec5\u5b8c\u6210\u67d0\u4e00\u529f\u80fd\u3002\u6bd4\u5982\u83b7\u53d61-10\u4e4b\u95f4\u968f\u673a\u6570\u3002 \u8865\u5145 \u968f\u673a\u6570\u9700\u8981\u7528\u5230random\u6a21\u5757\uff0c\u6a21\u5757\u7684\u5bfc\u5165\u4f7f\u7528import import random def get_random_number (): \"\"\"\u83b7\u53d61-10\u4e4b\u95f4\u7684\u968f\u673a\u6570\"\"\" num = random . randint ( 1 , 10 ) return num # 9 \u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u6bcf\u6b21\u8fd0\u884c\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f1a\u968f\u673a\u5730\u8fd4\u56de1-10\u4e4b\u95f4\u7684\u6574\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u51fd\u6570\u6539\u9020\u6210\u7ed9\u4e00\u4e2a\u8f93\u5165\u53c2\u6570(\u5927\u4e8e1)\uff0c\u8981\u6c42\u8fd4\u56de\u4e0d\u8d85\u8fc7\u8f93\u5165\u53c2\u6570\u7684\u968f\u673a\u6574\u6570\u3002 import random def get_random_number ( up_num ): \"\"\"\u83b7\u53d61-up_num\u4e4b\u95f4\u7684\u968f\u673a\u6570\"\"\" num = random . randint ( 1 , up_num ) return num \u601d\u8003 \u5982\u679cup_num\u5c0f\u4e8e1\u4f1a\u600e\u4e48\u6837\uff0c\u8bfb\u8005\u81ea\u884c\u5c1d\u8bd5","title":"\u65e0\u8f93\u5165\u53c2\u6570"},{"location":"python/function/#_5","text":"\u8f93\u5165\u53c2\u6570\u53ef\u4ee5\u6ca1\u6709\uff0c\u53ef\u4ee5\u4f20\u4e00\u4e2a\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165\u53c2\u6570\u600e\u4e48\u529e\u5462\uff1f\u6bd4\u5982\u8bf4\u6211\u4eec\u73b0\u5728\u78b0\u5230\u8fd9\u6837\u7684\u95ee\u9898\uff1a \u8f93\u5165\u4e09\u6761\u7ebf\u6bb5\u7684\u957f\u5ea6\uff0c\u5224\u65ad\u8fd9\u4e09\u6761\u7ebf\u6bb5\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62\u3002 \u8f93\u5165\u7684\u53c2\u6570\u6709\u4e09\u6761\u8fb9\uff0c\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e86\u3002\u6bd4\u5982\u6211\u4eec\u8ba9\u51fd\u6570\u8f93\u51fa0\u548c1\uff0c0\u8868\u793a\u4e0d\u80fd\uff0c1\u8868\u793a\u53ef\u4ee5\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8f93\u51fa\u5e03\u5c14\u503c\uff0cTrue\u8868\u793a\u53ef\u4ee5\uff0cFalse\u8868\u793a\u4e0d\u53ef\u4ee5\u3002\u751a\u81f3\u53ef\u4ee5\u8f93\u51fa\u5b57\u7b26\u4e32\"\u53ef\u4ee5\"\u548c\"\u4e0d\u53ef\u4ee5\"\u3002 \u8f93\u51fa\u7ed3\u679c\u5b8c\u5168\u6709\u4f60\u6765\u63a7\u5236\uff0c\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u5e03\u5c14\u503c\u7684\u8f93\u51fa\u3002 \u5148\u5199\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\uff0c\u5b9a\u4e49\u8f93\u51fa\u7ed3\u679c res \u9ed8\u8ba4\u4e3aFalse\u3002 def form_triangle ( a , b , c ): res = False \u5224\u65ad\u4e09\u8fb9\u80fd\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u3002\u7531\u4e8e\u4e24\u8fb9\u4e4b\u5dee\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u4e3a\u4e86\u7b80\u5355\uff0c\u5f15\u5165\u7edd\u5bf9\u503c\u51fd\u6570\u3002 import math def form_triangle ( a , b , c ): res = False if ( math . fabs ( a - b ) < c ) and ( a + b > c ): res = True return res \u5982\u679c\u4e0d\u6ee1\u8db3if\u6761\u4ef6\uff0c\u90a3\u5c31\u610f\u5473\u7740\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u8fd4\u56de\u9ed8\u8ba4\u7684res\u7ed3\u679c\u3002\u5982\u679c\u6ee1\u8db3if\u6761\u4ef6\uff0c\u5219res\u88ab\u8d4b\u503c\u4e3aTrue\uff0c\u6700\u7ec8\u8fd4\u56deres\u3002","title":"\u591a\u4e2a\u8f93\u5165\u53c2\u6570"},{"location":"python/function/#_6","text":"\u672c\u8282\u5185\u5bb9\u8bb2\u89e3\u4e86Python\u4e2d\u51fd\u6570\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u5305\u62ec\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u91cd\u70b9\u8bb2\u89e3\u4e86\u51fd\u6570\u8f93\u5165\u53c2\u6570\uff0c\u53ef\u4ee5\u65e0\u8f93\u51fa\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\u53c2\u6570\u3002\u5b66\u4e60\u8fc7\u51fd\u6570\u4ee5\u540e\uff0c\u8bfb\u8005\u4ee5\u540e\u5199\u7a0b\u5e8f\u5c3d\u91cf\u4f7f\u7528\u51fd\u6570\u6765\u5b8c\u6210\u3002\u540e\u7eed\u7ee7\u7eed\u4ecb\u7ecd\u51fd\u6570\u7684\u4f7f\u7528\u3002","title":"\u603b\u7ed3"},{"location":"python/helloworld/","text":"\u7b2c\u4e00\u4e2a\u7a0b\u5e8f \u00b6 \u672c\u8282\u5185\u5bb9\u4e3b\u8981\u4ecb\u7ecdpycharm\u521b\u5efa\u7a0b\u5e8f\uff0c\u5e76\u4e14\u6b63\u786e\u8fd0\u884c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u3002 \u4f60\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1a print ( \"hello world\" ) print ( \"\u4f60\u597d Python, \u6211\u8981\u597d\u597d\u5b66\u4e60\" ) \u8f93\u51fa\u7ed3\u679c\uff1a Warning \u8981\u8f93\u51fa\u7684\u5185\u5bb9\u4e00\u5b9a\u8981\u653e\u5728\u82f1\u6587\u7684\u5f15\u53f7\u6761\u4ef6\u4e0b\u3002\u82f1\u6587\u5355\u5f15\u53f7\uff0c\u53cc\u5f15\u53f7\u3001\u4e09\u5f15\u53f7\u90fd\u662f\u53ef\u4ee5\u7684\u3002 print ( '\u4f60\u597d Python, \u6211\u8981\u597d\u597d\u5b66\u4e60' ) print ( \"\u4f60\u597d Python, \u6211\u8981\u597d\u597d\u5b66\u4e60\" ) print ( \"\"\"\u4f60\u597d Python, \u6211\u8981\u597d\u597d\u5b66\u4e60\"\"\" )","title":"\u7b2c\u4e00\u4e2a\u7a0b\u5e8f"},{"location":"python/helloworld/#_1","text":"\u672c\u8282\u5185\u5bb9\u4e3b\u8981\u4ecb\u7ecdpycharm\u521b\u5efa\u7a0b\u5e8f\uff0c\u5e76\u4e14\u6b63\u786e\u8fd0\u884c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u3002 \u4f60\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1a print ( \"hello world\" ) print ( \"\u4f60\u597d Python, \u6211\u8981\u597d\u597d\u5b66\u4e60\" ) \u8f93\u51fa\u7ed3\u679c\uff1a Warning \u8981\u8f93\u51fa\u7684\u5185\u5bb9\u4e00\u5b9a\u8981\u653e\u5728\u82f1\u6587\u7684\u5f15\u53f7\u6761\u4ef6\u4e0b\u3002\u82f1\u6587\u5355\u5f15\u53f7\uff0c\u53cc\u5f15\u53f7\u3001\u4e09\u5f15\u53f7\u90fd\u662f\u53ef\u4ee5\u7684\u3002 print ( '\u4f60\u597d Python, \u6211\u8981\u597d\u597d\u5b66\u4e60' ) print ( \"\u4f60\u597d Python, \u6211\u8981\u597d\u597d\u5b66\u4e60\" ) print ( \"\"\"\u4f60\u597d Python, \u6211\u8981\u597d\u597d\u5b66\u4e60\"\"\" )","title":"\u7b2c\u4e00\u4e2a\u7a0b\u5e8f"},{"location":"python/if/","text":"\u5224\u65ad \u00b6 \u903b\u8f91\u5224\u65ad\u5728\u6211\u4eec\u7684\u751f\u6d3b\u4e2d\u5f88\u5e38\u89c1\u3002\u5973\u5b69\u5bf9\u7a0b\u5e8f\u5458\u7537\u670b\u53cb\u8bf4\u201c\u4eb2\u7231\u7684\uff0c\u4e0b\u73ed\u8def\u4e0a\u4e70\u4e00\u65a4\u5305\u5b50\u56de\u6765\uff0c\u5982\u679c\u770b\u89c1\u5356\u897f\u74dc\u7684\uff0c\u5c31\u4e70\u4e00\u4e2a\u3002\u4e8e\u662f\u7537\u670b\u53cb\u4e0b\u73ed\u540e\u5e26\u4e86\u4e00\u4e2a\u5305\u5b50\u56de\u5bb6\u201d if\u5355\u72ec\u4f7f\u7528 \u00b6 \u4ed4\u7ec6\u5206\u6790\u8fd9\u4e2a\u903b\u8f91\u5e76\u6ca1\u6709\u95ee\u9898\uff0c\u89e3\u51b3\u8fd9\u4e2a \u5982\u679c \u5c31\u9700\u8981\u7a0b\u5e8f\u53bb\u5224\u65ad\u3002\u6211\u4eec\u5148\u6765\u770b\u7a0b\u5e8f\u7ed3\u6784\u3002 buy_things = \"\u4e70\u4e00\u65a4\u5305\u5b50\" if \"\u770b\u89c1\u5356\u897f\u74dc\u7684\": buy_things = \"\u4e70\u4e00\u4e2a\u5305\u5b50\" \u8f93\u51fa(buy_things) if-else \u642d\u914d\u4f7f\u7528 \u00b6 Python\u5b9e\u73b0\u5224\u65ad\u7ed3\u6784\u7528\u5230\u5173\u952e\u8bcd if \uff0c\u4e5f\u53ef\u4ee5\u4e0e else \u4e00\u8d77\u4f7f\u7528\u3002\u4f7f\u7528\u7684\u903b\u8f91\u4e3a\uff1a if \u4e8b\u4ef6\u7ed3\u679c: \u6267\u884c\u8bed\u53e51 else: \u6267\u884c\u8bed\u53e52 \u5982\u679c\u4e8b\u4ef6\u7ed3\u679c\u4e3a\u771f\uff0c\u90a3\u5c31 \u6267\u884c\u8bed\u53e51 \uff0c\u5426\u5219 \u6267\u884c\u8bed\u53e52 .\u5f53\u7136\u53ef\u4ee5\u50cf\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5355\u72ec\u4f7f\u7528if\u5173\u952e\u8bcd\u3002 if-else\u591a\u7ea7\u5224\u65ad \u00b6 \u9664\u6b64\u4e4b\u5916\u8fd8\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\uff0c\u6bd4\u5982\u5b66\u6821\u6210\u7ee9\u8bc4ABCDE5\u4e2a\u7b49\u7ea7\u3002\u8d85\u8fc790\u5206\u4e3aA\uff0c80-89\u4e3aB\uff0c70-79\u4e3aC\uff0c60-69\u4e3aD\uff0c\u4f4e\u4e8e60\u5206\u7684\u4e3aE\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u9700\u8981if-elif-else \u591a\u7ea7\u5224\u65ad\u4e86\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u6211\u76f8\u4fe1\u4f60\u80fd\u5199\u51fa\u6765\uff0c\u6211\u4eec\u7ed9\u51fa\u5173\u952e\u90e8\u5206\u7a0b\u5e8f\uff0c\u5b8c\u6574\u7684\u7a0b\u5e8f\u8bf7\u8bfb\u8005\u81ea\u884c\u5c1d\u8bd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 grade = \"\" if 90 <= score <= 100 : grade = \"A\" elif 80 <= score <= 89 : grade = \"B\" elif 70 <= score <= 79 : grade = \"C\" elif 60 <= score <= 69 : grade = \"D\" else : grade = \"E\" \u603b\u7ed3 \u00b6 \u8fd9\u91cc\u6211\u4eec\u8bb2\u4e86\u4e09\u79cd\u5224\u65ad\u903b\u8f91\uff0c\u5206\u522b\u662f\u5355\u72ec\u4f7f\u7528if\uff0cif-else\u642d\u914d\u4f7f\u7528\uff0cif-elif-else\u591a\u7ea7\u5224\u65ad\u3002\u903b\u8f91\u5224\u65ad\u5728\u7a0b\u5e8f\u4e2d\u5e7f\u6cdb\u4f7f\u7528\uff0c\u8bfb\u8005\u9700\u8981\u7075\u6d3b\u7684\u638c\u63e1\u3002","title":"\u5224\u65ad"},{"location":"python/if/#_1","text":"\u903b\u8f91\u5224\u65ad\u5728\u6211\u4eec\u7684\u751f\u6d3b\u4e2d\u5f88\u5e38\u89c1\u3002\u5973\u5b69\u5bf9\u7a0b\u5e8f\u5458\u7537\u670b\u53cb\u8bf4\u201c\u4eb2\u7231\u7684\uff0c\u4e0b\u73ed\u8def\u4e0a\u4e70\u4e00\u65a4\u5305\u5b50\u56de\u6765\uff0c\u5982\u679c\u770b\u89c1\u5356\u897f\u74dc\u7684\uff0c\u5c31\u4e70\u4e00\u4e2a\u3002\u4e8e\u662f\u7537\u670b\u53cb\u4e0b\u73ed\u540e\u5e26\u4e86\u4e00\u4e2a\u5305\u5b50\u56de\u5bb6\u201d","title":"\u5224\u65ad"},{"location":"python/if/#if","text":"\u4ed4\u7ec6\u5206\u6790\u8fd9\u4e2a\u903b\u8f91\u5e76\u6ca1\u6709\u95ee\u9898\uff0c\u89e3\u51b3\u8fd9\u4e2a \u5982\u679c \u5c31\u9700\u8981\u7a0b\u5e8f\u53bb\u5224\u65ad\u3002\u6211\u4eec\u5148\u6765\u770b\u7a0b\u5e8f\u7ed3\u6784\u3002 buy_things = \"\u4e70\u4e00\u65a4\u5305\u5b50\" if \"\u770b\u89c1\u5356\u897f\u74dc\u7684\": buy_things = \"\u4e70\u4e00\u4e2a\u5305\u5b50\" \u8f93\u51fa(buy_things)","title":"if\u5355\u72ec\u4f7f\u7528"},{"location":"python/if/#if-else","text":"Python\u5b9e\u73b0\u5224\u65ad\u7ed3\u6784\u7528\u5230\u5173\u952e\u8bcd if \uff0c\u4e5f\u53ef\u4ee5\u4e0e else \u4e00\u8d77\u4f7f\u7528\u3002\u4f7f\u7528\u7684\u903b\u8f91\u4e3a\uff1a if \u4e8b\u4ef6\u7ed3\u679c: \u6267\u884c\u8bed\u53e51 else: \u6267\u884c\u8bed\u53e52 \u5982\u679c\u4e8b\u4ef6\u7ed3\u679c\u4e3a\u771f\uff0c\u90a3\u5c31 \u6267\u884c\u8bed\u53e51 \uff0c\u5426\u5219 \u6267\u884c\u8bed\u53e52 .\u5f53\u7136\u53ef\u4ee5\u50cf\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5355\u72ec\u4f7f\u7528if\u5173\u952e\u8bcd\u3002","title":"if-else\u00a0\u642d\u914d\u4f7f\u7528"},{"location":"python/if/#if-else_1","text":"\u9664\u6b64\u4e4b\u5916\u8fd8\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\uff0c\u6bd4\u5982\u5b66\u6821\u6210\u7ee9\u8bc4ABCDE5\u4e2a\u7b49\u7ea7\u3002\u8d85\u8fc790\u5206\u4e3aA\uff0c80-89\u4e3aB\uff0c70-79\u4e3aC\uff0c60-69\u4e3aD\uff0c\u4f4e\u4e8e60\u5206\u7684\u4e3aE\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u9700\u8981if-elif-else \u591a\u7ea7\u5224\u65ad\u4e86\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u6211\u76f8\u4fe1\u4f60\u80fd\u5199\u51fa\u6765\uff0c\u6211\u4eec\u7ed9\u51fa\u5173\u952e\u90e8\u5206\u7a0b\u5e8f\uff0c\u5b8c\u6574\u7684\u7a0b\u5e8f\u8bf7\u8bfb\u8005\u81ea\u884c\u5c1d\u8bd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 grade = \"\" if 90 <= score <= 100 : grade = \"A\" elif 80 <= score <= 89 : grade = \"B\" elif 70 <= score <= 79 : grade = \"C\" elif 60 <= score <= 69 : grade = \"D\" else : grade = \"E\"","title":"if-else\u591a\u7ea7\u5224\u65ad"},{"location":"python/if/#_2","text":"\u8fd9\u91cc\u6211\u4eec\u8bb2\u4e86\u4e09\u79cd\u5224\u65ad\u903b\u8f91\uff0c\u5206\u522b\u662f\u5355\u72ec\u4f7f\u7528if\uff0cif-else\u642d\u914d\u4f7f\u7528\uff0cif-elif-else\u591a\u7ea7\u5224\u65ad\u3002\u903b\u8f91\u5224\u65ad\u5728\u7a0b\u5e8f\u4e2d\u5e7f\u6cdb\u4f7f\u7528\uff0c\u8bfb\u8005\u9700\u8981\u7075\u6d3b\u7684\u638c\u63e1\u3002","title":"\u603b\u7ed3"},{"location":"python/import-package/","text":"","title":"\u5305\u7684\u5bfc\u5165"},{"location":"python/install/","text":"\u73af\u5883\u5b89\u88c5 \u00b6 \u7f16\u7a0b\u5f53\u7136\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u73af\u5883\uff0c\u4eca\u5e742020\u5e74Python2\u5df2\u7ecf\u5931\u53bb\u5b98\u65b9\u7684\u7ef4\u62a4\u4e86\uff0c\u5efa\u8bae\u76f4\u63a5\u5b66\u4e60Python3\u3002\u672c\u8282\u4ecb\u7ecd\u73af\u5883\u7684\u5b89\u88c5\uff0c\u5305\u62ecIDE\u7684\u5b89\u88c5\u3002 \u5b89\u88c5Python\u5305 \u00b6 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165python\u5b98\u7f51\uff0c\u516b\u6210\u4f1a\u8fdb\u5165\u767e\u5ea6\u7684\u5e7f\u544a\u3002 \u70b9\u51fb\u8fd9\u91cc \u8fdb\u5165Python\u5b98\u7f51\uff0c\u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u7684\u5b89\u88c5\u5305\u3002\u81f3\u4e8ePython\u7684\u7248\u672c3.7\uff0c3.8\u90fd\u53ef\u4ee5\u3002\u53ea\u8981\u662f3.6\u53ca\u4ee5\u540e\u7684\u7248\u672c\uff0c\u53d8\u5316\u6ca1\u6709\u90a3\u4e48\u5927\u90fd\u662f\u53ef\u4ee5\u7684\u3002 \u81f3\u4e8e\u5982\u4f55\u5b89\u88c5\uff0c\u76f4\u63a5\u4e0b\u4e00\u6b65\uff0c\u4e0b\u4e00\u6b65\u5c31\u53ef\u4ee5\u3002\u5982\u4f55\u786e\u5b9a\u5b89\u88c5\u662f\u5426\u6210\u529f\u5462\uff1f\u6253\u5f00\u547d\u4ee4\u884c\uff0cwindows\u7cfb\u7edf\u5c31\u662f\u90a3\u4e2a\u9ed1\u7a97\u53e3\u3002\u8f93\u5165 python \uff0c\u770b\u770b\u8fd4\u56de\u7ed3\u679c Python 3.7.7 (v3.7.7:d7c567b08f, Mar 10 2020, 02:56:16) [Clang 6.0 (clang-600.0.57)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> \u5982\u679c\u770b\u5230\u7c7b\u4f3c\u4e0a\u9762\u7684\u4fe1\u606f\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u4e86\u3002\u9000\u51fa\u547d\u4ee4\u884cControl+D\uff0c\u6216\u8005\u8f93\u5165 quit() \uff0c\u5373\u53ef\u9000\u51fa\u3002\u5728\u952e\u5165 pip \u6216\u8005 pip3 ,\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e00\u4e0b\u4fe1\u606f Usage: pip3 <command> [options] Commands: install Install packages. download Download packages. uninstall Uninstall packages. freeze Output installed packages in requirements format. list List installed packages. show Show information about installed packages. ...... \u8bf4\u660e\u4f60\u7684Python\u548cpip\u90fd\u6b63\u786e\u5b89\u88c5\u4e86\u3002\u5426\u5219\u8bf7\u81ea\u884c\u67e5\u8d44\u6599\uff0c\u6216\u8005\u52a0\u4ea4\u6d41\u7fa4\u3002 \u6211\u7684Python\u7248\u672c\uff1apython 3.7.7\u3002\u5efa\u8bae\u8ddf\u6211\u7684\u7248\u672c\u4fdd\u6301\u4e00\u81f4\u3002 windows Python3.7.7\u4e0b\u8f7d Mac Python 3.7.7 \u4e0b\u8f7d \u5b89\u88c5IDE\u73af\u5883 \u00b6 Pycharm\u5b98\u7f51\u5730\u5740 \u5b89\u88c5\u5b8cPython\u4ee5\u540e\u4f1a\u9ed8\u8ba4\u5b89\u88c5\u4e00\u4e2aIDLE\u7f16\u8f91\u5668\uff0c\u8fd9\u4e2a\u4e0d\u662f\u5f88\u597d\u7528\uff0c\u5f88\u591a\u5efa\u8bae\u521d\u5b66\u8005\u4f7f\u7528\u6587\u672c\u7f16\u8f91\u5668\uff0c\u4e2a\u4eba\u8fd8\u662f\u63a8\u8350IDE\u3002\u6709\u9519\u8bef\u63d0\u793a\u4ee5\u53ca\u547d\u4ee4\u8865\u5168\uff0c\u4f1a\u51cf\u5c11\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002 \u8bf7\u81ea\u884c\u4e0b\u8f7dPycharm\uff0c\u4e0b\u9762\u7ed9\u51fa\u5b98\u7f51\u5730\u5740\u3002\u8bf7\u4e0b\u8f7dCommunity\u793e\u533a\u7248\u672c\uff0c\u4e0d\u5b58\u5728\u6fc0\u6d3b\u95ee\u9898\uff0c\u5f00\u6e90\u7248\u672c\u5176\u5b9e\u5df2\u7ecf\u591f\u7528\u4e86\u3002","title":"\u73af\u5883\u5b89\u88c5"},{"location":"python/install/#_1","text":"\u7f16\u7a0b\u5f53\u7136\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u73af\u5883\uff0c\u4eca\u5e742020\u5e74Python2\u5df2\u7ecf\u5931\u53bb\u5b98\u65b9\u7684\u7ef4\u62a4\u4e86\uff0c\u5efa\u8bae\u76f4\u63a5\u5b66\u4e60Python3\u3002\u672c\u8282\u4ecb\u7ecd\u73af\u5883\u7684\u5b89\u88c5\uff0c\u5305\u62ecIDE\u7684\u5b89\u88c5\u3002","title":"\u73af\u5883\u5b89\u88c5"},{"location":"python/install/#python","text":"\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165python\u5b98\u7f51\uff0c\u516b\u6210\u4f1a\u8fdb\u5165\u767e\u5ea6\u7684\u5e7f\u544a\u3002 \u70b9\u51fb\u8fd9\u91cc \u8fdb\u5165Python\u5b98\u7f51\uff0c\u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u7684\u5b89\u88c5\u5305\u3002\u81f3\u4e8ePython\u7684\u7248\u672c3.7\uff0c3.8\u90fd\u53ef\u4ee5\u3002\u53ea\u8981\u662f3.6\u53ca\u4ee5\u540e\u7684\u7248\u672c\uff0c\u53d8\u5316\u6ca1\u6709\u90a3\u4e48\u5927\u90fd\u662f\u53ef\u4ee5\u7684\u3002 \u81f3\u4e8e\u5982\u4f55\u5b89\u88c5\uff0c\u76f4\u63a5\u4e0b\u4e00\u6b65\uff0c\u4e0b\u4e00\u6b65\u5c31\u53ef\u4ee5\u3002\u5982\u4f55\u786e\u5b9a\u5b89\u88c5\u662f\u5426\u6210\u529f\u5462\uff1f\u6253\u5f00\u547d\u4ee4\u884c\uff0cwindows\u7cfb\u7edf\u5c31\u662f\u90a3\u4e2a\u9ed1\u7a97\u53e3\u3002\u8f93\u5165 python \uff0c\u770b\u770b\u8fd4\u56de\u7ed3\u679c Python 3.7.7 (v3.7.7:d7c567b08f, Mar 10 2020, 02:56:16) [Clang 6.0 (clang-600.0.57)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> \u5982\u679c\u770b\u5230\u7c7b\u4f3c\u4e0a\u9762\u7684\u4fe1\u606f\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u4e86\u3002\u9000\u51fa\u547d\u4ee4\u884cControl+D\uff0c\u6216\u8005\u8f93\u5165 quit() \uff0c\u5373\u53ef\u9000\u51fa\u3002\u5728\u952e\u5165 pip \u6216\u8005 pip3 ,\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e00\u4e0b\u4fe1\u606f Usage: pip3 <command> [options] Commands: install Install packages. download Download packages. uninstall Uninstall packages. freeze Output installed packages in requirements format. list List installed packages. show Show information about installed packages. ...... \u8bf4\u660e\u4f60\u7684Python\u548cpip\u90fd\u6b63\u786e\u5b89\u88c5\u4e86\u3002\u5426\u5219\u8bf7\u81ea\u884c\u67e5\u8d44\u6599\uff0c\u6216\u8005\u52a0\u4ea4\u6d41\u7fa4\u3002 \u6211\u7684Python\u7248\u672c\uff1apython 3.7.7\u3002\u5efa\u8bae\u8ddf\u6211\u7684\u7248\u672c\u4fdd\u6301\u4e00\u81f4\u3002 windows Python3.7.7\u4e0b\u8f7d Mac Python 3.7.7 \u4e0b\u8f7d","title":"\u5b89\u88c5Python\u5305"},{"location":"python/install/#ide","text":"Pycharm\u5b98\u7f51\u5730\u5740 \u5b89\u88c5\u5b8cPython\u4ee5\u540e\u4f1a\u9ed8\u8ba4\u5b89\u88c5\u4e00\u4e2aIDLE\u7f16\u8f91\u5668\uff0c\u8fd9\u4e2a\u4e0d\u662f\u5f88\u597d\u7528\uff0c\u5f88\u591a\u5efa\u8bae\u521d\u5b66\u8005\u4f7f\u7528\u6587\u672c\u7f16\u8f91\u5668\uff0c\u4e2a\u4eba\u8fd8\u662f\u63a8\u8350IDE\u3002\u6709\u9519\u8bef\u63d0\u793a\u4ee5\u53ca\u547d\u4ee4\u8865\u5168\uff0c\u4f1a\u51cf\u5c11\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002 \u8bf7\u81ea\u884c\u4e0b\u8f7dPycharm\uff0c\u4e0b\u9762\u7ed9\u51fa\u5b98\u7f51\u5730\u5740\u3002\u8bf7\u4e0b\u8f7dCommunity\u793e\u533a\u7248\u672c\uff0c\u4e0d\u5b58\u5728\u6fc0\u6d3b\u95ee\u9898\uff0c\u5f00\u6e90\u7248\u672c\u5176\u5b9e\u5df2\u7ecf\u591f\u7528\u4e86\u3002","title":"\u5b89\u88c5IDE\u73af\u5883"},{"location":"python/intro/","text":"\u5185\u5bb9\u4ecb\u7ecd \u00b6 \u672c\u5185\u5bb9\u4e3aPython\u7684\u57fa\u7840\u5185\u5bb9\uff0c\u5305\u62ec\u8bed\u6cd5\u548c\u6570\u636e\u7c7b\u578b\uff0c\u7a0b\u5e8f\u7ed3\u6784\uff0c\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u9762\u5411\u5bf9\u8c61\u521d\u6b65\uff0c\u6a21\u5757\u4e0e\u5305\u7b49\u5185\u5bb9\u3002\u8bfb\u8005\u4e0d\u9700\u8981\u4efb\u4f55\u7f16\u7a0b\u57fa\u7840\uff0c\u8ddf\u7740\u6559\u7a0b\u5c31\u80fd\u5165\u95e8Python\u7f16\u7a0b\u3002 \u5b66\u5b8c\u57fa\u7840\u5185\u5bb9\u53ef\u4ee5\u5c1d\u8bd5\u5b66\u4e60\u8fdb\u9636\u5185\u5bb9\u4ee5\u53ca\u4e13\u9898\u5185\u5bb9\u3002\u4e13\u9898\u5185\u5bb9\u5305\u62ec\u722c\u866b\uff0c\u6570\u636e\u5206\u6790\uff0c\u6df1\u5ea6\u5b66\u4e60\u4ee5\u53ca\u79d1\u5b66\u8ba1\u7b97\u7b49\u3002\u5bf9\u4e13\u680f\u5185\u5bb9\u611f\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u81ea\u884c\u9009\u62e9\u5b66\u4e60\u3002 \u7531\u4e8e\u76ee\u524d\u662f\u51ed\u501f\u6211\u4e2a\u4eba\u7684\u80fd\u529b\u5728\u66f4\u65b0\uff0c\u6bd5\u7adf\u4e00\u4e2a\u4eba\u7684\u80fd\u529b\u6709\u9650\uff0c\u66f4\u65b0\u7684\u5185\u5bb9\u9891\u7387\u4e0d\u662f\u5f88\u9ad8\uff0c\u671b\u8bfb\u8005\u89c1\u8c05\u3002\u5982\u6709\u7591\u95ee\u53ef\u4ee5\u4e0e\u6211\u8054\u7cfb\u3002 \u7591\u95ee\u89e3\u7b54 \u00b6 \u6b22\u8fce\u5927\u5bb6\u52a0\u5165QQ\u7fa4\uff1a QQ \u4ea4\u6d41\u7fa4\uff1a533028957 \u4e2a\u4ebaQQ\uff1a 971516583 \u4e5f\u53ef\u4ee5\u5173\u6ce8\u5fae\u4fe1\u516c\u4f17\u53f7\uff1a","title":"\u5185\u5bb9\u4ecb\u7ecd"},{"location":"python/intro/#_1","text":"\u672c\u5185\u5bb9\u4e3aPython\u7684\u57fa\u7840\u5185\u5bb9\uff0c\u5305\u62ec\u8bed\u6cd5\u548c\u6570\u636e\u7c7b\u578b\uff0c\u7a0b\u5e8f\u7ed3\u6784\uff0c\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u9762\u5411\u5bf9\u8c61\u521d\u6b65\uff0c\u6a21\u5757\u4e0e\u5305\u7b49\u5185\u5bb9\u3002\u8bfb\u8005\u4e0d\u9700\u8981\u4efb\u4f55\u7f16\u7a0b\u57fa\u7840\uff0c\u8ddf\u7740\u6559\u7a0b\u5c31\u80fd\u5165\u95e8Python\u7f16\u7a0b\u3002 \u5b66\u5b8c\u57fa\u7840\u5185\u5bb9\u53ef\u4ee5\u5c1d\u8bd5\u5b66\u4e60\u8fdb\u9636\u5185\u5bb9\u4ee5\u53ca\u4e13\u9898\u5185\u5bb9\u3002\u4e13\u9898\u5185\u5bb9\u5305\u62ec\u722c\u866b\uff0c\u6570\u636e\u5206\u6790\uff0c\u6df1\u5ea6\u5b66\u4e60\u4ee5\u53ca\u79d1\u5b66\u8ba1\u7b97\u7b49\u3002\u5bf9\u4e13\u680f\u5185\u5bb9\u611f\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u81ea\u884c\u9009\u62e9\u5b66\u4e60\u3002 \u7531\u4e8e\u76ee\u524d\u662f\u51ed\u501f\u6211\u4e2a\u4eba\u7684\u80fd\u529b\u5728\u66f4\u65b0\uff0c\u6bd5\u7adf\u4e00\u4e2a\u4eba\u7684\u80fd\u529b\u6709\u9650\uff0c\u66f4\u65b0\u7684\u5185\u5bb9\u9891\u7387\u4e0d\u662f\u5f88\u9ad8\uff0c\u671b\u8bfb\u8005\u89c1\u8c05\u3002\u5982\u6709\u7591\u95ee\u53ef\u4ee5\u4e0e\u6211\u8054\u7cfb\u3002","title":"\u5185\u5bb9\u4ecb\u7ecd"},{"location":"python/intro/#_2","text":"\u6b22\u8fce\u5927\u5bb6\u52a0\u5165QQ\u7fa4\uff1a QQ \u4ea4\u6d41\u7fa4\uff1a533028957 \u4e2a\u4ebaQQ\uff1a 971516583 \u4e5f\u53ef\u4ee5\u5173\u6ce8\u5fae\u4fe1\u516c\u4f17\u53f7\uff1a","title":"\u7591\u95ee\u89e3\u7b54"},{"location":"python/lambda/","text":"lambda\u51fd\u6570 \u00b6 \u524d\u9762\u6211\u4eec\u5b9a\u4e49\u7684\u51fd\u6570\u90fd\u662f\u901a\u8fc7\u5173\u952e\u8bcd def \u6765\u5b9a\u4e49\u7684\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4efb\u610f\u590d\u6742\u7c7b\u578b\u7684\u51fd\u6570\u3002\u5982\u679c\u662f\u975e\u5e38\u7b80\u5355\u7684\u51fd\u6570\uff08\u4e00\u884c\u51fd\u6570\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 lambda \u5173\u952e\u8bcd\u6765\u5b9a\u4e49\u3002 \u524d\u9762\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u7684\u51fd\u6570\uff0c\u6211\u4eec\u7528 lambda \u6765\u5b9a\u4e49\uff1a import math circle = lambda r : ( math . pi * r ** 2 , 2 * math . pi * r ) s , c = circle ( 5 ) print ( \"\u9762\u79ef\u4e3a: %.2f \u5468\u957f\u4e3a: %.2f \" % ( s , c )) # \u9762\u79ef\u4e3a: 78.54 \u5468\u957f\u4e3a: 31.42 \u770b\u8d77\u6765\u662f\u4e0d\u662f\u975e\u5e38\u7b80\u6d01\u3002\u5982\u679c\u4f60\u8981\u5b9a\u4e49\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u51fd\u6570\uff0c\u90a3\u5c31\u4f7f\u7528 lambda \u5427\u3002\u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u4e5f\u53ef\u4ee5\uff0c\u4f7f\u7528\u5c0f\u62ec\u53f7\u5c06\u8fd4\u56de\u503c\u5305\u8d77\u6765\u3002\u6ce8\u610f lambda \u51fd\u6570\u5e76\u6ca1\u6709 return \u5173\u952e\u8bcd\u8fd4\u56de\uff0c\u800c\u662f : \u4ee5\u540e\u90fd\u662f\u8fd4\u56de\u503c\u3002","title":"lambda\u51fd\u6570"},{"location":"python/lambda/#lambda","text":"\u524d\u9762\u6211\u4eec\u5b9a\u4e49\u7684\u51fd\u6570\u90fd\u662f\u901a\u8fc7\u5173\u952e\u8bcd def \u6765\u5b9a\u4e49\u7684\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4efb\u610f\u590d\u6742\u7c7b\u578b\u7684\u51fd\u6570\u3002\u5982\u679c\u662f\u975e\u5e38\u7b80\u5355\u7684\u51fd\u6570\uff08\u4e00\u884c\u51fd\u6570\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 lambda \u5173\u952e\u8bcd\u6765\u5b9a\u4e49\u3002 \u524d\u9762\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u7684\u51fd\u6570\uff0c\u6211\u4eec\u7528 lambda \u6765\u5b9a\u4e49\uff1a import math circle = lambda r : ( math . pi * r ** 2 , 2 * math . pi * r ) s , c = circle ( 5 ) print ( \"\u9762\u79ef\u4e3a: %.2f \u5468\u957f\u4e3a: %.2f \" % ( s , c )) # \u9762\u79ef\u4e3a: 78.54 \u5468\u957f\u4e3a: 31.42 \u770b\u8d77\u6765\u662f\u4e0d\u662f\u975e\u5e38\u7b80\u6d01\u3002\u5982\u679c\u4f60\u8981\u5b9a\u4e49\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u51fd\u6570\uff0c\u90a3\u5c31\u4f7f\u7528 lambda \u5427\u3002\u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u4e5f\u53ef\u4ee5\uff0c\u4f7f\u7528\u5c0f\u62ec\u53f7\u5c06\u8fd4\u56de\u503c\u5305\u8d77\u6765\u3002\u6ce8\u610f lambda \u51fd\u6570\u5e76\u6ca1\u6709 return \u5173\u952e\u8bcd\u8fd4\u56de\uff0c\u800c\u662f : \u4ee5\u540e\u90fd\u662f\u8fd4\u56de\u503c\u3002","title":"lambda\u51fd\u6570"},{"location":"python/list/","text":"\u5217\u8868 \u00b6 \u4ecb\u7ecd\u5217\u8868 \u00b6 \u5217\u8868\u662f\u4e00\u79cd\u6570\u636e\u5bb9\u5668\uff0c\u65e2\u7136\u662f\u5bb9\u5668\uff0c\u80af\u5b9a\u662f\u7528\u6765\u88c5\u4e1c\u897f\u7684\u3002\u5982\u679c\u5b66\u8fc7C\u8bed\u8a00\u7684\u670b\u53cb\u90fd\u77e5\u9053\uff0c\u58f0\u660e\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u5f80\u6570\u7ec4\u4e2d\u6dfb\u52a0\u5143\u7d20\u4e86\uff0c\u4e0d\u8fc7\u6dfb\u52a0\u7684\u5143\u7d20\u90fd\u662f\u58f0\u660e\u7684\u7c7b\u578b\u3002\u800c\u5728Python\u4e2d\uff0c\u4e0d\u9700\u8981\u58f0\u660e\u6570\u636e\u7684\u7c7b\u578b\uff0c\u4e5f\u5c31\u610f\u5473\u7740list\u8fd9\u79cd\u5bb9\u5668\u53ef\u4ee5\u5b58\u653e\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6211\u4eec\u521b\u5efa\u5217\u8868\uff1a >>> l = [ 1 , 4 , 2 , 10 , 9 ] >>> type ( l ) # \u67e5\u770b\u6570\u636e\u7c7b\u578b list >>> l = [ 'a' , 1 , 2 , 3 , None , True ] # \u53ef\u4ee5\u5b58\u653e\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e >>> len ( l ) # \u5217\u8868\u7684\u5143\u7d20\u4e2a\u6570 6 >>> l = [ 1 , [ 1 , 2 , 3 ], 4 , 5 , 6 , 'hello' ] # \u5217\u8868\u751a\u81f3\u8fd8\u53ef\u4ee5\u5d4c\u5957\u5217\u8868 \u5217\u8868\u7684\u8bbf\u95ee \u00b6 \u5217\u8868\u4f5c\u4e3a\u6570\u636e\u7684\u5bb9\u5668\uff0c\u521b\u5efa\u8fd9\u4e2a\u5bb9\u5668\u4ee5\u540e\uff0c\u63a5\u4e0b\u6765\u7684\u4efb\u52a1\u5c31\u662f\u5982\u4f55\u8bbf\u95ee\u8fd9\u4e2a\u5217\u8868\u5143\u7d20\u3002\u4e0e\u6570\u7ec4\u8bbf\u95ee\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u4e0b\u6807\u8bbf\u95ee\u3002 >>> l = list ( range ( 10 )) # range\u51fd\u6570\u521b\u5efa0-9\u7684\u5217\u8868 >>> l [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> l [ 0 ] # \u7b2c\u4e00\u4e2a\u5143\u7d20\u4ece0\u5f00\u59cb 0 >>> l [: 4 ] # \u524d4\u4e2a\u5143\u7d20 \u6ce8\u610f\u8fd4\u56de\u7684\u662f0-3\u56db\u4e2a\u5143\u7d20 [ 0 , 1 , 2 , 3 ] >>> l [ 1 : 5 ] [ 1 , 2 , 3 , 4 ] >>> l [ 4 : - 1 ] # \u4ece\u7b2c5\u4e2a\u5143\u7d20\u5f00\u59cb\u5230\u5012\u6570\u7b2c1\u4e2a\u5143\u7d20\uff0c\u4e0d\u5305\u62ec\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684 [ 4 , 5 , 6 , 7 , 8 ] >>> l [ 4 :] # \u4ece\u7b2c5\u4e2a\u5143\u7d20\u5f00\u59cb\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20 [ 4 , 5 , 6 , 7 , 8 , 9 ] >>> l [ 1 : - 1 : 2 ] # \u4ece\u7b2c2\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u5230\u5012\u6570\u7b2c2\u4e2a\u5143\u7d20\uff0c\u6b65\u957f\u4e3a2 [ 1 , 3 , 5 , 7 ] >>> l [:: - 1 ] # \u6b65\u957f\u4e3a-1\uff0c \u8868\u793a\u53cd\u5411\u8f93\u51fa [ 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 ] \u4e0a\u9762\u5206\u522b\u6f14\u793a\u4e86\u8bbf\u95ee\u5217\u8868\u76843\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u603b\u7ed3\u5982\u4e0b\uff1a 1\u4e2a\u5143\u7d20\uff0c\u8bbf\u95ee\u5355\u4e2a\u5143\u7d20\u3002\u5982 l[0],l[:4], l[4:] 2\u4e2a\u5143\u7d20\uff0c\u67d0\u4e00\u6bb5\u8fde\u7eed\u5143\u7d20\u3002\u5982 l[1:5], l[4:-1] 3\u4e2a\u5143\u7d20\uff0c\u67d0\u4e00\u6bb5\u5177\u6709\u6b65\u957f\u7684\u5143\u7d20\u3002\u5982 l[1:-1:2] \u5217\u8868\u904d\u5386 \u00b6 \u6211\u4eec\u5427\u4e1c\u897f\u653e\u5728\u5bb9\u5668\u4e2d\uff0c\u6700\u5e38\u505a\u7684\u4e8b\u60c5\u5e94\u8be5\u5c31\u662f\u5728\u5bb9\u5668\u4e2d\u627e\u6211\u4eec\u60f3\u8981\u7684\u4e1c\u897f\u4e86\u3002\u904d\u5386\u5c31\u662f\u5728\u4e0d\u91cd\u590d\u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u904d\u6240\u6709\u7684\u5143\u7d20\u3002\u901a\u5e38\u4f7f\u7528 for \u6765\u5faa\u73af\u904d\u5386\u3002 for item in list_data : pass \u904d\u5386\u7684\u65b9\u5f0f\u5982\u4e0a\uff0citem\u4ece\u7b2c0\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u77e5\u9053\u53d6\u5b8c list_data \u4e2d\u6240\u6709\u5143\u7d20\u5faa\u73af\u505c\u6b62\u3002\u901a\u5e38\u5728C\u8bed\u8a00\u6216\u8005Java\u4e2d\u901a\u8fc7\u5b9a\u4e49\u4e0b\u6807\u6765\u904d\u5386\uff0cPython\u4e2d\u540c\u6837\u662f\u652f\u6301\u4e0b\u6807\u7d22\u5f15\u7684\u3002 \u6709\u6ca1\u6709\u529e\u6cd5\u65e2\u80fd\u83b7\u53d6\u4e0b\u6807\uff0c\u53c8\u80fd\u540c\u65f6\u83b7\u53d6\u5230\u5143\u7d20\u5462\uff1f\u4f7f\u7528 enumerate \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u4e0b\u6807\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u662f\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e86\u3002 l = [ 'a' , 1 , 2 , 3 , None , True ] for idx , item in enumerate ( l ): print ( idx , \"==>\" , item ) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 0 ==> a 1 ==> 1 2 ==> 2 3 ==> 3 4 ==> None 5 ==> True \u5217\u8868\u7684\u65b9\u6cd5 \u00b6 \u60f3\u8c61\u4e00\u4e0b\u4f60\u6709\u4e00\u4e2a\u5bb9\u5668\u91cc\u9762\u5b58\u653e\u5404\u79cd\u73a9\u5177\uff0c\u4f60\u73b0\u5728\u65b0\u4e70\u4e86\u4e00\u6279\u73a9\u5177\uff0c\u662f\u4e0d\u662f\u8981\u628a\u4ed6\u4eec\u653e\u8fdb\u53bb\uff0c\u6709\u4e9b\u73a9\u5177\u4e0d\u60f3\u8981\u4e86\uff0c\u60f3\u8981\u6254\u6389\uff0c\u8fd9\u4e9b\u90fd\u662f\u6b63\u5e38\u7684\u5904\u7406\u65b9\u6cd5\u3002 \u8fd9\u4e9b\u5904\u7406\u65b9\u6cd5\u5305\u62ec\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u6dfb\u52a0\u591a\u4e2a\u5143\u7d20\uff0c\u5220\u9664\u5143\u7d20\uff0c\u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u7b49\u65b9\u6cd5\u3002 \u6dfb\u52a0\u5143\u7d20 \u00b6 \u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u4f7f\u7528 append \u65b9\u6cd5\uff0c\u4f1a\u628a\u65b0\u5143\u7d20\u6dfb\u52a0\u5230\u5217\u8868\u7684\u672b\u5c3e\u3002 list_data . append ( item ) \u63d2\u5165\u5143\u7d20 \u00b6 \u63d2\u5165\u5143\u7d20\u53ef\u4ee5\u6307\u5b9a\u63d2\u5165\u7684\u4f4d\u7f6e\u3002 insert(index, object) \u5176\u4e2d index \u4e3a\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c object \u8981\u63d2\u5165\u7684\u5143\u7d20\uff08\u5bf9\u8c61\uff09\u3002 >>> l = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> l . insert ( 0 , 10 ) >>> l [ 10 , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] \u5220\u9664\u5143\u7d20 \u00b6 \u5220\u9664\u5143\u7d20\u4f7f\u7528 remove \u65b9\u6cd5 remove(value) \u5176\u4e2d\u7684 value \u662f\u5217\u8868\u7684\u5143\u7d20\u7684\u503c\uff0c\u5982\u679c\u6709\u591a\u4e2a\u76f8\u540c\u7684\u503c\uff0c\u53ea\u5220\u9664\u7b2c\u4e00\u4e2a\u3002 >>> l = [ 10 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 1 , 3 ] >>> l . remove ( 1 ) # \u5220\u9664\u7b2c\u4e00\u4e2a\u503c >>> l [ 10 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 1 , 3 ] >>> l . remove ( 100 ) # 100 \u4e0d\u5728\u5217\u8868\u4e2d exec ( code_obj , self . user_global_ns , self . user_ns ) File \"<ipython-input-45-97ac9c8b213c>\" , line 1 , in < module > l . remove ( 100 ) ValueError : list . remove ( x ): x not in list \u5f39\u51fa\u5143\u7d20 \u00b6 \u5f39\u51fa\u67d0\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u4f7f\u7528 pop(index=-1) \u65b9\u6cd5\u3002\u5176\u4e2d\u7684 index \u4e3a\u5217\u8868\u7684\u4e0b\u6807\uff0c\u9ed8\u8ba4\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\u4e0eremove\u65b9\u6cd5\u7684\u533a\u522b\u5728\u4e8e\uff0cremove\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u503c\uff0c\u800cpop\u5220\u9664index\u4f4d\u7f6e\u7684\u503c\uff0c\u5e76\u4e14\u8fd4\u56de\u8fd9\u4e2a\u5143\u7d20\u503c\u3002 >>> l = [ 10 , 2 , 4 , 5 , 6 , 7 , 8 , 9 , 1 ] >>> l . pop ( - 2 ) # \u5220\u9664\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c 9 >>> l [ 10 , 2 , 4 , 5 , 6 , 7 , 8 , 1 ] \u6269\u5c55\u5217\u8868 \u00b6 \u4e00\u6b21\u6027\u6dfb\u52a0\u591a\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528\u5faa\u73af\u4f7f\u7528 append \u6216\u8005 insert \u65b9\u6cd5. \u4e00\u6b21\u6027\u6dfb\u52a0\u6574\u4e2a\u5217\u8868\u7684\u5143\u7d20\uff0c\u4f7f\u7528 extend \u65b9\u6cd5. >>> l1 = [ 1 , 2 , 3 ] >>> l2 = [ 4 , 5 , 6 ] >>> l1 . extend ( l2 ) >>> l1 [ 1 , 2 , 3 , 4 , 5 , 6 ] >>> l1 . append ( l2 ) # \u6ce8\u610f\u4e0eappend\u7684\u533a\u522b [ 1 , 2 , 3 , [ 4 , 5 , 6 ]] \u5143\u7d20\u53cd\u5411 \u00b6 \u5143\u7d20\u7684\u53cd\u5411\u8f93\u51fa\uff0c\u524d\u9762\u8bb2\u5217\u8868\u7684\u8bbf\u95ee\u65f6\u5019\uff0c\u7528\u7d22\u5f15\u7684\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u5143\u7d20\u7684\u53cd\u5411\u8f93\u51fa\u3002 l[::-1] \uff0c\u6b65\u957f\u4e3a-1\uff0c\u4e5f\u5c31\u662f\u53cd\u5411\u8f93\u51fa\u3002\u9664\u6b64\u4e4b\u5916\u5217\u8868\u4e5f\u63d0\u4f9b\u4e86\u53cd\u5411\u8f93\u51fa\u7684\u65b9\u6cd5, reverse . >>> l = [ 10 , 2 , 4 , 5 , 6 , 7 , 8 , 1 ] >>> l . reverse () # \u4fee\u6539\u4e86\u539f\u6765\u5217\u8868\u7684\u5143\u7d20 >>> l [ 1 , 8 , 7 , 6 , 5 , 4 , 2 , 10 ] >>> l [:: - 1 ] # \u53cd\u5411\u8f93\u51fa\uff0c\u4f46\u4e0d\u4fee\u6539\u539f\u59cb\u5217\u8868 [ 10 , 2 , 4 , 5 , 6 , 7 , 8 , 1 ] >>> l [ 1 , 8 , 7 , 6 , 5 , 4 , 2 , 10 ] \u5143\u7d20\u8ba1\u6570 \u00b6 \u5982\u679c\u9700\u8981\u7edf\u8ba1\u5217\u8868\u4e2d\u5143\u7d20\u503c\u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 count(value) \u65b9\u6cd5\u3002 >>> l = [ 1 , 2 , 4 , 5 , 6 , 7 , 8 , 10 , 1 , 5 ] >>> l . count ( 5 ) 2 >>> l . count ( 100 ) # \u4e0d\u5b58\u5728\u7684\u5143\u7d20\u8fd4\u56de0\u4e2a 0 \u603b\u7ed3 \u00b6 \u672c\u6587\u8bb2\u8ff0\u4e86\u5217\u8868\u4f5c\u4e3a\u6570\u636e\u5bb9\u5668\uff0c\u7528\u6765\u5b58\u653e\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff08\u5bf9\u8c61\uff09\u3002\u91cd\u70b9\u8bb2\u8ff0\u4e86\u5217\u8868\u7684\u8bbf\u95ee\u548c\u5217\u8868\u7684\u64cd\u4f5c\u65b9\u6cd5\u3002\u9664\u6b21\u4e4b\u5916\u5217\u8868\u7684\u65b9\u6cd5\u8fd8\u6709\u51e0\u79cd\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u67e5\u770b\u3002\u5728ipython\u73af\u5883\u4e0b\u4f7f\u7528 ?? \u6216\u8005 help \u6765\u67e5\u770b\u65b9\u6cd5\u7684\u5e2e\u52a9\u6587\u6863\u3002","title":"\u5217\u8868"},{"location":"python/list/#_1","text":"","title":"\u5217\u8868"},{"location":"python/list/#_2","text":"\u5217\u8868\u662f\u4e00\u79cd\u6570\u636e\u5bb9\u5668\uff0c\u65e2\u7136\u662f\u5bb9\u5668\uff0c\u80af\u5b9a\u662f\u7528\u6765\u88c5\u4e1c\u897f\u7684\u3002\u5982\u679c\u5b66\u8fc7C\u8bed\u8a00\u7684\u670b\u53cb\u90fd\u77e5\u9053\uff0c\u58f0\u660e\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u5f80\u6570\u7ec4\u4e2d\u6dfb\u52a0\u5143\u7d20\u4e86\uff0c\u4e0d\u8fc7\u6dfb\u52a0\u7684\u5143\u7d20\u90fd\u662f\u58f0\u660e\u7684\u7c7b\u578b\u3002\u800c\u5728Python\u4e2d\uff0c\u4e0d\u9700\u8981\u58f0\u660e\u6570\u636e\u7684\u7c7b\u578b\uff0c\u4e5f\u5c31\u610f\u5473\u7740list\u8fd9\u79cd\u5bb9\u5668\u53ef\u4ee5\u5b58\u653e\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6211\u4eec\u521b\u5efa\u5217\u8868\uff1a >>> l = [ 1 , 4 , 2 , 10 , 9 ] >>> type ( l ) # \u67e5\u770b\u6570\u636e\u7c7b\u578b list >>> l = [ 'a' , 1 , 2 , 3 , None , True ] # \u53ef\u4ee5\u5b58\u653e\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e >>> len ( l ) # \u5217\u8868\u7684\u5143\u7d20\u4e2a\u6570 6 >>> l = [ 1 , [ 1 , 2 , 3 ], 4 , 5 , 6 , 'hello' ] # \u5217\u8868\u751a\u81f3\u8fd8\u53ef\u4ee5\u5d4c\u5957\u5217\u8868","title":"\u4ecb\u7ecd\u5217\u8868"},{"location":"python/list/#_3","text":"\u5217\u8868\u4f5c\u4e3a\u6570\u636e\u7684\u5bb9\u5668\uff0c\u521b\u5efa\u8fd9\u4e2a\u5bb9\u5668\u4ee5\u540e\uff0c\u63a5\u4e0b\u6765\u7684\u4efb\u52a1\u5c31\u662f\u5982\u4f55\u8bbf\u95ee\u8fd9\u4e2a\u5217\u8868\u5143\u7d20\u3002\u4e0e\u6570\u7ec4\u8bbf\u95ee\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u4e0b\u6807\u8bbf\u95ee\u3002 >>> l = list ( range ( 10 )) # range\u51fd\u6570\u521b\u5efa0-9\u7684\u5217\u8868 >>> l [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> l [ 0 ] # \u7b2c\u4e00\u4e2a\u5143\u7d20\u4ece0\u5f00\u59cb 0 >>> l [: 4 ] # \u524d4\u4e2a\u5143\u7d20 \u6ce8\u610f\u8fd4\u56de\u7684\u662f0-3\u56db\u4e2a\u5143\u7d20 [ 0 , 1 , 2 , 3 ] >>> l [ 1 : 5 ] [ 1 , 2 , 3 , 4 ] >>> l [ 4 : - 1 ] # \u4ece\u7b2c5\u4e2a\u5143\u7d20\u5f00\u59cb\u5230\u5012\u6570\u7b2c1\u4e2a\u5143\u7d20\uff0c\u4e0d\u5305\u62ec\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684 [ 4 , 5 , 6 , 7 , 8 ] >>> l [ 4 :] # \u4ece\u7b2c5\u4e2a\u5143\u7d20\u5f00\u59cb\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20 [ 4 , 5 , 6 , 7 , 8 , 9 ] >>> l [ 1 : - 1 : 2 ] # \u4ece\u7b2c2\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u5230\u5012\u6570\u7b2c2\u4e2a\u5143\u7d20\uff0c\u6b65\u957f\u4e3a2 [ 1 , 3 , 5 , 7 ] >>> l [:: - 1 ] # \u6b65\u957f\u4e3a-1\uff0c \u8868\u793a\u53cd\u5411\u8f93\u51fa [ 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 ] \u4e0a\u9762\u5206\u522b\u6f14\u793a\u4e86\u8bbf\u95ee\u5217\u8868\u76843\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u603b\u7ed3\u5982\u4e0b\uff1a 1\u4e2a\u5143\u7d20\uff0c\u8bbf\u95ee\u5355\u4e2a\u5143\u7d20\u3002\u5982 l[0],l[:4], l[4:] 2\u4e2a\u5143\u7d20\uff0c\u67d0\u4e00\u6bb5\u8fde\u7eed\u5143\u7d20\u3002\u5982 l[1:5], l[4:-1] 3\u4e2a\u5143\u7d20\uff0c\u67d0\u4e00\u6bb5\u5177\u6709\u6b65\u957f\u7684\u5143\u7d20\u3002\u5982 l[1:-1:2]","title":"\u5217\u8868\u7684\u8bbf\u95ee"},{"location":"python/list/#_4","text":"\u6211\u4eec\u5427\u4e1c\u897f\u653e\u5728\u5bb9\u5668\u4e2d\uff0c\u6700\u5e38\u505a\u7684\u4e8b\u60c5\u5e94\u8be5\u5c31\u662f\u5728\u5bb9\u5668\u4e2d\u627e\u6211\u4eec\u60f3\u8981\u7684\u4e1c\u897f\u4e86\u3002\u904d\u5386\u5c31\u662f\u5728\u4e0d\u91cd\u590d\u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u904d\u6240\u6709\u7684\u5143\u7d20\u3002\u901a\u5e38\u4f7f\u7528 for \u6765\u5faa\u73af\u904d\u5386\u3002 for item in list_data : pass \u904d\u5386\u7684\u65b9\u5f0f\u5982\u4e0a\uff0citem\u4ece\u7b2c0\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u77e5\u9053\u53d6\u5b8c list_data \u4e2d\u6240\u6709\u5143\u7d20\u5faa\u73af\u505c\u6b62\u3002\u901a\u5e38\u5728C\u8bed\u8a00\u6216\u8005Java\u4e2d\u901a\u8fc7\u5b9a\u4e49\u4e0b\u6807\u6765\u904d\u5386\uff0cPython\u4e2d\u540c\u6837\u662f\u652f\u6301\u4e0b\u6807\u7d22\u5f15\u7684\u3002 \u6709\u6ca1\u6709\u529e\u6cd5\u65e2\u80fd\u83b7\u53d6\u4e0b\u6807\uff0c\u53c8\u80fd\u540c\u65f6\u83b7\u53d6\u5230\u5143\u7d20\u5462\uff1f\u4f7f\u7528 enumerate \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u4e0b\u6807\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u662f\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e86\u3002 l = [ 'a' , 1 , 2 , 3 , None , True ] for idx , item in enumerate ( l ): print ( idx , \"==>\" , item ) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 0 ==> a 1 ==> 1 2 ==> 2 3 ==> 3 4 ==> None 5 ==> True","title":"\u5217\u8868\u904d\u5386"},{"location":"python/list/#_5","text":"\u60f3\u8c61\u4e00\u4e0b\u4f60\u6709\u4e00\u4e2a\u5bb9\u5668\u91cc\u9762\u5b58\u653e\u5404\u79cd\u73a9\u5177\uff0c\u4f60\u73b0\u5728\u65b0\u4e70\u4e86\u4e00\u6279\u73a9\u5177\uff0c\u662f\u4e0d\u662f\u8981\u628a\u4ed6\u4eec\u653e\u8fdb\u53bb\uff0c\u6709\u4e9b\u73a9\u5177\u4e0d\u60f3\u8981\u4e86\uff0c\u60f3\u8981\u6254\u6389\uff0c\u8fd9\u4e9b\u90fd\u662f\u6b63\u5e38\u7684\u5904\u7406\u65b9\u6cd5\u3002 \u8fd9\u4e9b\u5904\u7406\u65b9\u6cd5\u5305\u62ec\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u6dfb\u52a0\u591a\u4e2a\u5143\u7d20\uff0c\u5220\u9664\u5143\u7d20\uff0c\u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u7b49\u65b9\u6cd5\u3002","title":"\u5217\u8868\u7684\u65b9\u6cd5"},{"location":"python/list/#_6","text":"\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u4f7f\u7528 append \u65b9\u6cd5\uff0c\u4f1a\u628a\u65b0\u5143\u7d20\u6dfb\u52a0\u5230\u5217\u8868\u7684\u672b\u5c3e\u3002 list_data . append ( item )","title":"\u6dfb\u52a0\u5143\u7d20"},{"location":"python/list/#_7","text":"\u63d2\u5165\u5143\u7d20\u53ef\u4ee5\u6307\u5b9a\u63d2\u5165\u7684\u4f4d\u7f6e\u3002 insert(index, object) \u5176\u4e2d index \u4e3a\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c object \u8981\u63d2\u5165\u7684\u5143\u7d20\uff08\u5bf9\u8c61\uff09\u3002 >>> l = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> l . insert ( 0 , 10 ) >>> l [ 10 , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ]","title":"\u63d2\u5165\u5143\u7d20"},{"location":"python/list/#_8","text":"\u5220\u9664\u5143\u7d20\u4f7f\u7528 remove \u65b9\u6cd5 remove(value) \u5176\u4e2d\u7684 value \u662f\u5217\u8868\u7684\u5143\u7d20\u7684\u503c\uff0c\u5982\u679c\u6709\u591a\u4e2a\u76f8\u540c\u7684\u503c\uff0c\u53ea\u5220\u9664\u7b2c\u4e00\u4e2a\u3002 >>> l = [ 10 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 1 , 3 ] >>> l . remove ( 1 ) # \u5220\u9664\u7b2c\u4e00\u4e2a\u503c >>> l [ 10 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 1 , 3 ] >>> l . remove ( 100 ) # 100 \u4e0d\u5728\u5217\u8868\u4e2d exec ( code_obj , self . user_global_ns , self . user_ns ) File \"<ipython-input-45-97ac9c8b213c>\" , line 1 , in < module > l . remove ( 100 ) ValueError : list . remove ( x ): x not in list","title":"\u5220\u9664\u5143\u7d20"},{"location":"python/list/#_9","text":"\u5f39\u51fa\u67d0\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u4f7f\u7528 pop(index=-1) \u65b9\u6cd5\u3002\u5176\u4e2d\u7684 index \u4e3a\u5217\u8868\u7684\u4e0b\u6807\uff0c\u9ed8\u8ba4\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\u4e0eremove\u65b9\u6cd5\u7684\u533a\u522b\u5728\u4e8e\uff0cremove\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u503c\uff0c\u800cpop\u5220\u9664index\u4f4d\u7f6e\u7684\u503c\uff0c\u5e76\u4e14\u8fd4\u56de\u8fd9\u4e2a\u5143\u7d20\u503c\u3002 >>> l = [ 10 , 2 , 4 , 5 , 6 , 7 , 8 , 9 , 1 ] >>> l . pop ( - 2 ) # \u5220\u9664\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c 9 >>> l [ 10 , 2 , 4 , 5 , 6 , 7 , 8 , 1 ]","title":"\u5f39\u51fa\u5143\u7d20"},{"location":"python/list/#_10","text":"\u4e00\u6b21\u6027\u6dfb\u52a0\u591a\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528\u5faa\u73af\u4f7f\u7528 append \u6216\u8005 insert \u65b9\u6cd5. \u4e00\u6b21\u6027\u6dfb\u52a0\u6574\u4e2a\u5217\u8868\u7684\u5143\u7d20\uff0c\u4f7f\u7528 extend \u65b9\u6cd5. >>> l1 = [ 1 , 2 , 3 ] >>> l2 = [ 4 , 5 , 6 ] >>> l1 . extend ( l2 ) >>> l1 [ 1 , 2 , 3 , 4 , 5 , 6 ] >>> l1 . append ( l2 ) # \u6ce8\u610f\u4e0eappend\u7684\u533a\u522b [ 1 , 2 , 3 , [ 4 , 5 , 6 ]]","title":"\u6269\u5c55\u5217\u8868"},{"location":"python/list/#_11","text":"\u5143\u7d20\u7684\u53cd\u5411\u8f93\u51fa\uff0c\u524d\u9762\u8bb2\u5217\u8868\u7684\u8bbf\u95ee\u65f6\u5019\uff0c\u7528\u7d22\u5f15\u7684\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u5143\u7d20\u7684\u53cd\u5411\u8f93\u51fa\u3002 l[::-1] \uff0c\u6b65\u957f\u4e3a-1\uff0c\u4e5f\u5c31\u662f\u53cd\u5411\u8f93\u51fa\u3002\u9664\u6b64\u4e4b\u5916\u5217\u8868\u4e5f\u63d0\u4f9b\u4e86\u53cd\u5411\u8f93\u51fa\u7684\u65b9\u6cd5, reverse . >>> l = [ 10 , 2 , 4 , 5 , 6 , 7 , 8 , 1 ] >>> l . reverse () # \u4fee\u6539\u4e86\u539f\u6765\u5217\u8868\u7684\u5143\u7d20 >>> l [ 1 , 8 , 7 , 6 , 5 , 4 , 2 , 10 ] >>> l [:: - 1 ] # \u53cd\u5411\u8f93\u51fa\uff0c\u4f46\u4e0d\u4fee\u6539\u539f\u59cb\u5217\u8868 [ 10 , 2 , 4 , 5 , 6 , 7 , 8 , 1 ] >>> l [ 1 , 8 , 7 , 6 , 5 , 4 , 2 , 10 ]","title":"\u5143\u7d20\u53cd\u5411"},{"location":"python/list/#_12","text":"\u5982\u679c\u9700\u8981\u7edf\u8ba1\u5217\u8868\u4e2d\u5143\u7d20\u503c\u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 count(value) \u65b9\u6cd5\u3002 >>> l = [ 1 , 2 , 4 , 5 , 6 , 7 , 8 , 10 , 1 , 5 ] >>> l . count ( 5 ) 2 >>> l . count ( 100 ) # \u4e0d\u5b58\u5728\u7684\u5143\u7d20\u8fd4\u56de0\u4e2a 0","title":"\u5143\u7d20\u8ba1\u6570"},{"location":"python/list/#_13","text":"\u672c\u6587\u8bb2\u8ff0\u4e86\u5217\u8868\u4f5c\u4e3a\u6570\u636e\u5bb9\u5668\uff0c\u7528\u6765\u5b58\u653e\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff08\u5bf9\u8c61\uff09\u3002\u91cd\u70b9\u8bb2\u8ff0\u4e86\u5217\u8868\u7684\u8bbf\u95ee\u548c\u5217\u8868\u7684\u64cd\u4f5c\u65b9\u6cd5\u3002\u9664\u6b21\u4e4b\u5916\u5217\u8868\u7684\u65b9\u6cd5\u8fd8\u6709\u51e0\u79cd\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u67e5\u770b\u3002\u5728ipython\u73af\u5883\u4e0b\u4f7f\u7528 ?? \u6216\u8005 help \u6765\u67e5\u770b\u65b9\u6cd5\u7684\u5e2e\u52a9\u6587\u6863\u3002","title":"\u603b\u7ed3"},{"location":"python/map-zip/","text":"\u5185\u7f6e\u9ad8\u9636\u51fd\u6570 \u00b6 \u5728\u53d8\u91cf\u90a3\u4e00\u8282\u6211\u4eec\u8bb2\u4e86\u53d8\u91cf\u662f\u6307\u5411\u6570\u636e\uff08\u5bf9\u8c61\uff09\u7684\u6807\u7b7e\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u53d8\u91cf\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7c7b\u578b\uff0c\u53d8\u91cf\u6307\u5411\u51fd\u6570\u80af\u5b9a\u662f\u53ef\u4ee5\u7684\u3002\u65e2\u7136\u51fd\u6570\u4e5f\u53ef\u4ee5\u770b\u6210\u53d8\u91cf\uff0c\u90a3\u4e48\u628a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u4f1a\u600e\u4e48\u6837\u5462\uff1f\u8fd9\u5c31\u662f\u672c\u8282\u7684\u5185\u5bb9\uff0c\u63a5\u6536\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u79f0\u4e3a\u9ad8\u9636\u51fd\u6570\u3002 map\u51fd\u6570 \u00b6 map\u987e\u540d\u601d\u4e49\u5c31\u662f\u6620\u5c04\u7684\u610f\u601d\uff0c\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002map\u4f1a\u628a\u8fd9\u4e2a\u51fd\u6570\u5e76\u884c\u7684\u4f5c\u7528\u5728\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\u3002\u5148\u6765\u770b\u4e2a\u4f8b\u5b50\u3002 >>> l = [ 1 , 2 , 3 , 4 ] >>> q = map ( lambda x : x ** 2 , l ) # \u8fd4\u56demap\u5bf9\u8c61 >>> list ( q ) # \u8f6c\u4e3alist [ 1 , 4 , 9 , 16 ] \u4e0a\u9762\u7684\u51fd\u6570\u662f\u5bf9\u8f93\u5165\u53c2\u6570\u8fdb\u884c\u5e73\u65b9\u64cd\u4f5c\uff0cmap\u4f1a\u5c06\u8fd9\u4e2a\u51fd\u6570\u6620\u5c04\u5230\u6bcf\u4e00\u4e2a\u53c2\u6570\u4e0a\u3002\u5982\u679c\u8f93\u5165\u53c2\u6570\u662f\u591a\u4e2a\u600e\u4e48\u529e\uff0c\u8fed\u4ee3\u5bf9\u8c61\u7684\u4e2a\u6570\u4e0e\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u4fdd\u6301\u4e00\u81f4\u3002 >>> q = map ( lambda x , y : x + y , 'ABC' , 'XYZ' ) >>> list ( q ) [ 'AX' , 'BY' , 'CZ' ] reduce\u51fd\u6570 \u00b6 reduce\u51fd\u6570\u4ee5\u524d\u662f\u5185\u7f6e\u51fd\u6570\uff0c\u5982\u679c\u4f60\u7684Python\u7248\u672c\u6ca1\u6709 reduce \u51fd\u6570\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4ece functools \u6a21\u5757\u5bfc\u5165\u3002 from functools import reduce reduce\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u9ad8\u9636\u51fd\u6570\uff0c\u6309\u7167\u67d0\u79cd\u64cd\u4f5c\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u5f52\u7eb3\u8fd0\u7b97\u3002reduce\u53ef\u4ee5\u5b9e\u73b0\u5f88\u591a\u64cd\u4f5c\uff0c\u6211\u4eec\u7b80\u5355\u770b\u51e0\u4e2a\u4f8b\u5b50\uff0c 1+2+...+100 1+2+...+100 , n! n! , 2^{3^4} 2^{3^4} \u3002\u8be6\u7ec6\u7684\u4fe1\u606f\u53c2\u8003help\u6587\u6863\u3002 >>> reduce ( lambda x , y : x + y , range ( 1 , 101 )) # \u8ba1\u7b97\u4ece1\u5230100\u7684\u548c 5050 >>> reduce ( lambda x , y : x * y , range ( 1 , 6 )) # \u8ba1\u7b975!=120 120 >>> reduce ( lambda x , y : y ** x , [ 4 , 3 , 2 ]) # 2^3^4 2417851639229258349412352 filter\u51fd\u6570 \u00b6 filter \u662f\u4e00\u4e2a\u8fc7\u6ee4\u5668\u51fd\u6570\uff0c\u63a5\u53d7\u51fd\u6570\u548c\u8fed\u4ee3\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c06\u51fd\u6570\u6620\u5c04\u5230\u6bcf\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u7684\u5143\u7d20\u4e0a\uff0c\u5982\u679c\u51fd\u6570\u8fd4\u56de\u7ed3\u679c\u4e3a True \u5219\u7ed3\u679c\u4fdd\u7559\uff0c\u5982\u679c\u4e3a False \u5c06\u4f1a\u88ab\u8fc7\u6ee4\u6389\u3002\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8f93\u51fa0-9\u768410\u4e2a\u6570\u5b57\u4e2d\u7684\u5076\u6570\u3002 >>> res = filter ( lambda x : x % 2 == 0 , range ( 10 )) >>> list ( res ) [ 0 , 2 , 4 , 6 , 8 ] lambda \u51fd\u6570\u53ea\u662f\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff0c\u65e0\u6cd5\u5b9e\u73b0\u590d\u6742\u529f\u80fd\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u590d\u6742\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3a\u5e03\u5c14\u503c\u3002\u9664\u6b64\u4e4b\u5916 filter \u53ef\u4ee5\u63a5\u53d7\u51fd\u6570\u4e3a None \uff0c\u8fd9\u5c31\u610f\u5473\u53ea\u8fd4\u56de\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u5e03\u5c14\u8fd0\u7b97\u4e3aTrue\u7684\u5143\u7d20\u3002 >>> list ( filter ( None , [ None , 1 , 0 , False , [], '' , 100 , \"abc\" ])) [ 1 , 100 , 'abc' ] >>> bool ( None ) False >>> bool ( '' ) False \u6ca1\u6709\u8fd4\u56de\u7684\u5143\u7d20\uff0c\u5176\u5e03\u5c14\u8fd0\u7b97\u7684\u7ed3\u679c\u90fd\u662f False \u3002 \u63a5\u4e0b\u6765\u518d\u8865\u5145\u4e00\u4e2a\u51fd\u6570 zip ,\u5c06\u591a\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u505a\u7ec4\u5408\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u7684\u5143\u7d20\u4e2a\u6570\u5982\u679c\u4e0d\u4e00\u81f4\uff0c\u4ee5\u6700\u77ed\u7684\u8fed\u4ee3\u5bf9\u8c61\u7684\u957f\u5ea6\u4f5c\u4e3a\u8fd4\u56de\u957f\u5ea6\u3002 >>> list ( zip ([ 1 , 2 , 3 ], 'abcd' )) [( 1 , 'a' ), ( 2 , 'b' ), ( 3 , 'c' )] \u5982\u679c\u9700\u8981\u7ec4\u5408\u591a\u4e2a\u5bf9\u8c61\uff0c\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 zip \u51fd\u6570\u5373\u53ef\u3002\u9664\u4e86\u7ec4\u5408\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u628a\u7ec4\u5408\u7684\u7ed3\u679c\u62c6\u5f00 >>> data = [( 1 , 'a' ), ( 2 , 'b' ), ( 3 , 'c' )] >>> d1 , d2 = zip ( * data ) >>> d1 ( 1 , 2 , 3 ) >>> d2 ( 'a' , 'b' , 'c' ) \u603b\u7ed3 \u00b6 \u672c\u8282\u5185\u5bb9\u4e00\u5171\u8bb2\u4e864\u4e2a\u51fd\u6570\uff0c\u5176\u4e2d3\u4e2a\u662f\u9ad8\u9636\u51fd\u6570\uff1a map \u6620\u5c04\u51fd\u6570\uff0c\u5c06\u51fd\u6570\u6620\u5c04\u5230\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\uff0c\u8fd4\u56de\u6620\u5c04\u51fd\u6570\u4f5c\u7528\u7684\u7ed3\u679c\uff0c\u8fd4\u56demap\u5bf9\u8c61\u3002 reduce \u5f52\u7eb3\u51fd\u6570\uff0c\u6709\u7d2f\u79ef\u5faa\u73af\u7684\u6548\u679c\u3002\u5c06\u4e0a\u4e00\u6b21\u64cd\u4f5c\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ee7\u7eed\u4f20\u5165\u51fd\u6570\u4e2d\u3002 filter \u8fc7\u6ee4\u5668\u51fd\u6570\uff0c\u5c06\u51fd\u6570\u4f9d\u6b21\u4f5c\u7528\u5728\u8fed\u4ee3\u5bf9\u8c61\u4e0a\uff0c\u8fd4\u56deTrue\u7684\u5143\u7d20\u7ed3\u679c\u3002 zip \u6570\u636e\u7ec4\u5408\u51fd\u6570\uff0c\u5c06\u591a\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u7ec4\u5408\u3002","title":"\u5185\u7f6e\u9ad8\u9636\u51fd\u6570"},{"location":"python/map-zip/#_1","text":"\u5728\u53d8\u91cf\u90a3\u4e00\u8282\u6211\u4eec\u8bb2\u4e86\u53d8\u91cf\u662f\u6307\u5411\u6570\u636e\uff08\u5bf9\u8c61\uff09\u7684\u6807\u7b7e\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u53d8\u91cf\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7c7b\u578b\uff0c\u53d8\u91cf\u6307\u5411\u51fd\u6570\u80af\u5b9a\u662f\u53ef\u4ee5\u7684\u3002\u65e2\u7136\u51fd\u6570\u4e5f\u53ef\u4ee5\u770b\u6210\u53d8\u91cf\uff0c\u90a3\u4e48\u628a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u4f1a\u600e\u4e48\u6837\u5462\uff1f\u8fd9\u5c31\u662f\u672c\u8282\u7684\u5185\u5bb9\uff0c\u63a5\u6536\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u79f0\u4e3a\u9ad8\u9636\u51fd\u6570\u3002","title":"\u5185\u7f6e\u9ad8\u9636\u51fd\u6570"},{"location":"python/map-zip/#map","text":"map\u987e\u540d\u601d\u4e49\u5c31\u662f\u6620\u5c04\u7684\u610f\u601d\uff0c\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002map\u4f1a\u628a\u8fd9\u4e2a\u51fd\u6570\u5e76\u884c\u7684\u4f5c\u7528\u5728\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\u3002\u5148\u6765\u770b\u4e2a\u4f8b\u5b50\u3002 >>> l = [ 1 , 2 , 3 , 4 ] >>> q = map ( lambda x : x ** 2 , l ) # \u8fd4\u56demap\u5bf9\u8c61 >>> list ( q ) # \u8f6c\u4e3alist [ 1 , 4 , 9 , 16 ] \u4e0a\u9762\u7684\u51fd\u6570\u662f\u5bf9\u8f93\u5165\u53c2\u6570\u8fdb\u884c\u5e73\u65b9\u64cd\u4f5c\uff0cmap\u4f1a\u5c06\u8fd9\u4e2a\u51fd\u6570\u6620\u5c04\u5230\u6bcf\u4e00\u4e2a\u53c2\u6570\u4e0a\u3002\u5982\u679c\u8f93\u5165\u53c2\u6570\u662f\u591a\u4e2a\u600e\u4e48\u529e\uff0c\u8fed\u4ee3\u5bf9\u8c61\u7684\u4e2a\u6570\u4e0e\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u4fdd\u6301\u4e00\u81f4\u3002 >>> q = map ( lambda x , y : x + y , 'ABC' , 'XYZ' ) >>> list ( q ) [ 'AX' , 'BY' , 'CZ' ]","title":"map\u51fd\u6570"},{"location":"python/map-zip/#reduce","text":"reduce\u51fd\u6570\u4ee5\u524d\u662f\u5185\u7f6e\u51fd\u6570\uff0c\u5982\u679c\u4f60\u7684Python\u7248\u672c\u6ca1\u6709 reduce \u51fd\u6570\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4ece functools \u6a21\u5757\u5bfc\u5165\u3002 from functools import reduce reduce\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u9ad8\u9636\u51fd\u6570\uff0c\u6309\u7167\u67d0\u79cd\u64cd\u4f5c\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u5f52\u7eb3\u8fd0\u7b97\u3002reduce\u53ef\u4ee5\u5b9e\u73b0\u5f88\u591a\u64cd\u4f5c\uff0c\u6211\u4eec\u7b80\u5355\u770b\u51e0\u4e2a\u4f8b\u5b50\uff0c 1+2+...+100 1+2+...+100 , n! n! , 2^{3^4} 2^{3^4} \u3002\u8be6\u7ec6\u7684\u4fe1\u606f\u53c2\u8003help\u6587\u6863\u3002 >>> reduce ( lambda x , y : x + y , range ( 1 , 101 )) # \u8ba1\u7b97\u4ece1\u5230100\u7684\u548c 5050 >>> reduce ( lambda x , y : x * y , range ( 1 , 6 )) # \u8ba1\u7b975!=120 120 >>> reduce ( lambda x , y : y ** x , [ 4 , 3 , 2 ]) # 2^3^4 2417851639229258349412352","title":"reduce\u51fd\u6570"},{"location":"python/map-zip/#filter","text":"filter \u662f\u4e00\u4e2a\u8fc7\u6ee4\u5668\u51fd\u6570\uff0c\u63a5\u53d7\u51fd\u6570\u548c\u8fed\u4ee3\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c06\u51fd\u6570\u6620\u5c04\u5230\u6bcf\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u7684\u5143\u7d20\u4e0a\uff0c\u5982\u679c\u51fd\u6570\u8fd4\u56de\u7ed3\u679c\u4e3a True \u5219\u7ed3\u679c\u4fdd\u7559\uff0c\u5982\u679c\u4e3a False \u5c06\u4f1a\u88ab\u8fc7\u6ee4\u6389\u3002\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8f93\u51fa0-9\u768410\u4e2a\u6570\u5b57\u4e2d\u7684\u5076\u6570\u3002 >>> res = filter ( lambda x : x % 2 == 0 , range ( 10 )) >>> list ( res ) [ 0 , 2 , 4 , 6 , 8 ] lambda \u51fd\u6570\u53ea\u662f\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff0c\u65e0\u6cd5\u5b9e\u73b0\u590d\u6742\u529f\u80fd\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u590d\u6742\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3a\u5e03\u5c14\u503c\u3002\u9664\u6b64\u4e4b\u5916 filter \u53ef\u4ee5\u63a5\u53d7\u51fd\u6570\u4e3a None \uff0c\u8fd9\u5c31\u610f\u5473\u53ea\u8fd4\u56de\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u5e03\u5c14\u8fd0\u7b97\u4e3aTrue\u7684\u5143\u7d20\u3002 >>> list ( filter ( None , [ None , 1 , 0 , False , [], '' , 100 , \"abc\" ])) [ 1 , 100 , 'abc' ] >>> bool ( None ) False >>> bool ( '' ) False \u6ca1\u6709\u8fd4\u56de\u7684\u5143\u7d20\uff0c\u5176\u5e03\u5c14\u8fd0\u7b97\u7684\u7ed3\u679c\u90fd\u662f False \u3002 \u63a5\u4e0b\u6765\u518d\u8865\u5145\u4e00\u4e2a\u51fd\u6570 zip ,\u5c06\u591a\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u505a\u7ec4\u5408\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u7684\u5143\u7d20\u4e2a\u6570\u5982\u679c\u4e0d\u4e00\u81f4\uff0c\u4ee5\u6700\u77ed\u7684\u8fed\u4ee3\u5bf9\u8c61\u7684\u957f\u5ea6\u4f5c\u4e3a\u8fd4\u56de\u957f\u5ea6\u3002 >>> list ( zip ([ 1 , 2 , 3 ], 'abcd' )) [( 1 , 'a' ), ( 2 , 'b' ), ( 3 , 'c' )] \u5982\u679c\u9700\u8981\u7ec4\u5408\u591a\u4e2a\u5bf9\u8c61\uff0c\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 zip \u51fd\u6570\u5373\u53ef\u3002\u9664\u4e86\u7ec4\u5408\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u628a\u7ec4\u5408\u7684\u7ed3\u679c\u62c6\u5f00 >>> data = [( 1 , 'a' ), ( 2 , 'b' ), ( 3 , 'c' )] >>> d1 , d2 = zip ( * data ) >>> d1 ( 1 , 2 , 3 ) >>> d2 ( 'a' , 'b' , 'c' )","title":"filter\u51fd\u6570"},{"location":"python/map-zip/#_2","text":"\u672c\u8282\u5185\u5bb9\u4e00\u5171\u8bb2\u4e864\u4e2a\u51fd\u6570\uff0c\u5176\u4e2d3\u4e2a\u662f\u9ad8\u9636\u51fd\u6570\uff1a map \u6620\u5c04\u51fd\u6570\uff0c\u5c06\u51fd\u6570\u6620\u5c04\u5230\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e0a\uff0c\u8fd4\u56de\u6620\u5c04\u51fd\u6570\u4f5c\u7528\u7684\u7ed3\u679c\uff0c\u8fd4\u56demap\u5bf9\u8c61\u3002 reduce \u5f52\u7eb3\u51fd\u6570\uff0c\u6709\u7d2f\u79ef\u5faa\u73af\u7684\u6548\u679c\u3002\u5c06\u4e0a\u4e00\u6b21\u64cd\u4f5c\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ee7\u7eed\u4f20\u5165\u51fd\u6570\u4e2d\u3002 filter \u8fc7\u6ee4\u5668\u51fd\u6570\uff0c\u5c06\u51fd\u6570\u4f9d\u6b21\u4f5c\u7528\u5728\u8fed\u4ee3\u5bf9\u8c61\u4e0a\uff0c\u8fd4\u56deTrue\u7684\u5143\u7d20\u7ed3\u679c\u3002 zip \u6570\u636e\u7ec4\u5408\u51fd\u6570\uff0c\u5c06\u591a\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u7ec4\u5408\u3002","title":"\u603b\u7ed3"},{"location":"python/tuple/","text":"\u5143\u7ec4 \u00b6 \u76f8\u6bd4\u4e8e\u5217\u8868\u548c\u5b57\u5178\u8fd9\u4e24\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u5143\u7ec4\u7684\u4f7f\u7528\u573a\u666f\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u770b\u5b8c\u672c\u8282\u5185\u5bb9\u4f60\u4f1a\u660e\u767d\u5143\u7ec4\u4e0e\u5217\u8868\u7684\u533a\u522b\u3002 \u5143\u7ec4\u7684\u521b\u5efa \u00b6 \u5143\u7ec4\u4f7f\u7528\u5c0f\u62ec\u53f7\u5305\u88f9\u6570\u636e\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u9700\u8981\u7528\u9017\u53f7 , \u7ed3\u5c3e\u3002 >>> t1 = ( 1 , 2 , 9 , 'a' , None ) >>> t2 = tuple (( 1 , 2 , 9 , 'a' , None )) # \u4e24\u79cd\u521b\u5efa\u65b9\u5f0f\u90fd\u53ef\u4ee5 >>> t2 ( 1 , 2 , 9 , 'a' , None ) >>> t3 = ( 'Black' ,) # \u5355\u4e2a\u5143\u7d20\u4ee5\u9017\u53f7\u7ed3\u5c3e \u5143\u7ec4\u7684\u8bbf\u95ee\u4e0e\u904d\u5386 \u00b6 \u5143\u7ec4\u7684\u8bbf\u95ee\u4e0e\u5217\u8868\u4e00\u81f4\uff0c\u652f\u6301\u5355\u4e2a\u6570\u5b57\uff0c\u4e24\u4e2a\u548c\u4e09\u4e2a\u6570\u5b57\u7684\u8bbf\u95ee\u65b9\u5f0f\u3002\u904d\u5386\u4e5f\u4e0e\u5217\u8868\u5b8c\u6210\u4e00\u81f4\u3002 for item in t2 : print ( item ) \u90a3\u4e48\u5143\u7ec4\u4e0e\u5217\u8868\u7684\u533a\u522b\u5728\u54ea\u91cc\u5462\uff1f\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u5143\u7ec4\u521b\u5efa\u4ee5\u540e\u4e0d\u80fd\u4fee\u6539\uff0c\u53ea\u80fd\u8bbf\u95ee\u548c\u904d\u5386\u64cd\u4f5c\uff0c\u4ece\u800c\u5217\u8868\u7684\u589e\u5220\u6539\u64cd\u4f5c\u90fd\u4e0d\u9002\u4e0e\u5143\u7ec4\u3002 >>> t1 = ( 1 , 2 , 9 , 'a' , None ) >>> t1 [ 0 ] = 100 exec ( code_obj , self . user_global_ns , self . user_ns ) File \"<ipython-input-8-3c8e12ad4afd>\" , line 1 , in < module > t1 [ 0 ] = 100 TypeError : 'tuple' object does not support item assignment >>> t1 . count ( 1 ) 1 >>> t1 . count ( None ) 1 >>> t1 . index ( 9 ) 2 >>> t1 . index ( 100 ) # \u4e0d\u5b58\u5728\u7684\u5143\u7d20\u6216\u629b\u51fa\u5f02\u5e38 \u8865\u5145 Python\u5728\u67e5\u8be2\u6570\u636e\u5e93\u65f6\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u662ftuple\u5143\u7ec4\u3002 \u603b\u7ed3 \u00b6 \u5143\u7ec4\u6570\u636e\u4e0e\u5217\u8868\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\u5143\u7ec4\u521b\u5efa\u4ee5\u540e\u4e0d\u80fd\u4fee\u6539\uff0c\u4ee5\u81f3\u4e8e\u5143\u7ec4\u7684\u64cd\u4f5c\u65b9\u6cd5\u975e\u5e38\u5c11\u3002\u601d\u8003\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5143\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u5305\u542b\u5217\u8868\uff0c\u5217\u8868\u662f\u53ef\u4fee\u6539\u7684\u3002\u662f\u4e0d\u662f\u8bf4\u5143\u7ec4\u5c31\u5b9e\u73b0\u4e86\u4fee\u6539\u5462\uff1f\u8bfb\u8005\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002 >>> l = ([ 1 , 2 ], 3 , None ) >>> l [ 0 ] . append ( True ) >>> l ([ 1 , 2 , True ], 3 , None )","title":"\u5143\u7ec4"},{"location":"python/tuple/#_1","text":"\u76f8\u6bd4\u4e8e\u5217\u8868\u548c\u5b57\u5178\u8fd9\u4e24\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u5143\u7ec4\u7684\u4f7f\u7528\u573a\u666f\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u770b\u5b8c\u672c\u8282\u5185\u5bb9\u4f60\u4f1a\u660e\u767d\u5143\u7ec4\u4e0e\u5217\u8868\u7684\u533a\u522b\u3002","title":"\u5143\u7ec4"},{"location":"python/tuple/#_2","text":"\u5143\u7ec4\u4f7f\u7528\u5c0f\u62ec\u53f7\u5305\u88f9\u6570\u636e\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u9700\u8981\u7528\u9017\u53f7 , \u7ed3\u5c3e\u3002 >>> t1 = ( 1 , 2 , 9 , 'a' , None ) >>> t2 = tuple (( 1 , 2 , 9 , 'a' , None )) # \u4e24\u79cd\u521b\u5efa\u65b9\u5f0f\u90fd\u53ef\u4ee5 >>> t2 ( 1 , 2 , 9 , 'a' , None ) >>> t3 = ( 'Black' ,) # \u5355\u4e2a\u5143\u7d20\u4ee5\u9017\u53f7\u7ed3\u5c3e","title":"\u5143\u7ec4\u7684\u521b\u5efa"},{"location":"python/tuple/#_3","text":"\u5143\u7ec4\u7684\u8bbf\u95ee\u4e0e\u5217\u8868\u4e00\u81f4\uff0c\u652f\u6301\u5355\u4e2a\u6570\u5b57\uff0c\u4e24\u4e2a\u548c\u4e09\u4e2a\u6570\u5b57\u7684\u8bbf\u95ee\u65b9\u5f0f\u3002\u904d\u5386\u4e5f\u4e0e\u5217\u8868\u5b8c\u6210\u4e00\u81f4\u3002 for item in t2 : print ( item ) \u90a3\u4e48\u5143\u7ec4\u4e0e\u5217\u8868\u7684\u533a\u522b\u5728\u54ea\u91cc\u5462\uff1f\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u5143\u7ec4\u521b\u5efa\u4ee5\u540e\u4e0d\u80fd\u4fee\u6539\uff0c\u53ea\u80fd\u8bbf\u95ee\u548c\u904d\u5386\u64cd\u4f5c\uff0c\u4ece\u800c\u5217\u8868\u7684\u589e\u5220\u6539\u64cd\u4f5c\u90fd\u4e0d\u9002\u4e0e\u5143\u7ec4\u3002 >>> t1 = ( 1 , 2 , 9 , 'a' , None ) >>> t1 [ 0 ] = 100 exec ( code_obj , self . user_global_ns , self . user_ns ) File \"<ipython-input-8-3c8e12ad4afd>\" , line 1 , in < module > t1 [ 0 ] = 100 TypeError : 'tuple' object does not support item assignment >>> t1 . count ( 1 ) 1 >>> t1 . count ( None ) 1 >>> t1 . index ( 9 ) 2 >>> t1 . index ( 100 ) # \u4e0d\u5b58\u5728\u7684\u5143\u7d20\u6216\u629b\u51fa\u5f02\u5e38 \u8865\u5145 Python\u5728\u67e5\u8be2\u6570\u636e\u5e93\u65f6\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u662ftuple\u5143\u7ec4\u3002","title":"\u5143\u7ec4\u7684\u8bbf\u95ee\u4e0e\u904d\u5386"},{"location":"python/tuple/#_4","text":"\u5143\u7ec4\u6570\u636e\u4e0e\u5217\u8868\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\u5143\u7ec4\u521b\u5efa\u4ee5\u540e\u4e0d\u80fd\u4fee\u6539\uff0c\u4ee5\u81f3\u4e8e\u5143\u7ec4\u7684\u64cd\u4f5c\u65b9\u6cd5\u975e\u5e38\u5c11\u3002\u601d\u8003\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5143\u7ec4\u91cc\u9762\u7684\u5143\u7d20\u5305\u542b\u5217\u8868\uff0c\u5217\u8868\u662f\u53ef\u4fee\u6539\u7684\u3002\u662f\u4e0d\u662f\u8bf4\u5143\u7ec4\u5c31\u5b9e\u73b0\u4e86\u4fee\u6539\u5462\uff1f\u8bfb\u8005\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002 >>> l = ([ 1 , 2 ], 3 , None ) >>> l [ 0 ] . append ( True ) >>> l ([ 1 , 2 , True ], 3 , None )","title":"\u603b\u7ed3"},{"location":"python/type-variable/","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 \u4e0a\u4e00\u8282\u6211\u4eec\u521d\u6b65\u4ecb\u7ecd\u4e86\u53d8\u91cf\uff0c\u53d8\u91cf\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7c7b\u578b\u3002\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u628a\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u6216\u8005\u5bf9\u8c61\u8d4b\u503c\u7ed9\u53d8\u91cf\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u6709\u54ea\u4e9b\u6570\u636e\u7c7b\u578b\u3002 \u6574\u578b\u6d6e\u70b9\u578b \u00b6 \u8fd9\u4e2a\u65e0\u9700\u591a\u8bf4\uff0c\u5c31\u662f\u6574\u6570\u548c\u5c0f\u6570\u3002\u4e0d\u8fc7Python\u4f7f\u7528\u6574\u6570\u548c\u5c0f\u6570\u4e0d\u7528\u533a\u5206 \u65e0\u7b26\u53f7\u578b \u8fd8\u662f\u957f\u6574\u6570\u7c7b\u578b\u3002\u8d4b\u503c\u7684\u65f6\u5019\u89e3\u91ca\u5668\u53ef\u4ee5\u81ea\u52a8\u5224\u65ad\u3002\u6bd4\u5982\u6211\u4eec\u8d4b\u503c\u4e00\u4e2a\u8f83\u5927\u7684\u6570\uff0c\u4e0d\u7528\u62c5\u5fc3\u5185\u5b58\u6ea2\u51fa\u3002 a = 426172329382983081293892893887437739 print ( a ) # \u5b8c\u5168\u6ca1\u6709\u95ee\u9898 \u5c0f\u6570\u4e5f\u662f\u540c\u6837\u64cd\u4f5c\uff0c\u9664\u4e86\u5927\u6570\u8ba1\u7b97\u4ee5\u5916\uff0c\u6574\u578b\u3001\u6d6e\u70b9\u578b\u6570\u636e\u662f\u53ef\u4ee5\u6ee1\u8db3\u6b63\u5e38\u9700\u6c42\u7684\u3002 \u6ce8\u610f \u6211\u627e\u4e86\u534a\u5929\u4e5f\u6ca1\u770b\u5230Python\u652f\u6301\u7684\u6700\u5927\u6574\u578b\u6570\u591a\u5c11?\u53c8\u77e5\u9053\u7684\u8bfb\u8005\u53ef\u4ee5\u544a\u8bc9\u6211 1 \u5b57\u7b26\u578b \u00b6 \u5b57\u7b26\u578b\u6570\u636e\u975e\u5e38\u7b80\u5355\uff0c\u7528\u82f1\u6587\u5f15\u53f7\u5305\u88f9\u7684\u6570\u636e\uff0c\u5f15\u53f7\u53ef\u4ee5\u662f\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u4e09\u5f15\u53f7\u3002 a = 'hello Python' a = \"hello Python\" a = \"\"\"hello Python\"\"\" \u5982\u679c\u5f15\u53f7\u91cc\u5305\u542b\u5f15\u53f7\u600e\u4e48\u529e\uff1f\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\u5305\u88f9\u53cc\u5f15\u53f7\uff0c\u6216\u8005\u53cc\u5f15\u53f7\u5305\u88f9\u5355\u5f15\u53f7\u3002\u6570\u636e\u4e2d\u540c\u65f6\u6709\u5355\u5f15\u53f7\uff0c\u53cc\u5f15\u53f7\u90a3\u5c31\u7528\u4e09\u5f15\u53f7\u3002 a = \"\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929'\u642c\u7816'\" a = '\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929\"\u642c\u7816\"' a = \"\"\"\u8001\u677f\u8bf4\uff1a\u201c\u4f60\u4eec\u8981'\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929\"\u642c\u7816\"'\u201d \"\"\" \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u91c7\u7528 \\ \u8fdb\u884c\u8f6c\u4e49\u3002 a = \"\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929 \\\" \u642c\u7816 \\\" \" a = '\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929 \\' \u642c\u7816 \\' ' \u5982\u679c\u4f60\u5728\u4f7f\u7528\u5b57\u7b26\u4e32\u65f6\uff0c\u5f15\u53f7\u51fa\u9519\uff0cIDE\u4e5f\u4f1a\u63d0\u9192\u4f60\uff0c\u770b\u7740\u989c\u8272\u4e0d\u5bf9\uff0c\u4f60\u5c31\u77e5\u9053\u8fd9\u4e48\u7528\u6709\u95ee\u9898\u3002 \u5e03\u5c14\u7c7b\u578b \u00b6 \u5e03\u5c14\u7c7b\u578b\u53ea\u6709\u4e24\u79cd\uff0c True \u548c False \u3002\u5176\u4e2d True \u4e3a\u771f\uff0c False \u4e3a\u5047\u3002\u505a\u4e3a\u5224\u65ad\u7684\u6761\u4ef6\u4f7f\u7528\u975e\u5e38\u591a\u3002 None\u6570\u636e\u7c7b\u578b \u00b6 None \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u51c6\u786e\u7684\u8bf4\u662f NoneType \u7c7b\u578b\u3002\u901a\u5e38\u4f5c\u4e3a\u51fd\u6570\u6216\u8005\u8fd0\u7b97\u7684\u8fd4\u56de\u7ed3\u679c\u3002 \u67e5\u770b\u6570\u636e\u7c7b\u578b \u00b6 \u4f7f\u7528 type \u51fd\u6570\u53ef\u4ee5\u67e5\u770b\u6570\u636e\u7684\u7c7b\u578b\u3002 >>> a = 100 >>> type ( a ) < class ' int '> >>> b = \"\u6211\u662f\u8c01\" >>> type ( b ) < class ' str '> >>> type ( None ) < class ' NoneType '> >>> type ( 1.23456 ) < class ' float '> \u4e2a\u4eba\u90ae\u7bb1\u90ae\u7bb1\uff1a cj194832@163.com \u21a9","title":"\u53d8\u91cf\u7684\u7c7b\u578b"},{"location":"python/type-variable/#_1","text":"\u4e0a\u4e00\u8282\u6211\u4eec\u521d\u6b65\u4ecb\u7ecd\u4e86\u53d8\u91cf\uff0c\u53d8\u91cf\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7c7b\u578b\u3002\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u628a\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u6216\u8005\u5bf9\u8c61\u8d4b\u503c\u7ed9\u53d8\u91cf\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u6709\u54ea\u4e9b\u6570\u636e\u7c7b\u578b\u3002","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"python/type-variable/#_2","text":"\u8fd9\u4e2a\u65e0\u9700\u591a\u8bf4\uff0c\u5c31\u662f\u6574\u6570\u548c\u5c0f\u6570\u3002\u4e0d\u8fc7Python\u4f7f\u7528\u6574\u6570\u548c\u5c0f\u6570\u4e0d\u7528\u533a\u5206 \u65e0\u7b26\u53f7\u578b \u8fd8\u662f\u957f\u6574\u6570\u7c7b\u578b\u3002\u8d4b\u503c\u7684\u65f6\u5019\u89e3\u91ca\u5668\u53ef\u4ee5\u81ea\u52a8\u5224\u65ad\u3002\u6bd4\u5982\u6211\u4eec\u8d4b\u503c\u4e00\u4e2a\u8f83\u5927\u7684\u6570\uff0c\u4e0d\u7528\u62c5\u5fc3\u5185\u5b58\u6ea2\u51fa\u3002 a = 426172329382983081293892893887437739 print ( a ) # \u5b8c\u5168\u6ca1\u6709\u95ee\u9898 \u5c0f\u6570\u4e5f\u662f\u540c\u6837\u64cd\u4f5c\uff0c\u9664\u4e86\u5927\u6570\u8ba1\u7b97\u4ee5\u5916\uff0c\u6574\u578b\u3001\u6d6e\u70b9\u578b\u6570\u636e\u662f\u53ef\u4ee5\u6ee1\u8db3\u6b63\u5e38\u9700\u6c42\u7684\u3002 \u6ce8\u610f \u6211\u627e\u4e86\u534a\u5929\u4e5f\u6ca1\u770b\u5230Python\u652f\u6301\u7684\u6700\u5927\u6574\u578b\u6570\u591a\u5c11?\u53c8\u77e5\u9053\u7684\u8bfb\u8005\u53ef\u4ee5\u544a\u8bc9\u6211 1","title":"\u6574\u578b\u6d6e\u70b9\u578b"},{"location":"python/type-variable/#_3","text":"\u5b57\u7b26\u578b\u6570\u636e\u975e\u5e38\u7b80\u5355\uff0c\u7528\u82f1\u6587\u5f15\u53f7\u5305\u88f9\u7684\u6570\u636e\uff0c\u5f15\u53f7\u53ef\u4ee5\u662f\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u4e09\u5f15\u53f7\u3002 a = 'hello Python' a = \"hello Python\" a = \"\"\"hello Python\"\"\" \u5982\u679c\u5f15\u53f7\u91cc\u5305\u542b\u5f15\u53f7\u600e\u4e48\u529e\uff1f\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\u5305\u88f9\u53cc\u5f15\u53f7\uff0c\u6216\u8005\u53cc\u5f15\u53f7\u5305\u88f9\u5355\u5f15\u53f7\u3002\u6570\u636e\u4e2d\u540c\u65f6\u6709\u5355\u5f15\u53f7\uff0c\u53cc\u5f15\u53f7\u90a3\u5c31\u7528\u4e09\u5f15\u53f7\u3002 a = \"\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929'\u642c\u7816'\" a = '\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929\"\u642c\u7816\"' a = \"\"\"\u8001\u677f\u8bf4\uff1a\u201c\u4f60\u4eec\u8981'\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929\"\u642c\u7816\"'\u201d \"\"\" \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u91c7\u7528 \\ \u8fdb\u884c\u8f6c\u4e49\u3002 a = \"\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929 \\\" \u642c\u7816 \\\" \" a = '\u597d\u597d\u5b66\u7f16\u7a0b\uff0c\u5929\u5929 \\' \u642c\u7816 \\' ' \u5982\u679c\u4f60\u5728\u4f7f\u7528\u5b57\u7b26\u4e32\u65f6\uff0c\u5f15\u53f7\u51fa\u9519\uff0cIDE\u4e5f\u4f1a\u63d0\u9192\u4f60\uff0c\u770b\u7740\u989c\u8272\u4e0d\u5bf9\uff0c\u4f60\u5c31\u77e5\u9053\u8fd9\u4e48\u7528\u6709\u95ee\u9898\u3002","title":"\u5b57\u7b26\u578b"},{"location":"python/type-variable/#_4","text":"\u5e03\u5c14\u7c7b\u578b\u53ea\u6709\u4e24\u79cd\uff0c True \u548c False \u3002\u5176\u4e2d True \u4e3a\u771f\uff0c False \u4e3a\u5047\u3002\u505a\u4e3a\u5224\u65ad\u7684\u6761\u4ef6\u4f7f\u7528\u975e\u5e38\u591a\u3002","title":"\u5e03\u5c14\u7c7b\u578b"},{"location":"python/type-variable/#none","text":"None \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u51c6\u786e\u7684\u8bf4\u662f NoneType \u7c7b\u578b\u3002\u901a\u5e38\u4f5c\u4e3a\u51fd\u6570\u6216\u8005\u8fd0\u7b97\u7684\u8fd4\u56de\u7ed3\u679c\u3002","title":"None\u6570\u636e\u7c7b\u578b"},{"location":"python/type-variable/#_5","text":"\u4f7f\u7528 type \u51fd\u6570\u53ef\u4ee5\u67e5\u770b\u6570\u636e\u7684\u7c7b\u578b\u3002 >>> a = 100 >>> type ( a ) < class ' int '> >>> b = \"\u6211\u662f\u8c01\" >>> type ( b ) < class ' str '> >>> type ( None ) < class ' NoneType '> >>> type ( 1.23456 ) < class ' float '> \u4e2a\u4eba\u90ae\u7bb1\u90ae\u7bb1\uff1a cj194832@163.com \u21a9","title":"\u67e5\u770b\u6570\u636e\u7c7b\u578b"},{"location":"python/typing/","text":"Python\u7c7b\u578b\u6807\u6ce8 \u00b6 \u673a\u5668\u5b66\u4e60\u8d8a\u6765\u8d8a\u706b\uff0c\u5927\u91cf\u7684\u673a\u5668\u5b66\u4e60\u5305\u90fd\u652f\u6301Python\uff0c\u5bfc\u81f4\u4e86Python\u8fd1\u51e0\u5e74\u975e\u5e38\u706b\u7206\uff0c\u5165\u624b\u95e8\u69db\u4f4e\uff0c\u7f16\u7a0b\u7b80\u5355\uff0c\u6982\u5ff5\u975e\u5e38\u5c11\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u65b0\u624b\u5c0f\u767d\u52a0\u5165\u5230Python\u7f16\u7a0b\u3002 Python\u867d\u7136\u7b80\u5355\uff0c\u4f46\u4e5f\u5e26\u6765\u5f88\u591a\u95ee\u9898\u3002\u5c24\u5176\u662f\u5f31\u7c7b\u578b\u4e00\u76f4\u88ab\u8bdf\u75c5\uff0c\u5e73\u65f6\u5728\u5199\u4ee3\u7801\u65f6\uff0c\u7ecf\u5e38\u4e5f\u4f1a\u6a21\u7cca\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u5bfc\u81f4debug\u96be\u5ea6\u589e\u52a0\u3002 \u81ea\u4ecePython3.5\u4ee5\u6765\uff0c\u53d1\u5e03\u4e86 typing \u5305\uff0c\u63a8\u8350\u6807\u6ce8\u7c7b\u578b\uff0c\u5e76\u4e14IDE\u4f1a\u68c0\u67e5\u7c7b\u578b\uff0c\u8ba9Python\u770b\u8d77\u6765\u6709\u70b9 \u9759\u6001\u8bed\u8a00 \u7684\u611f\u89c9\u4e86\u3002\u672c\u6587\u4e3b\u8981\u53c2\u8003Python3.7.5\u7684 \u5b98\u65b9\u6587\u6863 1 \u5e38\u7528\u7684\u7c7b\u578b \u00b6 \u5e38\u7528\u7684\u51e0\u79cd\u7c7b\u578b\uff0c\u5982 int , float , str , List , Tuple , Dict \u3002\u63a5\u4e0b\u6765\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a \u9996\u5148\u5fc5\u987b\u4ece typing \u4e2d\u5bfc\u5165\u7c7b\u578b from typing import List , Dict , Tuple def greeting ( name : str ) -> str : return 'Hello ' + name print ( greeting ( 188 )) \u5982\u679c\u4f60\u8f93\u5165\u7684\u53c2\u6570\u4e0d\u662fstr\uff0cIDE\u5c31\u4f1a\u63d0\u793a\u3002 \u5982\u679c\u4f20\u5165 List , Tuple , Dict \uff0c\u9700\u8981\u7528 [] \u6765\u6307\u5b9a\u5185\u90e8\u57fa\u7840\u7c7b\u578b. def do_nothing ( a : List [ int ], b : Tuple [ int , str ], c : Dict [ str , int ]) -> Dict [ str , str ]: return { 'key' : 'value' } # \u8c03\u7528 do_nothing ([ 19 ], ( 14 , 'some' ), { \"ha\" : 10 }) \u9664\u6b64\u4e4b\u5916\u57fa\u7840\u7c7b\u578b\u662f\u53ef\u4ee5\u76f8\u4e92\u5d4c\u5957\u7684\uff0c\u6bd4\u5982\u5b57\u5178\u7684\u503c\u662f\u5217\u8868\uff0c\u5217\u8868\u4e2d\u5b58\u653e\u5143\u7ec4\uff0c\u4e8e\u662f\u53ef\u4ee5\u8fd9\u6837\u6807\u6ce8\uff1a def do_nothing ( a : Dict [ str , List [ Tuple [ int , int , int ]]], ): pass \u6bd4\u8f83\u590d\u6742\u7684\u7c7b\u578b\u6807\u6ce8\u7528\u8d77\u6765\u5e76\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u6307\u5b9a\u522b\u540d\u3002\u6bd4\u5982\u8ba1\u7b97\u4e00\u4e2a\u70b9\u4e0e\u591a\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c List \u4e2d\u5b58\u653e\u7684 Tuple \u662f\u70b9 Point \uff0c\u5750\u6807\u5c31\u662f\u4e09\u7ef4\u7684\u6d6e\u70b9\u6570\uff0c\u4e8e\u662f\u53ef\u4ee5\u5b9a\u4e49\u522b\u540d Point = Tuple [ float , float , float ] def compute_distance ( p1 : Point , points : List [ Point ]): pass \u591a\u79cd\u7c7b\u578b \u00b6 \u4e0d\u662f\u591a\u4e2a\u53c2\u6570\uff0c\u800c\u662f\u591a\u7c7b\u578b\uff0c\u662f\u8f93\u5165\u53c2\u6570\u53ef\u80fd\u5b58\u5728\u591a\u79cd\u7c7b\u578b\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728Java\u4e2d\u591a\u6001\u6765\u89e3\u51b3\u3002\u800cPython\u672c\u8eab\u662f\u5f31\u7c7b\u578b\uff0c\u8f93\u5165\u53c2\u6570\u6ca1\u6709\u5f3a\u5236\u89c4\u5b9a\uff0c\u8fd9\u4e2a\u65f6\u5019\u8be5\u600e\u4e48\u529e\uff1f\u6bd4\u5982\u4f20\u5165\u53c2\u6570\u53ef\u80fd\u4e3a int , str , float . typing \u5305\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u529e\u6cd5\uff0c\u53ef\u4ee5\u7528 Union \u6765\u5b9a\u4e49: Union [ int , str , float ] \u8f93\u5165\u53c2\u6570\u5fc5\u987b\u662f\u5fc5\u987b\u662f int , str , float .\u5176\u4e2d\u4e4b\u4e00\u3002\u5982\u679c\u4e0d\u786e\u5b9a\u6570\u636e\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u6807\u793a\u4e3a Any \u7c7b\u578b\uff0c\u8868\u793a\u4efb\u610f\u7c7b\u578b\u3002\u5982\u679c\u8f93\u5165\u53c2\u6570\u53ef\u80fd\u662f None \u503c\uff0c\u4e5f\u53ef\u4ee5\u7528 Union \u5b9a\u4e49: Union [ str , None ] # \u6216\u8005 Optional [ str ] \u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570 \u00b6 \u5982\u679c\u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u5982\u4f55\u6807\u8bb0\u7c7b\u578b\u5462\uff1f\u5176\u5b9e\u4e5f\u4e0d\u590d\u6742\uff0c\u51fd\u6570\u662fcallable\u7684\u7c7b\u578b\uff0c\u540c\u6837\u6307\u5b9a\u4f20\u5165\u548c\u4f20\u51fa\u53c2\u6570\u5373\u53ef\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u6c42\u548c\u7684\u51fd\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u51fd\u6570\u3002 add_all \u53ea\u662f\u628a\u6240\u6709\u7684\u5143\u7d20\u76f8\u52a0\uff0c\u81f3\u4e8e\u5bf9\u6bcf\u4e2a\u5143\u7d20\u505a\u4ec0\u4e48\u64cd\u4f5c\uff0c\u53d6\u51b3\u4e8e\u4f20\u5165\u7684\u51fd\u6570\u4e86\u3002 def add_all ( f : Callable [[ int ], int ], params : List [ int ]): return sum ( map ( f , params )) print ( add_all ( lambda x : x ** 2 , list ( range ( 1 , 10 )))) \u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u6709\u8f93\u5165\u548c\u8f93\u51fa\u503c\u3002\u5b9a\u4e49\u8f83\u4e3a\u9ebb\u70e6\uff0c func: Callable[[int], int] ,\u8f93\u5165\u53c2\u6570\u5185\u90e8\u5d4c\u5957\u4e86\u4e2d\u62ec\u53f7\uff0c\u4ed4\u7ec6\u60f3\u60f3\u4e5f\u80fd\u660e\u767d\uff0c\u5982\u679c func: Callable[int, int] \u5b9a\u4e49\uff0c\u90a3\u4e48\u8f93\u5165\u53c2\u6570\u548c\u8f93\u51fa\u53c2\u6570\u8be5\u600e\u4e48\u7406\u89e3\u5462\uff1f\u60f3\u660e\u767d\u4e86\uff0c\u4f60\u5c31\u7406\u89e3\u4e86\u3002 \u8fd4\u56de\u751f\u6210\u5668 \u00b6 \u751f\u6210\u5668\u5728Python\u662f\u975e\u5e38\u5e38\u7528\u7684\uff0c\u53ef\u4ee5\u5f88\u5927\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\u5982\u679c\u9700\u8981\u8fd4\u56de\u751f\u6210\u5668\u5bf9\u8c61\u8be5\u600e\u4e48\u505a\u5462\uff1f\u4ece typing \u5305\u4e2d\u5bfc\u5165 Generator .\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4f8b\u5b50\uff0c\u8f93\u5165\u5217\u8868list\uff0c\u9700\u8981\u6bcf\u6b21\u8fd4\u56denum\u4e2a\u6570\u636e\u5757\u3002 from typing import List , Generator import math def get_data ( l : List [ int ], num : int ) -> Generator : \"\"\" \u8f93\u5165list\uff0c \u6bcf\u6b21\u6309\u7167num\u4e2a\u6570 \u8fd4\u56de\u6570\u636e\u5757 :param l: list data :param num: batch size \"\"\" epochs = math . ceil ( len ( l ) / num ) for epoch in range ( epochs ): yield l [ epoch * num :( epoch + 1 ) * num ] for each in get_data ( list ( range ( 98 )), 5 ): print ( each ) \u5c0f\u7ed3 \u00b6 \u672c\u6587\u5206\u522b\u5217\u4e3e\u4e86\u5e38\u7528\u53c2\u6570\u7684\u7c7b\u578b\u6807\u6ce8\u65b9\u6cd5\uff0c\u540c\u65f6\u4e5f\u7ed9\u51fa\u4e86\u591a\u79cd\u53c2\u6570\u7c7b\u578b\uff0c\u4ee5\u53ca\u51fd\u6570\u548c\u751f\u6210\u5668\u4f5c\u4e3a\u53c2\u6570\u8f93\u5165\u7684\u7c7b\u578b\u6807\u6ce8\u65b9\u6cd5\u3002\u53c2\u6570\u7684\u7c7b\u578b\u6807\u6ce8\u662f\u5f88\u91cd\u8981\u7684\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u589e\u5f3a\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002\u5c24\u5176\u662f\u522b\u4eba\u8bfb\u5230\u4f60\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u8d77\u6765\u4f1a\u6e05\u6670\u5f88\u591a\u3002\u66f4\u591a\u8be6\u7ec6\u7684\u8bf4\u660e\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\u6216\u8005\u6e90\u7801\u3002 https://docs.python.org/zh-cn/3.7/library/typing.html# \u21a9","title":"\u7c7b\u578b\u6807\u6ce8"},{"location":"python/typing/#python","text":"\u673a\u5668\u5b66\u4e60\u8d8a\u6765\u8d8a\u706b\uff0c\u5927\u91cf\u7684\u673a\u5668\u5b66\u4e60\u5305\u90fd\u652f\u6301Python\uff0c\u5bfc\u81f4\u4e86Python\u8fd1\u51e0\u5e74\u975e\u5e38\u706b\u7206\uff0c\u5165\u624b\u95e8\u69db\u4f4e\uff0c\u7f16\u7a0b\u7b80\u5355\uff0c\u6982\u5ff5\u975e\u5e38\u5c11\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u65b0\u624b\u5c0f\u767d\u52a0\u5165\u5230Python\u7f16\u7a0b\u3002 Python\u867d\u7136\u7b80\u5355\uff0c\u4f46\u4e5f\u5e26\u6765\u5f88\u591a\u95ee\u9898\u3002\u5c24\u5176\u662f\u5f31\u7c7b\u578b\u4e00\u76f4\u88ab\u8bdf\u75c5\uff0c\u5e73\u65f6\u5728\u5199\u4ee3\u7801\u65f6\uff0c\u7ecf\u5e38\u4e5f\u4f1a\u6a21\u7cca\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u5bfc\u81f4debug\u96be\u5ea6\u589e\u52a0\u3002 \u81ea\u4ecePython3.5\u4ee5\u6765\uff0c\u53d1\u5e03\u4e86 typing \u5305\uff0c\u63a8\u8350\u6807\u6ce8\u7c7b\u578b\uff0c\u5e76\u4e14IDE\u4f1a\u68c0\u67e5\u7c7b\u578b\uff0c\u8ba9Python\u770b\u8d77\u6765\u6709\u70b9 \u9759\u6001\u8bed\u8a00 \u7684\u611f\u89c9\u4e86\u3002\u672c\u6587\u4e3b\u8981\u53c2\u8003Python3.7.5\u7684 \u5b98\u65b9\u6587\u6863 1","title":"Python\u7c7b\u578b\u6807\u6ce8"},{"location":"python/typing/#_1","text":"\u5e38\u7528\u7684\u51e0\u79cd\u7c7b\u578b\uff0c\u5982 int , float , str , List , Tuple , Dict \u3002\u63a5\u4e0b\u6765\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a \u9996\u5148\u5fc5\u987b\u4ece typing \u4e2d\u5bfc\u5165\u7c7b\u578b from typing import List , Dict , Tuple def greeting ( name : str ) -> str : return 'Hello ' + name print ( greeting ( 188 )) \u5982\u679c\u4f60\u8f93\u5165\u7684\u53c2\u6570\u4e0d\u662fstr\uff0cIDE\u5c31\u4f1a\u63d0\u793a\u3002 \u5982\u679c\u4f20\u5165 List , Tuple , Dict \uff0c\u9700\u8981\u7528 [] \u6765\u6307\u5b9a\u5185\u90e8\u57fa\u7840\u7c7b\u578b. def do_nothing ( a : List [ int ], b : Tuple [ int , str ], c : Dict [ str , int ]) -> Dict [ str , str ]: return { 'key' : 'value' } # \u8c03\u7528 do_nothing ([ 19 ], ( 14 , 'some' ), { \"ha\" : 10 }) \u9664\u6b64\u4e4b\u5916\u57fa\u7840\u7c7b\u578b\u662f\u53ef\u4ee5\u76f8\u4e92\u5d4c\u5957\u7684\uff0c\u6bd4\u5982\u5b57\u5178\u7684\u503c\u662f\u5217\u8868\uff0c\u5217\u8868\u4e2d\u5b58\u653e\u5143\u7ec4\uff0c\u4e8e\u662f\u53ef\u4ee5\u8fd9\u6837\u6807\u6ce8\uff1a def do_nothing ( a : Dict [ str , List [ Tuple [ int , int , int ]]], ): pass \u6bd4\u8f83\u590d\u6742\u7684\u7c7b\u578b\u6807\u6ce8\u7528\u8d77\u6765\u5e76\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u6307\u5b9a\u522b\u540d\u3002\u6bd4\u5982\u8ba1\u7b97\u4e00\u4e2a\u70b9\u4e0e\u591a\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c List \u4e2d\u5b58\u653e\u7684 Tuple \u662f\u70b9 Point \uff0c\u5750\u6807\u5c31\u662f\u4e09\u7ef4\u7684\u6d6e\u70b9\u6570\uff0c\u4e8e\u662f\u53ef\u4ee5\u5b9a\u4e49\u522b\u540d Point = Tuple [ float , float , float ] def compute_distance ( p1 : Point , points : List [ Point ]): pass","title":"\u5e38\u7528\u7684\u7c7b\u578b"},{"location":"python/typing/#_2","text":"\u4e0d\u662f\u591a\u4e2a\u53c2\u6570\uff0c\u800c\u662f\u591a\u7c7b\u578b\uff0c\u662f\u8f93\u5165\u53c2\u6570\u53ef\u80fd\u5b58\u5728\u591a\u79cd\u7c7b\u578b\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728Java\u4e2d\u591a\u6001\u6765\u89e3\u51b3\u3002\u800cPython\u672c\u8eab\u662f\u5f31\u7c7b\u578b\uff0c\u8f93\u5165\u53c2\u6570\u6ca1\u6709\u5f3a\u5236\u89c4\u5b9a\uff0c\u8fd9\u4e2a\u65f6\u5019\u8be5\u600e\u4e48\u529e\uff1f\u6bd4\u5982\u4f20\u5165\u53c2\u6570\u53ef\u80fd\u4e3a int , str , float . typing \u5305\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u529e\u6cd5\uff0c\u53ef\u4ee5\u7528 Union \u6765\u5b9a\u4e49: Union [ int , str , float ] \u8f93\u5165\u53c2\u6570\u5fc5\u987b\u662f\u5fc5\u987b\u662f int , str , float .\u5176\u4e2d\u4e4b\u4e00\u3002\u5982\u679c\u4e0d\u786e\u5b9a\u6570\u636e\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u6807\u793a\u4e3a Any \u7c7b\u578b\uff0c\u8868\u793a\u4efb\u610f\u7c7b\u578b\u3002\u5982\u679c\u8f93\u5165\u53c2\u6570\u53ef\u80fd\u662f None \u503c\uff0c\u4e5f\u53ef\u4ee5\u7528 Union \u5b9a\u4e49: Union [ str , None ] # \u6216\u8005 Optional [ str ]","title":"\u591a\u79cd\u7c7b\u578b"},{"location":"python/typing/#_3","text":"\u5982\u679c\u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u5982\u4f55\u6807\u8bb0\u7c7b\u578b\u5462\uff1f\u5176\u5b9e\u4e5f\u4e0d\u590d\u6742\uff0c\u51fd\u6570\u662fcallable\u7684\u7c7b\u578b\uff0c\u540c\u6837\u6307\u5b9a\u4f20\u5165\u548c\u4f20\u51fa\u53c2\u6570\u5373\u53ef\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u6c42\u548c\u7684\u51fd\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u51fd\u6570\u3002 add_all \u53ea\u662f\u628a\u6240\u6709\u7684\u5143\u7d20\u76f8\u52a0\uff0c\u81f3\u4e8e\u5bf9\u6bcf\u4e2a\u5143\u7d20\u505a\u4ec0\u4e48\u64cd\u4f5c\uff0c\u53d6\u51b3\u4e8e\u4f20\u5165\u7684\u51fd\u6570\u4e86\u3002 def add_all ( f : Callable [[ int ], int ], params : List [ int ]): return sum ( map ( f , params )) print ( add_all ( lambda x : x ** 2 , list ( range ( 1 , 10 )))) \u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u6709\u8f93\u5165\u548c\u8f93\u51fa\u503c\u3002\u5b9a\u4e49\u8f83\u4e3a\u9ebb\u70e6\uff0c func: Callable[[int], int] ,\u8f93\u5165\u53c2\u6570\u5185\u90e8\u5d4c\u5957\u4e86\u4e2d\u62ec\u53f7\uff0c\u4ed4\u7ec6\u60f3\u60f3\u4e5f\u80fd\u660e\u767d\uff0c\u5982\u679c func: Callable[int, int] \u5b9a\u4e49\uff0c\u90a3\u4e48\u8f93\u5165\u53c2\u6570\u548c\u8f93\u51fa\u53c2\u6570\u8be5\u600e\u4e48\u7406\u89e3\u5462\uff1f\u60f3\u660e\u767d\u4e86\uff0c\u4f60\u5c31\u7406\u89e3\u4e86\u3002","title":"\u51fd\u6570\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570"},{"location":"python/typing/#_4","text":"\u751f\u6210\u5668\u5728Python\u662f\u975e\u5e38\u5e38\u7528\u7684\uff0c\u53ef\u4ee5\u5f88\u5927\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\u5982\u679c\u9700\u8981\u8fd4\u56de\u751f\u6210\u5668\u5bf9\u8c61\u8be5\u600e\u4e48\u505a\u5462\uff1f\u4ece typing \u5305\u4e2d\u5bfc\u5165 Generator .\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4f8b\u5b50\uff0c\u8f93\u5165\u5217\u8868list\uff0c\u9700\u8981\u6bcf\u6b21\u8fd4\u56denum\u4e2a\u6570\u636e\u5757\u3002 from typing import List , Generator import math def get_data ( l : List [ int ], num : int ) -> Generator : \"\"\" \u8f93\u5165list\uff0c \u6bcf\u6b21\u6309\u7167num\u4e2a\u6570 \u8fd4\u56de\u6570\u636e\u5757 :param l: list data :param num: batch size \"\"\" epochs = math . ceil ( len ( l ) / num ) for epoch in range ( epochs ): yield l [ epoch * num :( epoch + 1 ) * num ] for each in get_data ( list ( range ( 98 )), 5 ): print ( each )","title":"\u8fd4\u56de\u751f\u6210\u5668"},{"location":"python/typing/#_5","text":"\u672c\u6587\u5206\u522b\u5217\u4e3e\u4e86\u5e38\u7528\u53c2\u6570\u7684\u7c7b\u578b\u6807\u6ce8\u65b9\u6cd5\uff0c\u540c\u65f6\u4e5f\u7ed9\u51fa\u4e86\u591a\u79cd\u53c2\u6570\u7c7b\u578b\uff0c\u4ee5\u53ca\u51fd\u6570\u548c\u751f\u6210\u5668\u4f5c\u4e3a\u53c2\u6570\u8f93\u5165\u7684\u7c7b\u578b\u6807\u6ce8\u65b9\u6cd5\u3002\u53c2\u6570\u7684\u7c7b\u578b\u6807\u6ce8\u662f\u5f88\u91cd\u8981\u7684\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u589e\u5f3a\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002\u5c24\u5176\u662f\u522b\u4eba\u8bfb\u5230\u4f60\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u8d77\u6765\u4f1a\u6e05\u6670\u5f88\u591a\u3002\u66f4\u591a\u8be6\u7ec6\u7684\u8bf4\u660e\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\u6216\u8005\u6e90\u7801\u3002 https://docs.python.org/zh-cn/3.7/library/typing.html# \u21a9","title":"\u5c0f\u7ed3"},{"location":"python/variable/","text":"\u53d8\u91cf \u00b6 \u53d8\u91cf\u662f\u4ec0\u4e48 \u00b6 \u53d8\u91cf\u662f\u6307\u5411\u6570\u636e\u5730\u5740\u7684\u6807\u7b7e\uff0c\u4e0d\u662f\u5b58\u50a8\u6570\u636e\u7684\u5730\u5740 1 2 3 4 5 6 7 8 9 10 11 12 13 a = 100 b = a # a b \u7684\u5730\u5740\u662f\u76f8\u540c\u7684 print ( f \"\u53d8\u91cfa\u7684\u5730\u5740\uff1a { id ( a ) } , \u53d8\u91cfb\u7684\u5730\u5740 { id ( b ) } \" ) b = 200 # a b \u5730\u5740\u7684\u4e0d\u540c\u4e86 print ( f \"\u53d8\u91cfa\u7684\u5730\u5740\uff1a { id ( a ) } , \u53d8\u91cfb\u7684\u5730\u5740 { id ( b ) } \" ) b = 100 # \u53d1\u73b0a b\u7684\u5730\u5740\u53c8\u76f8\u540c\u4e86 print ( f \"\u53d8\u91cfa\u7684\u5730\u5740\uff1a { id ( a ) } , \u53d8\u91cfb\u7684\u5730\u5740 { id ( b ) } \" ) \u4e0a\u9762\u505a\u4e86\u4e00\u4e2a\u5c0f\u5b9e\u9a8c\uff0c\u6211\u4eecg\u7ed9\u53d8\u91cfa\u8d4b\u503c100\uff0c\u53d8\u91cfa\u5728\u8d4b\u503c\u7ed9b\uff0c\u4e8e\u662fa\uff0cb\u7684\u5730\u5740\u76f8\u540c\u3002\u91cd\u65b0\u8d4b\u503c200\u7ed9b\uff0c\u4e8e\u662f\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u5730\u5740\u4e0d\u540c\u4e86\u3002\u8bf4\u660e\u6bcf\u6b21\u8d4b\u503c\u64cd\u4f5c\uff0c\u53d8\u91cf\u4f1a\u91cd\u65b0\u6307\u5411\u65b0\u7684\u5730\u5740\u3002\u8fd9\u8ddfC\u8bed\u8a00\u8fd9\u6837\u7684\u9759\u6001\u8bed\u8a00\u4e0d\u540c\uff0c\u9759\u6001\u8bed\u8a00\u58f0\u660e\u53d8\u91cf\u4ee5\u540e\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7c7b\u578b\u5c31\u56fa\u5b9a\u4e86\uff0c\u6bd4\u5982\u6574\u578b\uff0c\u5c31\u53ea\u80fd\u653e\u6574\u6570\uff0c\u4e0d\u540c\u7684\u8d4b\u503c\u64cd\u4f5c\u90fd\u662f\u653e\u5728\u76f8\u540c\u5185\u5b58\u4f4d\u7f6e\u3002 \u7531\u4e8e\u53d8\u91cf\u4ec5\u4ec5\u53ea\u662f\u6807\u7b7e\uff0c\u53d8\u91cf\u5728\u4f7f\u7528\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u58f0\u660e\u7c7b\u578b\u4e86\u3002\u5e76\u4e14\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u578b\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u8fd9\u4e2a\u53d8\u91cf\uff0c\u751a\u81f3\u53ef\u4ee5\u628a\u51fd\u6570\u6216\u8005\u7c7b\u8d4b\u503c\u7ed9\u53d8\u91cf\u3002\u8fd9\u5c31\u662f\u5f31\u7c7b\u578b\u5e26\u6765\u7684\u597d\u5904\uff0c\u4f7f\u5f97Python\u4e0a\u624b\u8d77\u6765\u5bb9\u6613\u3002 a = 100 a = \"hello world\" a = True Python\u9664\u4e86\u5f31\u7c7b\u578b\u7b49\u7279\u70b9\uff0c\u5728\u6267\u884c\u7684\u65f6\u5019\u4e0e\u9759\u6001\u8bed\u8a00\u4e5f\u6709\u533a\u522b\u3002Python\u662f\u8fb9\u89e3\u91ca\u8fb9\u8fd0\u884c\u7684\uff0c\u800c\u4e0d\u662f\u7f16\u8bd1\u6210\u5b57\u8282\u7801\u6216\u8005\u673a\u5668\u7801\u4ee5\u540e\u518d\u6267\u884c\u7684\u3002\u8fd9\u4e2a\u7279\u70b9\u8bfb\u8005\u4ee5\u540e\u4f1a\u6162\u6162\u660e\u767d\u3002 \u53d8\u91cf\u7684\u547d\u540d \u00b6 \u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\uff1a \u4ee5\u5b57\u6bcd\u6216\u8005\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u540e\u9762\u53ef\u4ee5\u63a5\u6570\u5b57\u548c\u5b57\u6bcd\u3002 \u5176\u5b9e\u53d8\u91cf\u7684\u547d\u540d\u662f\u4e00\u4e2a\u6bd4\u8f83\u5bbd\u6cdb\u7684\u89c4\u5219\u3002\u7b97\u4e0d\u4e0a\u4ec0\u4e48\u77e5\u8bc6\u70b9\uff0c\u9664\u4e86\u5b66\u6821\u65e0\u804a\u5730\u8003\u8bd5\uff0c\u6ca1\u4eba\u4f1a\u50bb\u4e0d\u62c9\u51e0\u7684\u7528\u5947\u5947\u602a\u602a\u7684\u53d8\u91cf\u540d\u79f0\u3002\u81f3\u4e8e\u53d8\u91cf\u662f\u5426\u5408\u6cd5\uff0cIDE\u4f1a\u63d0\u793a\u4f60\u3002\u4e0d\u7528\u62c5\u5fc3\u4ee5\u4e0b\u56db\u4e2a\u9009\u9879\u90a3\u4e2a\u53d8\u91cf\u4e0d\u5408\u6cd5\u3002","title":"\u53d8\u91cf"},{"location":"python/variable/#_1","text":"","title":"\u53d8\u91cf"},{"location":"python/variable/#_2","text":"\u53d8\u91cf\u662f\u6307\u5411\u6570\u636e\u5730\u5740\u7684\u6807\u7b7e\uff0c\u4e0d\u662f\u5b58\u50a8\u6570\u636e\u7684\u5730\u5740 1 2 3 4 5 6 7 8 9 10 11 12 13 a = 100 b = a # a b \u7684\u5730\u5740\u662f\u76f8\u540c\u7684 print ( f \"\u53d8\u91cfa\u7684\u5730\u5740\uff1a { id ( a ) } , \u53d8\u91cfb\u7684\u5730\u5740 { id ( b ) } \" ) b = 200 # a b \u5730\u5740\u7684\u4e0d\u540c\u4e86 print ( f \"\u53d8\u91cfa\u7684\u5730\u5740\uff1a { id ( a ) } , \u53d8\u91cfb\u7684\u5730\u5740 { id ( b ) } \" ) b = 100 # \u53d1\u73b0a b\u7684\u5730\u5740\u53c8\u76f8\u540c\u4e86 print ( f \"\u53d8\u91cfa\u7684\u5730\u5740\uff1a { id ( a ) } , \u53d8\u91cfb\u7684\u5730\u5740 { id ( b ) } \" ) \u4e0a\u9762\u505a\u4e86\u4e00\u4e2a\u5c0f\u5b9e\u9a8c\uff0c\u6211\u4eecg\u7ed9\u53d8\u91cfa\u8d4b\u503c100\uff0c\u53d8\u91cfa\u5728\u8d4b\u503c\u7ed9b\uff0c\u4e8e\u662fa\uff0cb\u7684\u5730\u5740\u76f8\u540c\u3002\u91cd\u65b0\u8d4b\u503c200\u7ed9b\uff0c\u4e8e\u662f\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u5730\u5740\u4e0d\u540c\u4e86\u3002\u8bf4\u660e\u6bcf\u6b21\u8d4b\u503c\u64cd\u4f5c\uff0c\u53d8\u91cf\u4f1a\u91cd\u65b0\u6307\u5411\u65b0\u7684\u5730\u5740\u3002\u8fd9\u8ddfC\u8bed\u8a00\u8fd9\u6837\u7684\u9759\u6001\u8bed\u8a00\u4e0d\u540c\uff0c\u9759\u6001\u8bed\u8a00\u58f0\u660e\u53d8\u91cf\u4ee5\u540e\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7c7b\u578b\u5c31\u56fa\u5b9a\u4e86\uff0c\u6bd4\u5982\u6574\u578b\uff0c\u5c31\u53ea\u80fd\u653e\u6574\u6570\uff0c\u4e0d\u540c\u7684\u8d4b\u503c\u64cd\u4f5c\u90fd\u662f\u653e\u5728\u76f8\u540c\u5185\u5b58\u4f4d\u7f6e\u3002 \u7531\u4e8e\u53d8\u91cf\u4ec5\u4ec5\u53ea\u662f\u6807\u7b7e\uff0c\u53d8\u91cf\u5728\u4f7f\u7528\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u58f0\u660e\u7c7b\u578b\u4e86\u3002\u5e76\u4e14\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u578b\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u8fd9\u4e2a\u53d8\u91cf\uff0c\u751a\u81f3\u53ef\u4ee5\u628a\u51fd\u6570\u6216\u8005\u7c7b\u8d4b\u503c\u7ed9\u53d8\u91cf\u3002\u8fd9\u5c31\u662f\u5f31\u7c7b\u578b\u5e26\u6765\u7684\u597d\u5904\uff0c\u4f7f\u5f97Python\u4e0a\u624b\u8d77\u6765\u5bb9\u6613\u3002 a = 100 a = \"hello world\" a = True Python\u9664\u4e86\u5f31\u7c7b\u578b\u7b49\u7279\u70b9\uff0c\u5728\u6267\u884c\u7684\u65f6\u5019\u4e0e\u9759\u6001\u8bed\u8a00\u4e5f\u6709\u533a\u522b\u3002Python\u662f\u8fb9\u89e3\u91ca\u8fb9\u8fd0\u884c\u7684\uff0c\u800c\u4e0d\u662f\u7f16\u8bd1\u6210\u5b57\u8282\u7801\u6216\u8005\u673a\u5668\u7801\u4ee5\u540e\u518d\u6267\u884c\u7684\u3002\u8fd9\u4e2a\u7279\u70b9\u8bfb\u8005\u4ee5\u540e\u4f1a\u6162\u6162\u660e\u767d\u3002","title":"\u53d8\u91cf\u662f\u4ec0\u4e48"},{"location":"python/variable/#_3","text":"\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\uff1a \u4ee5\u5b57\u6bcd\u6216\u8005\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u540e\u9762\u53ef\u4ee5\u63a5\u6570\u5b57\u548c\u5b57\u6bcd\u3002 \u5176\u5b9e\u53d8\u91cf\u7684\u547d\u540d\u662f\u4e00\u4e2a\u6bd4\u8f83\u5bbd\u6cdb\u7684\u89c4\u5219\u3002\u7b97\u4e0d\u4e0a\u4ec0\u4e48\u77e5\u8bc6\u70b9\uff0c\u9664\u4e86\u5b66\u6821\u65e0\u804a\u5730\u8003\u8bd5\uff0c\u6ca1\u4eba\u4f1a\u50bb\u4e0d\u62c9\u51e0\u7684\u7528\u5947\u5947\u602a\u602a\u7684\u53d8\u91cf\u540d\u79f0\u3002\u81f3\u4e8e\u53d8\u91cf\u662f\u5426\u5408\u6cd5\uff0cIDE\u4f1a\u63d0\u793a\u4f60\u3002\u4e0d\u7528\u62c5\u5fc3\u4ee5\u4e0b\u56db\u4e2a\u9009\u9879\u90a3\u4e2a\u53d8\u91cf\u4e0d\u5408\u6cd5\u3002","title":"\u53d8\u91cf\u7684\u547d\u540d"}]}